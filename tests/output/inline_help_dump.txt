This file is generated by running test_help.py, and shows the output of --help for every possible command.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs --help
Usage: bmcs [OPTIONS] COMMAND [ARGS]...

  Oracle Bare Metal Cloud Services command line interface, with support for
  Block Volume, Compute, IAM, Networking, and Object Storage Services.

  Most commands must specify a service, followed by a resource type and then
  an action. For example, to list users (where $T contains the OCID of the
  current tenant):

    bmcs iam user list --compartment-id $T

  Output is in JSON format.

  For information on configuration, see https://docs.us-
  phoenix-1.oraclecloud.com/Content/API/Concepts/sdkconfig.htm.

Options:
  -v, --version       Show the version and exit.
  --config-file TEXT  The path to the config file.  [default:
                      ~/.oraclebmc/config]
  --profile TEXT      The profile in the config file to load.  [default:
                      DEFAULT]
  --request-id TEXT   The request id to use for tracking the request.
  --region TEXT       The region to make calls against.  For a list of valid
                      region names use the command: "bmcs iam region list".
  --endpoint TEXT     The value to use as the service endpoint, including any
                      required API version path. For example: "https://iaas.us-
                      phoenix-1.oracle.com/20160918". This will override the
                      default service endpoint / API version path. Note: The
                      --region parameter is the recommended way of targeting
                      different regions.
  --cert-bundle TEXT  The full path to a CA certificate bundle to be used for
                      SSL verification. This will override the default CA
                      certificate bundle.
  -d, --debug         Show additional debug information.
  -?, -h, --help      Show this message and exit.

Commands:
  bv       Block Volume Service
  compute  Compute Service
  iam      Identity and Access Management Service
  network  Networking Service
  os       Object Storage Service
  setup    Setup commands for CLI

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs bv --help
Usage: bmcs bv [OPTIONS] COMMAND [ARGS]...

  Block Volume Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  backup  A point-in-time copy of a volume that can...
  volume  A detachable block volume device that allows...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs bv backup --help
Usage: bmcs bv backup [OPTIONS] COMMAND [ARGS]...

  A point-in-time copy of a volume that can then be used to create a new block
  volume or recover a block volume. For more information, see [Overview of
  Cloud Volume Storage].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new backup of the specified volume.
  delete  Deletes a volume backup.
  get     Gets information for the specified volume...
  list    Lists the volume backups in the specified...
  update  Updates the display name for the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs bv backup create --help
Usage: bmcs bv backup create [OPTIONS]

  Creates a new backup of the specified volume. For general information about
  volume backups, see [Overview of Block Volume Service Backups]

  When the request is received, the backup object is in a REQUEST_RECEIVED
  state. When the data is imaged, it goes into a CREATING state. After the
  backup is fully uploaded to the cloud, it goes into an AVAILABLE state.

Options:
  --volume-id TEXT     The OCID of the volume that needs to be backed up.
                       [required]
  --display-name TEXT  A user-friendly name for the volume backup. Does not have
                       to be unique and it's changeable. Avoid entering
                       confidential information.
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs bv backup delete --help
Usage: bmcs bv backup delete [OPTIONS]

  Deletes a volume backup.

Options:
  --volume-backup-id TEXT  The OCID of the volume backup.  [required]
  --if-match TEXT          For optimistic concurrency control. In the PUT or
                           DELETE call for a resource, set the `if-match`
                           parameter to the value of the etag from a previous
                           GET or POST response for that resource.  The resource
                           will be updated or deleted only if the etag you
                           provide matches the resource's current etag value.
  --force                  Perform deletion without prompting for confirmation.
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs bv backup get --help
Usage: bmcs bv backup get [OPTIONS]

  Gets information for the specified volume backup.

Options:
  --volume-backup-id TEXT  The OCID of the volume backup.  [required]
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs bv backup list --help
Usage: bmcs bv backup list [OPTIONS]

  Lists the volume backups in the specified compartment. You can filter the
  results by volume.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment.  [required]
  --volume-id TEXT           The OCID of the volume.
  --limit TEXT               The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs bv backup update --help
Usage: bmcs bv backup update [OPTIONS]

  Updates the display name for the specified volume backup. Avoid entering
  confidential information.

Options:
  --volume-backup-id TEXT  The OCID of the volume backup.  [required]
  --display-name TEXT      A friendly user-specified name for the volume backup.
                           Avoid entering confidential information.
  --if-match TEXT          For optimistic concurrency control. In the PUT or
                           DELETE call for a resource, set the `if-match`
                           parameter to the value of the etag from a previous
                           GET or POST response for that resource.  The resource
                           will be updated or deleted only if the etag you
                           provide matches the resource's current etag value.
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs bv volume --help
Usage: bmcs bv volume [OPTIONS] COMMAND [ARGS]...

  A detachable block volume device that allows you to dynamically expand the
  storage capacity of an instance. For more information, see [Overview of
  Cloud Volume Storage].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new volume in the specified...
  delete  Deletes the specified volume.
  get     Gets information for the specified volume.
  list    Lists the volumes in the specified...
  update  Updates the specified volume's display name.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs bv volume create --help
Usage: bmcs bv volume create [OPTIONS]

  Creates a new volume in the specified compartment. Volumes can be created in
  sizes ranging from 50 GB (51200 MB) to 2 TB (2097152 MB), in 1 GB (1024 MB)
  increments. By default, volumes are 1 TB (1048576 MB). For general
  information about block volumes, see [Overview of Block Volume Service].

  A volume and instance can be in separate compartments but must be in the
  same Availability Domain. For information about access control and
  compartments, see [Overview of the IAM Service]. For information about
  Availability Domains, see [Regions and Availability Domains]. To get a list
  of Availability Domains, use the `ListAvailabilityDomains` operation in the
  Identity and Access Management Service API.

  You may optionally specify a *display name* for the volume, which is simply
  a friendly name or description. It does not have to be unique, and you can
  change it. Avoid entering confidential information.

Options:
  --availability-domain TEXT  The Availability Domain of the volume.
                              
                              Example:
                              `Uocm:PHX-AD-1`  [required]
  -c, --compartment-id TEXT   The OCID of the compartment that contains the
                              volume.  [required]
  --display-name TEXT         A user-friendly name. Does not have to be unique,
                              and it's changeable. Avoid entering confidential
                              information.
  --size-in-mbs TEXT          The size of the volume in MBs.
  --volume-backup-id TEXT     The OCID of the volume backup from which the data
                              should be restored on the newly created volume.
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs bv volume delete --help
Usage: bmcs bv volume delete [OPTIONS]

  Deletes the specified volume. The volume cannot have an active connection to
  an instance. To disconnect the volume from a connected instance, see
  [Disconnecting From a Volume]. **Warning:** All data on the volume will be
  permanently lost when the volume is deleted.

Options:
  --volume-id TEXT  The OCID of the volume.  [required]
  --if-match TEXT   For optimistic concurrency control. In the PUT or DELETE
                    call for a resource, set the `if-match` parameter to the
                    value of the etag from a previous GET or POST response for
                    that resource.  The resource will be updated or deleted only
                    if the etag you provide matches the resource's current etag
                    value.
  --force           Perform deletion without prompting for confirmation.
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs bv volume get --help
Usage: bmcs bv volume get [OPTIONS]

  Gets information for the specified volume.

Options:
  --volume-id TEXT  The OCID of the volume.  [required]
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs bv volume list --help
Usage: bmcs bv volume list [OPTIONS]

  Lists the volumes in the specified compartment and Availability Domain.

Options:
  -c, --compartment-id TEXT   The OCID of the compartment.  [required]
  --availability-domain TEXT  The name of the Availability Domain.
                              
                              Example:
                              `Uocm:PHX-AD-1`
  --limit TEXT                The maximum number of items to return in a
                              paginated "List" call.
                              
                              Example: `500`
  --page TEXT                 The value of the `opc-next-page` response header
                              from the previous "List" call.
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs bv volume update --help
Usage: bmcs bv volume update [OPTIONS]

  Updates the specified volume's display name. Avoid entering confidential
  information.

Options:
  --volume-id TEXT     The OCID of the volume.  [required]
  --display-name TEXT  A user-friendly name. Does not have to be unique, and
                       it's changeable. Avoid entering confidential information.
  --if-match TEXT      For optimistic concurrency control. In the PUT or DELETE
                       call for a resource, set the `if-match` parameter to the
                       value of the etag from a previous GET or POST response
                       for that resource.  The resource will be updated or
                       deleted only if the etag you provide matches the
                       resource's current etag value.
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute --help
Usage: bmcs compute [OPTIONS] COMMAND [ARGS]...

  Compute Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  console-history    An instance's serial console data.
  image              A boot disk image for launching an instance.
  instance           A compute host.
  shape              A compute instance shape that can be used in...
  vnic-attachment    Represents an attachment between a VNIC and...
  volume-attachment  A base object for all types of attachments...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute console-history --help
Usage: bmcs compute console-history [OPTIONS] COMMAND [ARGS]...

  An instance's serial console data. It includes configuration messages that
  occur when the instance boots, such as kernel and BIOS messages, and is
  useful for checking the status of the instance or diagnosing problems. The
  console data is minimally formatted ASCII text.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  capture      Captures the most recent serial console data...
  delete       Deletes the specified console history...
  get          Shows the metadata for the specified console...
  get-content  Gets the actual console history data (not the...
  list         Lists the console history metadata for the...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute console-history capture --help
Usage: bmcs compute console-history capture [OPTIONS]

  Captures the most recent serial console data (up to a megabyte) for the
  specified instance.

  The `CaptureConsoleHistory` operation works with the other console history
  operations as described below.

  1. Use `CaptureConsoleHistory` to request the capture of up to a megabyte of
  the most recent console history. This call returns a `ConsoleHistory`
  object. The object will have a state of REQUESTED. 2. Wait for the capture
  operation to succeed by polling `GetConsoleHistory` with the identifier of
  the console history metadata. The state of the `ConsoleHistory` object will
  go from REQUESTED to GETTING-HISTORY and then SUCCEEDED (or FAILED). 3. Use
  `GetConsoleHistoryContent` to get the actual console history data (not the
  metadata). 4. Optionally, use `DeleteConsoleHistory` to delete the console
  history metadata and the console history data.

Options:
  --instance-id TEXT  The OCID of the instance to get the console history from.
                      [required]
  -?, -h, --help      Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute console-history delete --help
Usage: bmcs compute console-history delete [OPTIONS]

  Deletes the specified console history metadata and the console history data.

Options:
  --instance-console-history-id TEXT
                                  The OCID of the console history.  [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute console-history get --help
Usage: bmcs compute console-history get [OPTIONS]

  Shows the metadata for the specified console history. See
  [CaptureConsoleHistory] for details about using the console history
  operations.

Options:
  --instance-console-history-id TEXT
                                  The OCID of the console history.  [required]
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute console-history get-content --help
Usage: bmcs compute console-history get-content [OPTIONS]

  Gets the actual console history data (not the metadata). See
  [CaptureConsoleHistory] for details about using the console history
  operations.

Options:
  --instance-console-history-id TEXT
                                  The OCID of the console history.  [required]
  --file FILENAME                 The name of the file that will receive the
                                  response data, or '-' to write to STDOUT.
                                  [required]
  --offset TEXT                   Offset of the snapshot data to retrieve.
  --length TEXT                   Length of the snapshot data to retrieve.
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute console-history list --help
Usage: bmcs compute console-history list [OPTIONS]

  Lists the console history metadata for the specified compartment or
  instance.

Options:
  -c, --compartment-id TEXT   The OCID of the compartment.  [required]
  --availability-domain TEXT  The name of the Availability Domain.
                              
                              Example:
                              `Uocm:PHX-AD-1`
  --limit TEXT                The maximum number of items to return in a
                              paginated "List" call.
                              
                              Example: `500`
  --page TEXT                 The value of the `opc-next-page` response header
                              from the previous "List" call.
  --instance-id TEXT          The OCID of the instance.
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute image --help
Usage: bmcs compute image [OPTIONS] COMMAND [ARGS]...

  A boot disk image for launching an instance. For more information, see
  [Overview of the Compute Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a boot disk image for the specified...
  delete  Deletes an image.
  export  Exports an image to the Oracle Bare Metal...
  get     Gets the specified image.
  import  Imports an exported image from the Oracle...
  list    Lists the available images in the specified...
  update  Updates the display name of the image.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute image create --help
Usage: bmcs compute image create [OPTIONS]

  Creates a boot disk image for the specified instance or imports an exported
  image from the Oracle Bare Metal Cloud Object Storage Service.

  When creating a new image, you must provide the OCID of the instance you
  want to use as the basis for the image, and the OCID of the compartment
  containing that instance. For more information about images, see [Managing
  Custom Images].

  When importing an exported image from the Object Storage Service, you
  specify the source information in [ImageSourceDetails].

  When importing an image based on the namespace, bucket name, and object
  name, use [ImageSourceViaObjectStorageTupleDetails].

  When importing an image based on the Object Storage Service URL, use
  [ImageSourceViaObjectStorageUriDetails]. See [Object Storage URLs] and [pre-
  authenticated requests] for constructing URLs for image import/export.

  For more information about importing exported images, see [Image
  Import/Export].

  You may optionally specify a *display name* for the image, which is simply a
  friendly name or description. It does not have to be unique, and you can
  change it. See [UpdateImage]. Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT    The OCID of the compartment containing the
                               instance you want to use as the basis for the
                               image.  [required]
  --display-name TEXT          A user-friendly name for the image. It does not
                               have to be unique, and it's changeable. Avoid
                               entering confidential information.
                               
                               You cannot
                               use an Oracle-provided image name as a custom
                               image name.
                               
                               Example: `My Oracle Linux image`
  --image-source-details TEXT  [DEPRECATED] The use of the `bmcs compute image
                               create` command to import an image from Object
                               Storage is deprecated.
                               
                               
                               Please use the `bmcs
                               compute image import` command instead.
                               
                               Details
                               for creating an image through import 
                               
                               Example:
                               '{ "objectName": "image-to-import.qcow2",
                               "bucketName": "MyBucket", "namespaceName":
                               "MyNamespace", "sourceType": "objectStorageTuple"
                               }'
                               
                               or
                               
                               '{ "sourceUri":
                               "https://objectstorage.us-phoenix-1.oraclecloud.c
                               om/n/MyNamespace/b/MyBucket/o/image-to-
                               import.qcow2", "sourceType": "objectStorageUri"
                               }'
  --instance-id TEXT           The OCID of the instance you want to use as the
                               basis for the image.
  -?, -h, --help               Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute image delete --help
Usage: bmcs compute image delete [OPTIONS]

  Deletes an image.

Options:
  --image-id TEXT  The OCID of the image.  [required]
  --if-match TEXT  For optimistic concurrency control. In the PUT or DELETE call
                   for a resource, set the `if-match` parameter to the value of
                   the etag from a previous GET or POST response for that
                   resource.  The resource will be updated or deleted only if
                   the etag you provide matches the resource's current etag
                   value.
  --force          Perform deletion without prompting for confirmation.
  -?, -h, --help   Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute image export --help
Usage: bmcs compute image export [OPTIONS] COMMAND [ARGS]...

  Exports an image to the Oracle Bare Metal Cloud Object Storage Service. You
  can use the Object Storage Service URL, or the namespace, bucket name, and
  object name when specifying the location to export to.

  For more information about exporting images, see [Image Import/Export].

  To perform an image export, you need write access to the Object Storage
  Service bucket for the image, see [Let Users Write Objects to Object Storage
  Buckets].

  See [Object Storage URLs] and [pre-authenticated requests] for constructing
  URLs for image import/export.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  to-object      Exports the specified image to the Oracle...
  to-object-uri  Exports the specified image to the Oracle...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute image export to-object --help
Usage: bmcs compute image export to-object [OPTIONS]

  Exports the specified image to the Oracle Bare Metal Cloud Object Storage
  Service using the namespace, bucket name, and object name to identify the
  location to export to.

  For more information about exporting images, see [Image Import/Export].

  To perform an image export, you need write access to the Object Storage
  Service bucket for the image, see [Let Users Write Objects to Object Storage
  Buckets].

Options:
  --image-id TEXT          The OCID of the image.  [required]
  --if-match TEXT          For optimistic concurrency control. In the PUT or
                           DELETE call for a resource, set the `if-match`
                           parameter to the value of the etag from a previous
                           GET or POST response for that resource.  The resource
                           will be updated or deleted only if the etag you
                           provide matches the resource's current etag value.
  -ns, --namespace TEXT    The Object Storage Service namespace to export the
                           image to.  [required]
  -bn, --bucket-name TEXT  The name of the bucket to export the image to.
                           [required]
  --name TEXT              The name which will be given to the exported image
                           object.  [required]
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute image export to-object-uri --help
Usage: bmcs compute image export to-object-uri [OPTIONS]

  Exports the specified image to the Oracle Bare Metal Cloud Object Storage
  Service using the Object Storage Service URL to identify the location to
  export to.

  For more information about exporting images, see [Image Import/Export].

  See [Object Storage URLs] and [pre-authenticated requests] for constructing
  URLs for image import/export.

Options:
  --image-id TEXT  The OCID of the image.  [required]
  --if-match TEXT  For optimistic concurrency control. In the PUT or DELETE call
                   for a resource, set the `if-match` parameter to the value of
                   the etag from a previous GET or POST response for that
                   resource.  The resource will be updated or deleted only if
                   the etag you provide matches the resource's current etag
                   value.
  --uri TEXT       The Object Storage URL to export the image to.  [required]
  -?, -h, --help   Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute image get --help
Usage: bmcs compute image get [OPTIONS]

  Gets the specified image.

Options:
  --image-id TEXT  The OCID of the image.  [required]
  -?, -h, --help   Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute image import --help
Usage: bmcs compute image import [OPTIONS] COMMAND [ARGS]...

  Imports an exported image from the Oracle Bare Metal Cloud Object Storage
  Service. You can use the Object Storage Service URL, or the namespace,
  bucket name, and object name when specifying the location to import from.

  For more information about importing exported images, see [Image
  Import/Export].

  See [Object Storage URLs] and [pre-authenticated requests] for constructing
  URLs for image import/export.

  You may optionally specify a display name for the image, which is simply a
  friendly name or description. It does not have to be unique, and you can
  change it. See [UpdateImage]. Avoid entering confidential information.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  from-object      Imports an exported image from the Oracle...
  from-object-uri  Imports an exported image from the Oracle...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute image import from-object --help
Usage: bmcs compute image import from-object [OPTIONS]

  Imports an exported image from the Oracle Bare Metal Cloud Object Storage
  Service using the namespace, bucket name, and object name to identify the
  location to import from.

  For more information about importing exported images, see [Image
  Import/Export].

  You may optionally specify a display name for the image, which is simply a
  friendly name or description. It does not have to be unique, and you can
  change it. See [UpdateImage]. Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment containing the instance
                             you want to use as the basis for the image.
                             [required]
  --display-name TEXT        A user-friendly name for the image. It does not
                             have to be unique, and it's changeable. Avoid
                             entering confidential information.
                             
                             You cannot use
                             an Oracle-provided image name as a custom image
                             name.
                             
                             Example: `My Oracle Linux image`
  -ns, --namespace TEXT      The Object Storage Service namespace to import the
                             image from.  [required]
  -bn, --bucket-name TEXT    The name of the bucket to import the image from.
                             [required]
  --name TEXT                The name of the object identifying the image to
                             import.  [required]
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute image import from-object-uri --help
Usage: bmcs compute image import from-object-uri [OPTIONS]

  Imports an exported image from the Oracle Bare Metal Cloud Object Storage
  Service using the Object Storage Service URL to identify the location to
  import from.

  For more information about importing exported images, see [Image
  Import/Export].

  See [Object Storage URLs] and [pre-authenticated requests] for constructing
  URLs for image import/export.

  You may optionally specify a display name for the image, which is simply a
  friendly name or description. It does not have to be unique, and you can
  change it. See [UpdateImage]. Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment containing the instance
                             you want to use as the basis for the image.
                             [required]
  --display-name TEXT        A user-friendly name for the image. It does not
                             have to be unique, and it's changeable. Avoid
                             entering confidential information.
                             
                             You cannot use
                             an Oracle-provided image name as a custom image
                             name.
                             
                             Example: `My Oracle Linux image`
  --uri TEXT                 The Object Storage URL to import the image from.
                             [required]
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute image list --help
Usage: bmcs compute image list [OPTIONS]

  Lists the available images in the specified compartment. For more
  information about images, see [Managing Custom Images].

Options:
  -c, --compartment-id TEXT       The OCID of the compartment.  [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
                                  
                                  Example: `My new
                                  resource`
  --operating-system TEXT         The image's operating system.
                                  
                                  Example:
                                  `Oracle Linux`
  --operating-system-version TEXT
                                  The image's operating system version.
                                  Example: `7.2`
  --limit TEXT                    The maximum number of items to return in a
                                  paginated "List" call.
                                  
                                  Example: `500`
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute image update --help
Usage: bmcs compute image update [OPTIONS]

  Updates the display name of the image. Avoid entering confidential
  information.

Options:
  --image-id TEXT      The OCID of the image.  [required]
  --display-name TEXT  A user-friendly name. Does not have to be unique, and
                       it's changeable. Avoid entering confidential information.
                       Example: `My custom Oracle Linux image`
  --if-match TEXT      For optimistic concurrency control. In the PUT or DELETE
                       call for a resource, set the `if-match` parameter to the
                       value of the etag from a previous GET or POST response
                       for that resource.  The resource will be updated or
                       deleted only if the etag you provide matches the
                       resource's current etag value.
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute instance --help
Usage: bmcs compute instance [OPTIONS] COMMAND [ARGS]...

  A compute host. The image used to launch the instance determines its
  operating system and other software. The shape specified during the launch
  process determines the number of CPUs and memory allocated to the instance.
  For more information, see [Overview of the Compute Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  action                     Performs one of the power actions (start,...
  attach-vnic                Creates a secondary VNIC and attaches it to...
  detach-vnic                Detaches and deletes the specified secondary...
  get                        Gets information about the specified...
  get-windows-initial-creds  Gets the generated credentials for the...
  launch                     Creates a new instance in the specified...
  list                       Lists the instances in the specified...
  list-vnics                 Lists the VNICs that are attached to the...
  terminate                  Terminates the specified instance.
  update                     Updates the display name of the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute instance action --help
Usage: bmcs compute instance action [OPTIONS]

  Performs one of the power actions (start, stop, softreset, or reset) on the
  specified instance.

  **start** - power on

  **stop** - power off

  **softreset** - ACPI shutdown and power on

  **reset** - power off and power on

  Note that the **stop** state has no effect on the resources you consume.
  Billing continues for instances that you stop, and related resources
  continue to apply against any relevant quotas. You must terminate an
  instance ([TerminateInstance]) to remove its resources from billing and
  quotas.

Options:
  --instance-id TEXT  The OCID of the instance.  [required]
  --action TEXT       The action to perform on the instance.  [required]
  --if-match TEXT     For optimistic concurrency control. In the PUT or DELETE
                      call for a resource, set the `if-match` parameter to the
                      value of the etag from a previous GET or POST response for
                      that resource.  The resource will be updated or deleted
                      only if the etag you provide matches the resource's
                      current etag value.
  -?, -h, --help      Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute instance attach-vnic --help
Usage: bmcs compute instance attach-vnic [OPTIONS]

  Creates a secondary VNIC and attaches it to the specified instance. For more
  information about secondary VNICs, see [Managing Virtual Network Interface
  Cards (VNICs)].

Options:
  --instance-id TEXT          The OCID of the instance.  [required]
  --subnet-id TEXT            The OCID of the subnet to create the VNIC in.
                              [required]
  --vnic-display-name TEXT    A user-friendly name for the VNIC. Does not have
                              to be unique.
  --assign-public-ip BOOLEAN  Whether the VNIC should be assigned a public IP
                              address. Defaults to whether the subnet is public
                              or private. If not set and the VNIC is being
                              created in a private subnet (i.e., where
                              prohibitPublicIpOnVnic=true in the Subnet), then
                              no public IP address is assigned. If not set and
                              the subnet is public
                              (prohibitPublicIpOnVnic=false), then a public IP
                              address is assigned. If set to true and
                              prohibitPublicIpOnVnic=true, an error is returned.
  --private-ip TEXT           A private IP address of your choice to assign to
                              the VNIC. Must be an available IP address within
                              the subnet's CIDR. If no value is specified, a
                              private IP address from the subnet will be
                              automatically assigned.
  --hostname-label TEXT       The hostname for the VNIC. Used for DNS. The value
                              is the hostname portion of the VNIC's fully
                              qualified domain name (FQDN) (e.g., `bminstance-1`
                              in FQDN
                              `bminstance-1.subnet123.vcn1.oraclevcn.com`). Must
                              be unique across all VNICs in the subnet and
                              comply with [RFC
                              952](https://tools.ietf.org/html/rfc952) and [RFC
                              1123](https://tools.ietf.org/html/rfc1123). The
                              value can be retrieved from the
                              [Vnic](#/en/iaas/20160918/Vnic/).
  --wait                      If set, then wait for the attachment to complete
                              and return the newly attached VNIC. If not set,
                              then the command will not wait and will return
                              nothing on success.
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute instance detach-vnic --help
Usage: bmcs compute instance detach-vnic [OPTIONS]

  Detaches and deletes the specified secondary VNIC. This operation cannot be
  used on the instance's primary VNIC. When you terminate an instance, all
  attached VNICs (primary and secondary) are automatically detached and
  deleted.

Options:
  --vnic-id TEXT             The OCID of the VNIC.  [required]
  -c, --compartment-id TEXT  The OCID of the instance's compartment.  [required]
  --force                    Perform deletion without prompting for
                             confirmation.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute instance get --help
Usage: bmcs compute instance get [OPTIONS]

  Gets information about the specified instance.

Options:
  --instance-id TEXT  The OCID of the instance.  [required]
  -?, -h, --help      Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute instance get-windows-initial-creds --help
Usage: bmcs compute instance get-windows-initial-creds [OPTIONS]

  Gets the generated credentials for the instance. Only works for Windows
  instances. The returned credentials are only valid for the initial login.

Options:
  --instance-id TEXT  The OCID of the instance.  [required]
  -?, -h, --help      Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute instance launch --help
Usage: bmcs compute instance launch [OPTIONS]

  Creates a new instance in the specified compartment and the specified
  Availability Domain. For general information about instances, see [Overview
  of the Compute Service].

  For information about access control and compartments, see [Overview of the
  IAM Service].

  For information about Availability Domains, see [Regions and Availability
  Domains]. To get a list of Availability Domains, use the
  `ListAvailabilityDomains` operation in the Identity and Access Management
  Service API.

  All Oracle Bare Metal Cloud Services resources, including instances, get an
  Oracle-assigned, unique ID called an Oracle Cloud Identifier (OCID). When
  you create a resource, you can find its OCID in the response. You can also
  retrieve a resource's OCID by using a List API operation on that resource
  type, or by viewing the resource in the Console.

  When you launch an instance, it is automatically attached to a virtual
  network interface card (VNIC), called the *primary VNIC*. The VNIC has a
  private IP address from the subnet's CIDR. You can either assign a private
  IP address of your choice or let Oracle automatically assign one. You can
  choose whether the instance has a public IP address. To retrieve the
  addresses, use the [ListVnicAttachments] operation to get the VNIC ID for
  the instance, and then call [GetVnic] with the VNIC ID.

  You can later add secondary VNICs to an instance. For more information, see
  [Managing Virtual Network Interface Cards (VNICs)].

Options:
  --availability-domain TEXT      The Availability Domain of the instance.
                                  Example: `Uocm:PHX-AD-1`  [required]
  -c, --compartment-id TEXT       The OCID of the compartment.  [required]
  --image-id TEXT                 The OCID of the image used to boot the
                                  instance.  [required]
  --shape TEXT                    The shape of an instance. The shape determines
                                  the number of CPUs, amount of memory, and
                                  other resources allocated to the instance.
                                  You can enumerate all available shapes by
                                  calling [ListShapes].  [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
                                  
                                  Example: `My bare
                                  metal instance`
  --extended-metadata TEXT        Additional metadata key/value pairs that you
                                  provide.  They serve a similar purpose and
                                  functionality from fields in the 'metadata'
                                  object.
                                  
                                  They are distinguished from
                                  'metadata' fields in that these can be nested
                                  JSON objects (whereas 'metadata' fields are
                                  string/string maps only).
                                  
                                  If you don't need
                                  nested metadata values, it is strongly advised
                                  to avoid using this object and use the
                                  Metadata object instead.
  --hostname-label TEXT           The hostname for the VNIC that is created
                                  during instance launch. Used for DNS. The
                                  value is the hostname portion of the
                                  instance's fully qualified domain name (FQDN)
                                  (e.g., `bminstance-1` in FQDN
                                  `bminstance-1.subnet123.vcn1.oraclevcn.com`).
                                  Must be unique across all VNICs in the subnet
                                  and comply with [RFC 952] and [RFC 1123]. The
                                  value cannot be changed, and it can be
                                  retrieved from the [Vnic object].
                                  
                                  For more
                                  information, see [DNS in Your Virtual Cloud
                                  Network].
                                  
                                  Example: `bminstance-1`
  --ipxe-script-file FILENAME     This is an advanced option.
                                  
                                  When an Oracle
                                  Bare Metal Cloud Services or virtual machine
                                  instance boots, the iPXE firmware that runs on
                                  the instance is configured to run an iPXE
                                  script to continue the boot process.
                                  
                                  If you
                                  want more control over the boot process, you
                                  can provide your own custom iPXE script that
                                  will run when the instance boots; however, you
                                  should be aware that the same iPXE script will
                                  run every time an instance boots; not only
                                  after the initial LaunchInstance call.
                                  
                                  The
                                  default iPXE script connects to the instance's
                                  local boot volume over iSCSI and performs a
                                  network boot. If you use a custom iPXE script
                                  and want to network-boot from the instance's
                                  local boot volume over iSCSI the same way as
                                  the default iPXE script, you should use the
                                  following iSCSI IP address: 169.254.0.2, and
                                  boot volume IQN: iqn.2015-02.oracle.boot.
                                  
                                  For
                                  more information about the Bring Your Own
                                  Image feature of Oracle Bare Metal Cloud
                                  Services, see [Bring Your Own Image].
                                  
                                  For
                                  more information about iPXE, see
                                  http://ipxe.org.
  --metadata TEXT                 Custom metadata key/value pairs that you
                                  provide, such as the SSH public key required
                                  to connect to the instance. For more info see
                                  documentation: https://docs.us-phoenix-1.oracl
                                  ecloud.com/api/#/en/iaas/20160918/requests/Lau
                                  nchInstanceDetails. This must be provided in
                                  JSON format.
                                  
                                  Note: user_data and
                                  ssh_authorized_keys can instead be specified
                                  using the parameters --user-data-file and
                                  --ssh-authorized-keys-file.
                                  
                                  Example:
                                  '{"ssh_authorized_keys": "ssh-rsa AAAAB3NzaC1y
                                  c2EAAAADAQABAAABAQDbVpuGODmhsRZOLWNgm0aEYUoWID
                                  SPNWHmg2M6mZpmZNHfiNfx2dSofxUpKOiu5S8Th52AuAHS
                                  mkzNe6lXBO9wxnjOvkowe1mAleRTEl8zPI8Jkz6HrmJCzH
                                  EtS04kC4bx+tXRZhIfRq1uGaPcriKyquTnQs52Ahoxgw5v
                                  dXXQMwxWZLAcyaP01JrZwcUqPlB/GRiBFSTj0E/AIiVW3A
                                  PNME5HjreOd/djjPRpvWu7AUpOqskG38kr8lhxo1hJifqe
                                  Mg5W7cQsecTLJHgTDAPJD68ujM93jdzV2llIXwR1zyl80i
                                  6c3lDLyLgUrCLM0R1xex/zITTdT6/Z84buS/Xl my
                                  public key"}'
  --subnet-id TEXT                The OCID of the subnet where the VNIC attached
                                  to this instance will be created.
  --vnic-display-name TEXT        A user-friendly name for the default VNIC
                                  attached to this instance. Does not have to be
                                  unique.
  --assign-public-ip BOOLEAN      Whether the default VNIC attached to this
                                  instance should be assigned a public IP
                                  address. Defaults to whether the subnet is
                                  public or private. If not set and the VNIC is
                                  being created in a private subnet (i.e., where
                                  prohibitPublicIpOnVnic=true in the Subnet),
                                  then no public IP address is assigned. If not
                                  set and the subnet is public
                                  (prohibitPublicIpOnVnic=false), then a public
                                  IP address is assigned. If set to true and
                                  prohibitPublicIpOnVnic=true, an error is
                                  returned.
  --private-ip TEXT               A private IP address of your choice to assign
                                  to the default VNIC attached to this instance.
                                  Must be an available IP address within the
                                  subnet's CIDR. If no value is specified, a
                                  private IP address from the subnet will be
                                  automatically assigned.
  --user-data-file FILENAME       A file containing data that Cloud-Init can use
                                  to run custom scripts or provide custom Cloud-
                                  Init configuration. This parameter is a
                                  convenience wrapper around the 'user_data'
                                  field of the --metadata parameter.  Populating
                                  both values in the same call will result in an
                                  error. For more info see Cloud-Init
                                  documentation: https://cloudinit.readthedocs.o
                                  rg/en/latest/topics/format.html.
  --ssh-authorized-keys-file FILENAME
                                  A file containing one or more public SSH keys
                                  to be included in the ~/.ssh/authorized_keys
                                  file for the default user on the instance. Use
                                  a newline character to separate multiple keys.
                                  The SSH keys must be in the format necessary
                                  for the authorized_keys file. This parameter
                                  is a convenience wrapper around the
                                  'ssh_authorized_keys' field of the --metadata
                                  parameter. Populating both values in the same
                                  call will result in an error. For more info
                                  see documentation: https://docs.us-phoenix-1.o
                                  raclecloud.com/api/#/en/iaas/20160918/requests
                                  /LaunchInstanceDetails.
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute instance list --help
Usage: bmcs compute instance list [OPTIONS]

  Lists the instances in the specified compartment and the specified
  Availability Domain. You can filter the results by specifying an instance
  name (the list will include all the identically-named instances in the
  compartment).

Options:
  -c, --compartment-id TEXT   The OCID of the compartment.  [required]
  --availability-domain TEXT  The name of the Availability Domain.
                              
                              Example:
                              `Uocm:PHX-AD-1`
  --display-name TEXT         A user-friendly name. Does not have to be unique,
                              and it's changeable. Avoid entering confidential
                              information.
                              
                              Example: `My new resource`
  --limit TEXT                The maximum number of items to return in a
                              paginated "List" call.
                              
                              Example: `500`
  --page TEXT                 The value of the `opc-next-page` response header
                              from the previous "List" call.
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute instance list-vnics --help
Usage: bmcs compute instance list-vnics [OPTIONS]

  Lists the VNICs that are attached to the specified instance. VNICs that are
  in the process of attaching or detaching will not be returned.

Options:
  --instance-id TEXT  The OCID of the instance.  [required]
  --limit TEXT        The maximum number of items to return in a paginated
                      "List" call.
                      
                      Example: `500`
  --page TEXT         The value of the `opc-next-page` response header from the
                      previous "List" call.
  -?, -h, --help      Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute instance terminate --help
Usage: bmcs compute instance terminate [OPTIONS]

  Terminates the specified instance. Any attached VNICs and volumes are
  automatically detached when the instance terminates.

  This is an asynchronous operation; the instance's `lifecycleState` will
  change to TERMINATING temporarily until the instance is completely removed.

Options:
  --instance-id TEXT  The OCID of the instance.  [required]
  --if-match TEXT     For optimistic concurrency control. In the PUT or DELETE
                      call for a resource, set the `if-match` parameter to the
                      value of the etag from a previous GET or POST response for
                      that resource.  The resource will be updated or deleted
                      only if the etag you provide matches the resource's
                      current etag value.
  --force             Perform deletion without prompting for confirmation.
  -?, -h, --help      Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute instance update --help
Usage: bmcs compute instance update [OPTIONS]

  Updates the display name of the specified instance. Avoid entering
  confidential information. The OCID of the instance remains the same.

Options:
  --instance-id TEXT   The OCID of the instance.  [required]
  --display-name TEXT  A user-friendly name. Does not have to be unique, and
                       it's changeable. Avoid entering confidential information.
                       Example: `My bare metal instance`
  --if-match TEXT      For optimistic concurrency control. In the PUT or DELETE
                       call for a resource, set the `if-match` parameter to the
                       value of the etag from a previous GET or POST response
                       for that resource.  The resource will be updated or
                       deleted only if the etag you provide matches the
                       resource's current etag value.
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute shape --help
Usage: bmcs compute shape [OPTIONS] COMMAND [ARGS]...

  A compute instance shape that can be used in [LaunchInstance]. For more
  information, see [Overview of the Compute Service].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  list  Lists the shapes that can be used to launch...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute shape list --help
Usage: bmcs compute shape list [OPTIONS]

  Lists the shapes that can be used to launch an instance within the specified
  compartment. You can filter the list by compatibility with a specific image.

Options:
  -c, --compartment-id TEXT   The OCID of the compartment.  [required]
  --availability-domain TEXT  The name of the Availability Domain.
                              
                              Example:
                              `Uocm:PHX-AD-1`
  --limit TEXT                The maximum number of items to return in a
                              paginated "List" call.
                              
                              Example: `500`
  --page TEXT                 The value of the `opc-next-page` response header
                              from the previous "List" call.
  --image-id TEXT             The OCID of an image.
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute vnic-attachment --help
Usage: bmcs compute vnic-attachment [OPTIONS] COMMAND [ARGS]...

  Represents an attachment between a VNIC and an instance. For more
  information, see [Managing Virtual Network Interface Cards (VNICs)].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get   Gets the information for the specified VNIC...
  list  Lists the VNIC attachments in the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute vnic-attachment get --help
Usage: bmcs compute vnic-attachment get [OPTIONS]

  Gets the information for the specified VNIC attachment.

Options:
  --vnic-attachment-id TEXT  The OCID of the VNIC attachment.  [required]
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute vnic-attachment list --help
Usage: bmcs compute vnic-attachment list [OPTIONS]

  Lists the VNIC attachments in the specified compartment. A VNIC attachment
  resides in the same compartment as the attached instance. The list can be
  filtered by instance, VNIC, or Availability Domain.

Options:
  -c, --compartment-id TEXT   The OCID of the compartment.  [required]
  --availability-domain TEXT  The name of the Availability Domain.
                              
                              Example:
                              `Uocm:PHX-AD-1`
  --instance-id TEXT          The OCID of the instance.
  --limit TEXT                The maximum number of items to return in a
                              paginated "List" call.
                              
                              Example: `500`
  --page TEXT                 The value of the `opc-next-page` response header
                              from the previous "List" call.
  --vnic-id TEXT              The OCID of the VNIC.
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute volume-attachment --help
Usage: bmcs compute volume-attachment [OPTIONS] COMMAND [ARGS]...

  A base object for all types of attachments between a storage volume and an
  instance. For specific details about iSCSI attachments, see
  [IScsiVolumeAttachment Reference].

  For general information about volume attachments, see [Overview of Block
  Volume Storage].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  attach  Attaches the specified storage volume to the...
  detach  Detaches a storage volume from an instance.
  get     Gets information about the specified volume...
  list    Lists the volume attachments in the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute volume-attachment attach --help
Usage: bmcs compute volume-attachment attach [OPTIONS]

  Attaches the specified storage volume to the specified instance.

Options:
  --instance-id TEXT   The OCID of the instance.  [required]
  --type TEXT          The type of volume. The only supported value is "iscsi".
                       [required]
  --volume-id TEXT     The OCID of the volume.  [required]
  --display-name TEXT  A user-friendly name. Does not have to be unique, and it
                       cannot be changed. Avoid entering confidential
                       information.
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute volume-attachment detach --help
Usage: bmcs compute volume-attachment detach [OPTIONS]

  Detaches a storage volume from an instance. You must specify the OCID of the
  volume attachment.

  This is an asynchronous operation; the attachment's `lifecycleState` will
  change to DETACHING temporarily until the attachment is completely removed.

Options:
  --volume-attachment-id TEXT  The OCID of the volume attachment.  [required]
  --if-match TEXT              For optimistic concurrency control. In the PUT or
                               DELETE call for a resource, set the `if-match`
                               parameter to the value of the etag from a
                               previous GET or POST response for that resource.
                               The resource will be updated or deleted only if
                               the etag you provide matches the resource's
                               current etag value.
  --force                      Perform deletion without prompting for
                               confirmation.
  -?, -h, --help               Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute volume-attachment get --help
Usage: bmcs compute volume-attachment get [OPTIONS]

  Gets information about the specified volume attachment.

Options:
  --volume-attachment-id TEXT  The OCID of the volume attachment.  [required]
  -?, -h, --help               Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs compute volume-attachment list --help
Usage: bmcs compute volume-attachment list [OPTIONS]

  Lists the volume attachments in the specified compartment. You can filter
  the list by specifying an instance OCID, volume OCID, or both.

  Currently, the only supported volume attachment type is
  [IScsiVolumeAttachment].

Options:
  -c, --compartment-id TEXT   The OCID of the compartment.  [required]
  --availability-domain TEXT  The name of the Availability Domain.
                              
                              Example:
                              `Uocm:PHX-AD-1`
  --limit TEXT                The maximum number of items to return in a
                              paginated "List" call.
                              
                              Example: `500`
  --page TEXT                 The value of the `opc-next-page` response header
                              from the previous "List" call.
  --instance-id TEXT          The OCID of the instance.
  --volume-id TEXT            The OCID of the volume.
  -?, -h, --help              Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam --help
Usage: bmcs iam [OPTIONS] COMMAND [ARGS]...

  Identity and Access Management Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  availability-domain  One or more isolated, fault-tolerant Oracle...
  compartment          A collection of related resources.
  group                A collection of users who all need the same...
  policy               A document that specifies the type of access...
  region               A localized geographic area, such as Phoenix,...
  region-subscription  An object that represents your tenancy's...
  user                 An individual employee or system that needs...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam availability-domain --help
Usage: bmcs iam availability-domain [OPTIONS] COMMAND [ARGS]...

  One or more isolated, fault-tolerant Oracle data centers that host cloud
  resources such as instances, volumes, and subnets. A region contains several
  Availability Domains. For more information, see [Regions and Availability
  Domains].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  list  Lists the Availability Domains in your...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam availability-domain list --help
Usage: bmcs iam availability-domain list [OPTIONS]

  Lists the Availability Domains in your tenancy. Specify the OCID of either
  the tenancy or another of your compartments as the value for the compartment
  ID (remember that the tenancy is simply the root compartment). See [Where to
  Get the Tenancy's OCID and User's OCID].

Options:
  -c, --compartment-id TEXT  The OCID of the compartment (remember that the
                             tenancy is simply the root compartment).
                             [required]
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam compartment --help
Usage: bmcs iam compartment [OPTIONS] COMMAND [ARGS]...

  A collection of related resources. Compartments are a fundamental component
  of Oracle Bare Metal Cloud Services for organizing and isolating your cloud
  resources. You use them to clearly separate resources for the purposes of
  measuring usage and billing, access (through the use of IAM Service
  policies), and isolation (separating the resources for one project or
  business unit from another). A common approach is to create a compartment
  for each major part of your organization. For more information, see
  [Overview of the IAM Service] and also [Setting Up Your Tenancy].

  To place a resource in a compartment, simply specify the compartment ID in
  the "Create" request object when initially creating the resource. For
  example, to launch an instance into a particular compartment, specify that
  compartment's OCID in the `LaunchInstance` request. You can't move an
  existing resource from one compartment to another.

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new compartment in your tenancy.
  get     Gets the specified compartment's information.
  list    Lists the compartments in your tenancy.
  update  Updates the specified compartment's...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam compartment create --help
Usage: bmcs iam compartment create [OPTIONS]

  Creates a new compartment in your tenancy.

  **Important:** Compartments cannot be renamed or deleted.

  You must specify your tenancy's OCID as the compartment ID in the request
  object. Remember that the tenancy is simply the root compartment. For
  information about OCIDs, see [Resource Identifiers].

  You must also specify a *name* for the compartment, which must be unique
  across all compartments in your tenancy and cannot be changed. You can use
  this name or the OCID when writing policies that apply to the compartment.
  For more information about policies, see [How Policies Work].

  You must also specify a *description* for the compartment (although it can
  be an empty string). It does not have to be unique, and you can change it
  anytime with [UpdateCompartment].

  After you send your request, the new object's `lifecycleState` will
  temporarily be CREATING. Before using the object, first make sure its
  `lifecycleState` has changed to ACTIVE.

Options:
  -c, --compartment-id TEXT  The OCID of the tenancy containing the compartment.
                             [required]
  --name TEXT                The name you assign to the compartment during
                             creation. The name must be unique across all
                             compartments in the tenancy and cannot be changed.
                             [required]
  --description TEXT         The description you assign to the compartment
                             during creation. Does not have to be unique, and
                             it's changeable.  [required]
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam compartment get --help
Usage: bmcs iam compartment get [OPTIONS]

  Gets the specified compartment's information.

  This operation does not return a list of all the resources inside the
  compartment. There is no single API operation that does that. Compartments
  can contain multiple types of resources (instances, block storage volumes,
  etc.). To find out what's in a compartment, you must call the "List"
  operation for each resource type and specify the compartment's OCID as a
  query parameter in the request. For example, call the [ListInstances]
  operation in the Cloud Compute Service or the [ListVolumes] operation in
  Cloud Block Storage.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment.  [required]
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam compartment list --help
Usage: bmcs iam compartment list [OPTIONS]

  Lists the compartments in your tenancy. You must specify your tenancy's OCID
  as the value for the compartment ID (remember that the tenancy is simply the
  root compartment). See [Where to Get the Tenancy's OCID and User's OCID].

Options:
  -c, --compartment-id TEXT  The OCID of the compartment (remember that the
                             tenancy is simply the root compartment).
                             [required]
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --limit TEXT               The maximum number of items to return in a
                             paginated "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam compartment update --help
Usage: bmcs iam compartment update [OPTIONS]

  Updates the specified compartment's description.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment.  [required]
  --description TEXT         The description you assign to the compartment. Does
                             not have to be unique, and it's changeable.
  --if-match TEXT            For optimistic concurrency control. In the PUT or
                             DELETE call for a resource, set the `if-match`
                             parameter to the value of the etag from a previous
                             GET or POST response for that resource.  The
                             resource will be updated or deleted only if the
                             etag you provide matches the resource's current
                             etag value.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam group --help
Usage: bmcs iam group [OPTIONS] COMMAND [ARGS]...

  A collection of users who all need the same type of access to a particular
  set of resources or compartment. For conceptual information about groups and
  other IAM Service components, see [Overview of the IAM Service].

  If you're federating with an identity provider (IdP), you need to create
  mappings between the groups defined in the IdP and groups you define in the
  IAM service. For more information, see [Identity Providers and Federation].
  Also see [IdentityProvider] and [IdpGroupMapping].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  add-user     Adds the specified user to the specified...
  create       Creates a new group in your tenancy.
  delete       Deletes the specified group.
  get          Gets the specified group's information.
  list         Lists the groups in your tenancy.
  list-users   Lists the users in the specified group.
  remove-user  Removes a user from a group.
  update       Updates the specified group.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam group add-user --help
Usage: bmcs iam group add-user [OPTIONS]

  Adds the specified user to the specified group.

Options:
  --user-id TEXT   The OCID of the user.  [required]
  --group-id TEXT  The OCID of the group.  [required]
  -?, -h, --help   Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam group create --help
Usage: bmcs iam group create [OPTIONS]

  Creates a new group in your tenancy.

  You must specify your tenancy's OCID as the compartment ID in the request
  object (remember that the tenancy is simply the root compartment). Notice
  that IAM resources (users, groups, compartments, and some policies) reside
  within the tenancy itself, unlike cloud resources such as compute instances,
  which typically reside within compartments inside the tenancy. For
  information about OCIDs, see [Resource Identifiers].

  You must also specify a *name* for the group, which must be unique across
  all groups in your tenancy and cannot be changed. You can use this name or
  the OCID when writing policies that apply to the group. For more information
  about policies, see [How Policies Work].

  You must also specify a *description* for the group (although it can be an
  empty string). It does not have to be unique, and you can change it anytime
  with [UpdateGroup].

  After you send your request, the new object's `lifecycleState` will
  temporarily be CREATING. Before using the object, first make sure its
  `lifecycleState` has changed to ACTIVE.

  After creating the group, you need to put users in it and write policies for
  it. See [AddUserToGroup] and [CreatePolicy].

Options:
  -c, --compartment-id TEXT  The OCID of the tenancy containing the group.
                             [required]
  --name TEXT                The name you assign to the group during creation.
                             The name must be unique across all groups in the
                             tenancy and cannot be changed.  [required]
  --description TEXT         The description you assign to the group during
                             creation. Does not have to be unique, and it's
                             changeable.  [required]
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam group delete --help
Usage: bmcs iam group delete [OPTIONS]

  Deletes the specified group. The group must be empty.

Options:
  --group-id TEXT  The OCID of the group.  [required]
  --if-match TEXT  For optimistic concurrency control. In the PUT or DELETE call
                   for a resource, set the `if-match` parameter to the value of
                   the etag from a previous GET or POST response for that
                   resource.  The resource will be updated or deleted only if
                   the etag you provide matches the resource's current etag
                   value.
  --force          Perform deletion without prompting for confirmation.
  -?, -h, --help   Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam group get --help
Usage: bmcs iam group get [OPTIONS]

  Gets the specified group's information.

  This operation does not return a list of all the users in the group. To do
  that, use [ListUserGroupMemberships] and provide the group's OCID as a query
  parameter in the request.

Options:
  --group-id TEXT  The OCID of the group.  [required]
  -?, -h, --help   Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam group list --help
Usage: bmcs iam group list [OPTIONS]

  Lists the groups in your tenancy. You must specify your tenancy's OCID as
  the value for the compartment ID (remember that the tenancy is simply the
  root compartment). See [Where to Get the Tenancy's OCID and User's OCID].

Options:
  -c, --compartment-id TEXT  The OCID of the compartment (remember that the
                             tenancy is simply the root compartment).
                             [required]
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --limit TEXT               The maximum number of items to return in a
                             paginated "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam group list-users --help
Usage: bmcs iam group list-users [OPTIONS]

  Lists the users in the specified group. You must specify your tenancy's OCID
  as the value for the compartment ID (remember that the tenancy is simply the
  root compartment). See [Where to Get the Tenancy's OCID and User's OCID].

Options:
  -c, --compartment-id TEXT  The OCID of the compartment (remember that the
                             tenancy is simply the root compartment).
                             [required]
  --group-id TEXT            The OCID of the user.  [required]
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --limit TEXT               The maximum number of items to return in a
                             paginated "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam group remove-user --help
Usage: bmcs iam group remove-user [OPTIONS]

  Removes a user from a group.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment (remember that the
                             tenancy is simply the root compartment).
                             [required]
  --user-id TEXT             The OCID of the user.  [required]
  --group-id TEXT            The OCID of the group.  [required]
  --force                    Perform removal without prompting for confirmation.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam group update --help
Usage: bmcs iam group update [OPTIONS]

  Updates the specified group.

Options:
  --group-id TEXT     The OCID of the group.  [required]
  --description TEXT  The description you assign to the group. Does not have to
                      be unique, and it's changeable.
  --if-match TEXT     For optimistic concurrency control. In the PUT or DELETE
                      call for a resource, set the `if-match` parameter to the
                      value of the etag from a previous GET or POST response for
                      that resource.  The resource will be updated or deleted
                      only if the etag you provide matches the resource's
                      current etag value.
  -?, -h, --help      Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam policy --help
Usage: bmcs iam policy [OPTIONS] COMMAND [ARGS]...

  A document that specifies the type of access a group has to the resources in
  a compartment. For information about policies and other IAM Service
  components, see [Overview of the IAM Service]. If you're new to policies,
  see [Getting Started with Policies].

  The word "policy" is used by people in different ways:

    * An individual statement written in the policy language   * A collection
    of statements in a single, named "policy" document (which has an Oracle
    Cloud ID (OCID) assigned to it)   * The overall body of policies your
    organization uses to control access to resources

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new policy in the specified...
  delete  Deletes the specified policy.
  get     Gets the specified policy's information.
  list    Lists the policies in the specified...
  update  Updates the specified policy.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam policy create --help
Usage: bmcs iam policy create [OPTIONS]

  Creates a new policy in the specified compartment (either the tenancy or
  another of your compartments). If you're new to policies, see [Getting
  Started with Policies].

  You must specify a *name* for the policy, which must be unique across all
  policies in your tenancy and cannot be changed.

  You must also specify a *description* for the policy (although it can be an
  empty string). It does not have to be unique, and you can change it anytime
  with [UpdatePolicy].

  You must specify one or more policy statements in the statements array. For
  information about writing policies, see [How Policies Work] and [Common
  Policies].

  After you send your request, the new object's `lifecycleState` will
  temporarily be CREATING. Before using the object, first make sure its
  `lifecycleState` has changed to ACTIVE.

  New policies take effect typically within 10 seconds.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment containing the policy
                             (either the tenancy or another compartment).
                             [required]
  --name TEXT                The name you assign to the policy during creation.
                             The name must be unique across all policies in the
                             tenancy and cannot be changed.  [required]
  --statements TEXT          An array of policy statements written in the policy
                             language. See [How Policies Work] and [Common
                             Policies]. This must be provided in JSON format.
                             See API reference for additional help.
                             
                             Example:
                             '["statement 1","statement 2"]'  [required]
  --description TEXT         The description you assign to the policy during
                             creation. Does not have to be unique, and it's
                             changeable.  [required]
  --version-date TEXT        The version of the policy. If null or set to an
                             empty string, when a request comes in for
                             authorization, the policy will be evaluated
                             according to the current behavior of the services
                             at that moment. If set to a particular date (YYYY-
                             MM-DD), the policy will be evaluated according to
                             the behavior of the services on that date.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam policy delete --help
Usage: bmcs iam policy delete [OPTIONS]

  Deletes the specified policy. The deletion takes effect typically within 10
  seconds.

Options:
  --policy-id TEXT  The OCID of the policy.  [required]
  --if-match TEXT   For optimistic concurrency control. In the PUT or DELETE
                    call for a resource, set the `if-match` parameter to the
                    value of the etag from a previous GET or POST response for
                    that resource.  The resource will be updated or deleted only
                    if the etag you provide matches the resource's current etag
                    value.
  --force           Perform deletion without prompting for confirmation.
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam policy get --help
Usage: bmcs iam policy get [OPTIONS]

  Gets the specified policy's information.

Options:
  --policy-id TEXT  The OCID of the policy.  [required]
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam policy list --help
Usage: bmcs iam policy list [OPTIONS]

  Lists the policies in the specified compartment (either the tenancy or
  another of your compartments). See [Where to Get the Tenancy's OCID and
  User's OCID].

  To determine which policies apply to a particular group or compartment, you
  must view the individual statements inside all your policies. There isn't a
  way to automatically obtain that information via the API.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment (remember that the
                             tenancy is simply the root compartment).
                             [required]
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --limit TEXT               The maximum number of items to return in a
                             paginated "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam policy update --help
Usage: bmcs iam policy update [OPTIONS]

  Updates the specified policy. You can update the description or the policy
  statements themselves.

  Policy changes take effect typically within 10 seconds.

Options:
  --policy-id TEXT     The OCID of the policy.  [required]
  --description TEXT   The description you assign to the policy. Does not have
                       to be unique, and it's changeable.
  --statements TEXT    A JSON array of policy statements written in the policy
                       language. See [How Policies Work] and [Common Policies].
                       Example: '["statement 1","statement 2"]' (The single
                       quotes are required.)
  --version-date TEXT  The version of the policy. If set to an empty string,
                       when a request comes in for authorization, the policy
                       will be evaluated according to the current behavior of
                       the services at that moment. If set to a particular date
                       (YYYY-MM-DD), the policy will be evaluated according to
                       the behavior of the services on that date.
  --if-match TEXT      For optimistic concurrency control. In the PUT or DELETE
                       call for a resource, set the `if-match` parameter to the
                       value of the etag from a previous GET or POST response
                       for that resource.  The resource will be updated or
                       deleted only if the etag you provide matches the
                       resource's current etag value.
  --force              Perform update without prompting for confirmation.
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam region --help
Usage: bmcs iam region [OPTIONS] COMMAND [ARGS]...

  A localized geographic area, such as Phoenix, AZ. Oracle Bare Metal Cloud
  Services is hosted in regions and Availability Domains. A region is composed
  of several Availability Domains. An Availability Domain is one or more data
  centers located within a region. For more information, see [Regions and
  Availability Domains].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  list  Lists all the regions offered by Oracle Bare...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam region list --help
Usage: bmcs iam region list [OPTIONS]

  Lists all the regions offered by Oracle Bare Metal Cloud Services.

Options:
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam region-subscription --help
Usage: bmcs iam region-subscription [OPTIONS] COMMAND [ARGS]...

  An object that represents your tenancy's access to a particular region
  (i.e., a subscription), the status of that access, and whether that region
  is the home region. For more information, see [Managing Regions].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a subscription to a region for a...
  list    Lists the region subscriptions for the...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam region-subscription create --help
Usage: bmcs iam region-subscription create [OPTIONS]

  Creates a subscription to a region for a tenancy.

Options:
  --region-key TEXT  The regions's key.
                     
                     Allowed values are: - `PHX` - `IAD`
                     Example: `PHX`  [required]
  --tenancy-id TEXT  The OCID of the tenancy.  [required]
  -?, -h, --help     Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam region-subscription list --help
Usage: bmcs iam region-subscription list [OPTIONS]

  Lists the region subscriptions for the specified tenancy.

Options:
  --tenancy-id TEXT  The OCID of the tenancy.  [required]
  -?, -h, --help     Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user --help
Usage: bmcs iam user [OPTIONS] COMMAND [ARGS]...

  An individual employee or system that needs to manage or use your company's
  Oracle Bare Metal Cloud Services resources. Users might need to launch
  instances, manage remote disks, work with your cloud network, etc. Users
  have one or more IAM Service credentials ([ApiKey], [UIPassword], and
  [SwiftPassword]). For more information, see [User Credentials]). End users
  of your application are not typically IAM Service users. For conceptual
  information about users and other IAM Service components, see [Overview of
  the IAM Service].

  These users are created directly within the Oracle Bare Metal Cloud Services
  system, via the IAM service. They are different from *federated users*, who
  authenticate themselves to the Oracle Bare Metal Cloud Services Console via
  an identity provider. For more information, see [Identity Providers and
  Federation].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  api-key            A PEM-format RSA credential for securing...
  create             Creates a new user in your tenancy.
  delete             Deletes the specified user.
  get                Gets the specified user's information.
  list               Lists the users in your tenancy.
  list-groups        Lists the groups for which the specified user...
  swift-password     Swift is the OpenStack object storage...
  ui-password        A text password that enables a user to sign...
  update             Updates the description of the specified...
  update-user-state  Updates the state of the specified user.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user api-key --help
Usage: bmcs iam user api-key [OPTIONS] COMMAND [ARGS]...

  A PEM-format RSA credential for securing requests to the Oracle Bare Metal
  Cloud Services REST API. Also known as an *API signing key*. Specifically,
  this is the public key from the key pair. The private key remains with the
  user calling the API. For information about generating a key pair in the
  required PEM format, see [Required Keys and OCIDs].

  **Important:** This is **not** the SSH key for accessing compute instances.

  Each user can have a maximum of three API signing keys.

  For more information about user credentials, see [User Credentials].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  delete  Deletes the specified API signing key for the...
  list    Lists the API signing keys for the specified...
  upload  Uploads an API signing key for the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user api-key delete --help
Usage: bmcs iam user api-key delete [OPTIONS]

  Deletes the specified API signing key for the specified user.

  Every user has permission to use this operation to delete a key for *their
  own user ID*. An administrator in your organization does not need to write a
  policy to give users this ability. To compare, administrators who have
  permission to the tenancy can use this operation to delete a key for any
  user, including themselves.

Options:
  --user-id TEXT      The OCID of the user.  [required]
  --fingerprint TEXT  The key's fingerprint.  [required]
  --if-match TEXT     For optimistic concurrency control. In the PUT or DELETE
                      call for a resource, set the `if-match` parameter to the
                      value of the etag from a previous GET or POST response for
                      that resource.  The resource will be updated or deleted
                      only if the etag you provide matches the resource's
                      current etag value.
  --force             Perform deletion without prompting for confirmation.
  -?, -h, --help      Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user api-key list --help
Usage: bmcs iam user api-key list [OPTIONS]

  Lists the API signing keys for the specified user. A user can have a maximum
  of three keys.

  Every user has permission to use this API call for *their own user ID*.  An
  administrator in your organization does not need to write a policy to give
  users this ability.

Options:
  --user-id TEXT  The OCID of the user.  [required]
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user api-key upload --help
Usage: bmcs iam user api-key upload [OPTIONS]

  Uploads an API signing key for the specified user.

  Every user has permission to use this operation to upload a key for *their
  own user ID*. An administrator in your organization does not need to write a
  policy to give users this ability. To compare, administrators who have
  permission to the tenancy can use this operation to upload a key for any
  user, including themselves.

  **Important:** Even though you have permission to upload an API key, you
  might not yet have permission to do much else. If you try calling an
  operation unrelated to your own credential management (e.g., `ListUsers`,
  `LaunchInstance`) and receive an "unauthorized" error, check with an
  administrator to confirm which IAM Service group(s) you're in and what
  access you have. Also confirm you're working in the correct compartment.

  After you send your request, the new object's `lifecycleState` will
  temporarily be CREATING. Before using the object, first make sure its
  `lifecycleState` has changed to ACTIVE.

Options:
  --user-id TEXT  The OCID of the user.  [required]
  --key TEXT      The public key.  Must be an RSA key in PEM format.  [required]
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user create --help
Usage: bmcs iam user create [OPTIONS]

  Creates a new user in your tenancy. For conceptual information about users,
  your tenancy, and other IAM Service components, see [Overview of the IAM
  Service].

  You must specify your tenancy's OCID as the compartment ID in the request
  object (remember that the tenancy is simply the root compartment). Notice
  that IAM resources (users, groups, compartments, and some policies) reside
  within the tenancy itself, unlike cloud resources such as compute instances,
  which typically reside within compartments inside the tenancy. For
  information about OCIDs, see [Resource Identifiers].

  You must also specify a *name* for the user, which must be unique across all
  users in your tenancy and cannot be changed. Allowed characters: No spaces.
  Only letters, numerals, hyphens, periods, underscores, +, and @. If you
  specify a name that's already in use, you'll get a 409 error. This name will
  be the user's login to the Console. You might want to pick a name that your
  company's own identity system (e.g., Active Directory, LDAP, etc.) already
  uses. If you delete a user and then create a new user with the same name,
  they'll be considered different users because they have different OCIDs.

  You must also specify a *description* for the user (although it can be an
  empty string). It does not have to be unique, and you can change it anytime
  with [UpdateUser]. You can use the field to provide the user's full name, a
  description, a nickname, or other information to generally identify the
  user.

  After you send your request, the new object's `lifecycleState` will
  temporarily be CREATING. Before using the object, first make sure its
  `lifecycleState` has changed to ACTIVE.

  A new user has no permissions until you place the user in one or more groups
  (see [AddUserToGroup]). If the user needs to access the Console, you need to
  provide the user a password (see [CreateOrResetUIPassword]). If the user
  needs to access the Oracle Bare Metal Cloud Services REST API, you need to
  upload a public API signing key for that user (see [Required Keys and OCIDs]
  and also [UploadApiKey]).

  **Important:** Make sure to inform the new user which compartment(s) they
  have access to.

Options:
  -c, --compartment-id TEXT  The OCID of the tenancy containing the user.
                             [required]
  --name TEXT                The name you assign to the user during creation.
                             This is the user's login for the Console. The name
                             must be unique across all users in the tenancy and
                             cannot be changed.  [required]
  --description TEXT         The description you assign to the user during
                             creation. Does not have to be unique, and it's
                             changeable.  [required]
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user delete --help
Usage: bmcs iam user delete [OPTIONS]

  Deletes the specified user. The user must not be in any groups.

Options:
  --user-id TEXT   The OCID of the user.  [required]
  --if-match TEXT  For optimistic concurrency control. In the PUT or DELETE call
                   for a resource, set the `if-match` parameter to the value of
                   the etag from a previous GET or POST response for that
                   resource.  The resource will be updated or deleted only if
                   the etag you provide matches the resource's current etag
                   value.
  --force          Perform deletion without prompting for confirmation.
  -?, -h, --help   Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user get --help
Usage: bmcs iam user get [OPTIONS]

  Gets the specified user's information.

Options:
  --user-id TEXT  The OCID of the user.  [required]
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user list --help
Usage: bmcs iam user list [OPTIONS]

  Lists the users in your tenancy. You must specify your tenancy's OCID as the
  value for the compartment ID (remember that the tenancy is simply the root
  compartment). See [Where to Get the Tenancy's OCID and User's OCID].

Options:
  -c, --compartment-id TEXT  The OCID of the compartment (remember that the
                             tenancy is simply the root compartment).
                             [required]
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --limit TEXT               The maximum number of items to return in a
                             paginated "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user list-groups --help
Usage: bmcs iam user list-groups [OPTIONS]

  Lists the groups for which the specified user is a member. You must specify
  your tenancy's OCID as the value for the compartment ID (remember that the
  tenancy is simply the root compartment). See [Where to Get the Tenancy's
  OCID and User's OCID].

Options:
  -c, --compartment-id TEXT  The OCID of the compartment (remember that the
                             tenancy is simply the root compartment).
                             [required]
  --user-id TEXT             The OCID of the user.  [required]
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  --limit TEXT               The maximum number of items to return in a
                             paginated "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user swift-password --help
Usage: bmcs iam user swift-password [OPTIONS] COMMAND [ARGS]...

  Swift is the OpenStack object storage service. A `SwiftPassword` is an
  Oracle-provided password for using a Swift client with the Oracle Bare Metal
  Cloud Services Object Storage Service. This password is associated with the
  user's Console login. Swift passwords never expire. A user can have up to
  two Swift passwords at a time.

  **Note:** The password is always an Oracle-generated string; you can't
  change it to a string of your choice.

  For more information, see [Managing User Credentials].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new Swift password for the...
  delete  Deletes the specified Swift password for the...
  list    Lists the Swift passwords for the specified...
  update  Updates the specified Swift password's...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user swift-password create --help
Usage: bmcs iam user swift-password create [OPTIONS]

  Creates a new Swift password for the specified user. For information about
  what Swift passwords are for, see [Managing User Credentials].

  You must specify a *description* for the Swift password (although it can be
  an empty string). It does not have to be unique, and you can change it
  anytime with [UpdateSwiftPassword].

  Every user has permission to create a Swift password for *their own user
  ID*. An administrator in your organization does not need to write a policy
  to give users this ability. To compare, administrators who have permission
  to the tenancy can use this operation to create a Swift password for any
  user, including themselves.

Options:
  --description TEXT  The description you assign to the Swift password during
                      creation. Does not have to be unique, and it's changeable.
                      [required]
  --user-id TEXT      The OCID of the user.  [required]
  -?, -h, --help      Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user swift-password delete --help
Usage: bmcs iam user swift-password delete [OPTIONS]

  Deletes the specified Swift password for the specified user.

Options:
  --user-id TEXT            The OCID of the user.  [required]
  --swift-password-id TEXT  The OCID of the Swift password.  [required]
  --if-match TEXT           For optimistic concurrency control. In the PUT or
                            DELETE call for a resource, set the `if-match`
                            parameter to the value of the etag from a previous
                            GET or POST response for that resource.  The
                            resource will be updated or deleted only if the etag
                            you provide matches the resource's current etag
                            value.
  --force                   Perform deletion without prompting for confirmation.
  -?, -h, --help            Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user swift-password list --help
Usage: bmcs iam user swift-password list [OPTIONS]

  Lists the Swift passwords for the specified user. The returned object
  contains the password's OCID, but not the password itself. The actual
  password is returned only upon creation.

Options:
  --user-id TEXT  The OCID of the user.  [required]
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user swift-password update --help
Usage: bmcs iam user swift-password update [OPTIONS]

  Updates the specified Swift password's description.

Options:
  --user-id TEXT            The OCID of the user.  [required]
  --swift-password-id TEXT  The OCID of the Swift password.  [required]
  --description TEXT        The description you assign to the Swift password.
                            Does not have to be unique, and it's changeable.
  --if-match TEXT           For optimistic concurrency control. In the PUT or
                            DELETE call for a resource, set the `if-match`
                            parameter to the value of the etag from a previous
                            GET or POST response for that resource.  The
                            resource will be updated or deleted only if the etag
                            you provide matches the resource's current etag
                            value.
  -?, -h, --help            Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user ui-password --help
Usage: bmcs iam user ui-password [OPTIONS] COMMAND [ARGS]...

  A text password that enables a user to sign in to the Console, the user
  interface for interacting with Oracle Bare Metal Cloud Services.

  For more information about user credentials, see [User Credentials].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create-or-reset  Creates a new Console one-time password for...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user ui-password create-or-reset --help
Usage: bmcs iam user ui-password create-or-reset [OPTIONS]

  Creates a new Console one-time password for the specified user. For more
  information about user credentials, see [User Credentials].

  Use this operation after creating a new user, or if a user forgets their
  password. The new one-time password is returned to you in the response, and
  you must securely deliver it to the user. They'll be prompted to change this
  password the next time they sign in to the Console. If they don't change it
  within 7 days, the password will expire and you'll need to create a new one-
  time password for the user.

  **Note:** The user's Console login is the unique name you specified when you
  created the user (see [CreateUser]).

Options:
  --user-id TEXT  The OCID of the user.  [required]
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user update --help
Usage: bmcs iam user update [OPTIONS]

  Updates the description of the specified user.

Options:
  --user-id TEXT      The OCID of the user.  [required]
  --description TEXT  The description you assign to the user. Does not have to
                      be unique, and it's changeable.
  --if-match TEXT     For optimistic concurrency control. In the PUT or DELETE
                      call for a resource, set the `if-match` parameter to the
                      value of the etag from a previous GET or POST response for
                      that resource.  The resource will be updated or deleted
                      only if the etag you provide matches the resource's
                      current etag value.
  -?, -h, --help      Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs iam user update-user-state --help
Usage: bmcs iam user update-user-state [OPTIONS]

  Updates the state of the specified user.

Options:
  --user-id TEXT   The OCID of the user.  [required]
  --blocked TEXT   Update state to blocked or unblocked. Only "false" is
                   supported (for changing the state to unblocked).
  --if-match TEXT  For optimistic concurrency control. In the PUT or DELETE call
                   for a resource, set the `if-match` parameter to the value of
                   the etag from a previous GET or POST response for that
                   resource.  The resource will be updated or deleted only if
                   the etag you provide matches the resource's current etag
                   value.
  -?, -h, --help   Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network --help
Usage: bmcs network [OPTIONS] COMMAND [ARGS]...

  Networking Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  cpe                An object you create when setting up an IPSec...
  dhcp-options       A set of DHCP options.
  drg                A Dynamic Routing Gateway (DRG), which is a...
  drg-attachment     A link between a DRG and VCN.
  internet-gateway   Represents a router that connects the edge of...
  ip-sec-connection  A connection between a DRG and CPE.
  private-ip         A *private IP* is a conceptual term that...
  route-table        A collection of `RouteRule` objects, which...
  security-list      A set of virtual firewall rules for your VCN.
  subnet             A logical subdivision of a VCN.
  vcn                A Virtual Cloud Network (VCN).
  vnic               A virtual network interface card.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network cpe --help
Usage: bmcs network cpe [OPTIONS] COMMAND [ARGS]...

  An object you create when setting up an IPSec VPN between your on-premise
  network and VCN. The `Cpe` is a virtual representation of your Customer-
  Premises Equipment, which is the actual router on-premise at your site at
  your end of the IPSec VPN connection. For more information, see [Overview of
  the Networking Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new virtual Customer-Premises...
  delete  Deletes the specified CPE object.
  get     Gets the specified CPE's information.
  list    Lists the Customer-Premises Equipment objects...
  update  Updates the specified CPE's display name.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network cpe create --help
Usage: bmcs network cpe create [OPTIONS]

  Creates a new virtual Customer-Premises Equipment (CPE) object in the
  specified compartment. For more information, see [Managing IPSec VPNs].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the CPE to reside. Notice that the CPE doesn't
  have to be in the same compartment as the IPSec connection or other
  Networking Service components. If you're not sure which compartment to use,
  put the CPE in the same compartment as the DRG. For more information about
  compartments and access control, see [Overview of the IAM Service]. For
  information about OCIDs, see [Resource Identifiers].

  You must provide the public IP address of your on-premise router. See
  [Configuring Your On-Premise Router].

  You may optionally specify a *display name* for the CPE, otherwise a default
  is provided. It does not have to be unique, and you can change it. Avoid
  entering confidential information.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment to contain the CPE.
                             [required]
  --ip-address TEXT          The public IP address of the on-premise router.
                             Example: `143.19.23.16`  [required]
  --display-name TEXT        A user-friendly name. Does not have to be unique,
                             and it's changeable. Avoid entering confidential
                             information.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network cpe delete --help
Usage: bmcs network cpe delete [OPTIONS]

  Deletes the specified CPE object. The CPE must not be connected to a DRG.
  This is an asynchronous operation; the CPE's `lifecycleState` will change to
  TERMINATING temporarily until the CPE is completely removed.

Options:
  --cpe-id TEXT    The OCID of the CPE.  [required]
  --if-match TEXT  For optimistic concurrency control. In the PUT or DELETE call
                   for a resource, set the `if-match` parameter to the value of
                   the etag from a previous GET or POST response for that
                   resource.  The resource will be updated or deleted only if
                   the etag you provide matches the resource's current etag
                   value.
  --force          Perform deletion without prompting for confirmation.
  -?, -h, --help   Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network cpe get --help
Usage: bmcs network cpe get [OPTIONS]

  Gets the specified CPE's information.

Options:
  --cpe-id TEXT   The OCID of the CPE.  [required]
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network cpe list --help
Usage: bmcs network cpe list [OPTIONS]

  Lists the Customer-Premises Equipment objects (CPEs) in the specified
  compartment.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment.  [required]
  --limit TEXT               The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network cpe update --help
Usage: bmcs network cpe update [OPTIONS]

  Updates the specified CPE's display name. Avoid entering confidential
  information.

Options:
  --cpe-id TEXT        The OCID of the CPE.  [required]
  --display-name TEXT  A user-friendly name. Does not have to be unique, and
                       it's changeable. Avoid entering confidential information.
  --if-match TEXT      For optimistic concurrency control. In the PUT or DELETE
                       call for a resource, set the `if-match` parameter to the
                       value of the etag from a previous GET or POST response
                       for that resource.  The resource will be updated or
                       deleted only if the etag you provide matches the
                       resource's current etag value.
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network dhcp-options --help
Usage: bmcs network dhcp-options [OPTIONS] COMMAND [ARGS]...

  A set of DHCP options. Used by the VCN to automatically provide
  configuration information to the instances when they boot up. There are two
  options you can set:

  - [DhcpDnsOption]: Lets you specify how DNS (hostname resolution) is handled
  in the subnets in your VCN.

  - [DhcpSearchDomainOption]: Lets you specify a search domain name to use for
  DNS queries.

  For more information, see  [DNS in Your Virtual Cloud Network] and [Managing
  DHCP Options].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new set of DHCP options for the...
  delete  Deletes the specified set of DHCP options,...
  get     Gets the specified set of DHCP options.
  list    Lists the sets of DHCP options in the...
  update  Updates the specified set of DHCP options.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network dhcp-options create --help
Usage: bmcs network dhcp-options create [OPTIONS]

  Creates a new set of DHCP options for the specified VCN. For more
  information, see [DhcpOptions].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the set of DHCP options to reside. Notice that
  the set of options doesn't have to be in the same compartment as the VCN,
  subnets, or other Networking Service components. If you're not sure which
  compartment to use, put the set of DHCP options in the same compartment as
  the VCN. For more information about compartments and access control, see
  [Overview of the IAM Service]. For information about OCIDs, see [Resource
  Identifiers].

  You may optionally specify a *display name* for the set of DHCP options,
  otherwise a default is provided. It does not have to be unique, and you can
  change it. Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment to contain the set of
                             DHCP options.  [required]
  --options TEXT             A set of DHCP options. This must be provided in
                             JSON format. See API reference for additional help.
                             Example: '[{"type": "DomainNameServer",
                             "customDnsServers": ["202.44.61.9"], "serverType":
                             "CustomDnsServer"}]'  [required]
  --vcn-id TEXT              The OCID of the VCN the set of DHCP options belongs
                             to.  [required]
  --display-name TEXT        A user-friendly name. Does not have to be unique,
                             and it's changeable. Avoid entering confidential
                             information.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network dhcp-options delete --help
Usage: bmcs network dhcp-options delete [OPTIONS]

  Deletes the specified set of DHCP options, but only if it's not associated
  with a subnet. You can't delete a VCN's default set of DHCP options.

  This is an asynchronous operation; the state of the set of options will
  switch to TERMINATING temporarily until the set is completely removed.

Options:
  --dhcp-id TEXT   The OCID for the set of DHCP options.  [required]
  --if-match TEXT  For optimistic concurrency control. In the PUT or DELETE call
                   for a resource, set the `if-match` parameter to the value of
                   the etag from a previous GET or POST response for that
                   resource.  The resource will be updated or deleted only if
                   the etag you provide matches the resource's current etag
                   value.
  --force          Perform deletion without prompting for confirmation.
  -?, -h, --help   Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network dhcp-options get --help
Usage: bmcs network dhcp-options get [OPTIONS]

  Gets the specified set of DHCP options.

Options:
  --dhcp-id TEXT  The OCID for the set of DHCP options.  [required]
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network dhcp-options list --help
Usage: bmcs network dhcp-options list [OPTIONS]

  Lists the sets of DHCP options in the specified VCN and specified
  compartment. The response includes the default set of options that
  automatically comes with each VCN, plus any other sets you've created.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment.  [required]
  --vcn-id TEXT              The OCID of the VCN.  [required]
  --limit TEXT               The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network dhcp-options update --help
Usage: bmcs network dhcp-options update [OPTIONS]

  Updates the specified set of DHCP options. You can update the display name
  or the options themselves. Avoid entering confidential information.

  Note that the `options` object you provide replaces the entire existing set
  of options.

Options:
  --dhcp-id TEXT       The OCID for the set of DHCP options.  [required]
  --display-name TEXT  A user-friendly name. Does not have to be unique, and
                       it's changeable. Avoid entering confidential information.
  --options TEXT       This must be provided in JSON format. See API reference
                       for additional help.
                       
                       Example: '[{"type":
                       "DomainNameServer", "customDnsServers": ["202.44.61.9"],
                       "serverType": "CustomDnsServer"}]'
  --if-match TEXT      For optimistic concurrency control. In the PUT or DELETE
                       call for a resource, set the `if-match` parameter to the
                       value of the etag from a previous GET or POST response
                       for that resource.  The resource will be updated or
                       deleted only if the etag you provide matches the
                       resource's current etag value.
  --force              Perform update without prompting for confirmation.
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network drg --help
Usage: bmcs network drg [OPTIONS] COMMAND [ARGS]...

  A Dynamic Routing Gateway (DRG), which is a virtual router that provides a
  path for private network traffic between your VCN and your existing network.
  You use it with other Networking Service components to create an IPSec VPN
  or a connection that uses Oracle Bare Metal Cloud Services FastConnect. For
  more information, see [Overview of the Networking Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new Dynamic Routing Gateway (DRG)...
  delete  Deletes the specified DRG.
  get     Gets the specified DRG's information.
  list    Lists the DRGs in the specified compartment.
  update  Updates the specified DRG's display name.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network drg create --help
Usage: bmcs network drg create [OPTIONS]

  Creates a new Dynamic Routing Gateway (DRG) in the specified compartment.
  For more information, see [Managing Dynamic Routing Gateways (DRGs)].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the DRG to reside. Notice that the DRG doesn't
  have to be in the same compartment as the VCN, the DRG attachment, or other
  Networking Service components. If you're not sure which compartment to use,
  put the DRG in the same compartment as the VCN. For more information about
  compartments and access control, see [Overview of the IAM Service]. For
  information about OCIDs, see [Resource Identifiers].

  You may optionally specify a *display name* for the DRG, otherwise a default
  is provided. It does not have to be unique, and you can change it. Avoid
  entering confidential information.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment to contain the DRG.
                             [required]
  --display-name TEXT        A user-friendly name. Does not have to be unique,
                             and it's changeable. Avoid entering confidential
                             information.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network drg delete --help
Usage: bmcs network drg delete [OPTIONS]

  Deletes the specified DRG. The DRG must not be attached to a VCN or be
  connected to your on-premise network. Also, there must not be a route table
  that lists the DRG as a target. This is an asynchronous operation; the DRG's
  `lifecycleState` will change to TERMINATING temporarily until the DRG is
  completely removed.

Options:
  --drg-id TEXT    The OCID of the DRG.  [required]
  --if-match TEXT  For optimistic concurrency control. In the PUT or DELETE call
                   for a resource, set the `if-match` parameter to the value of
                   the etag from a previous GET or POST response for that
                   resource.  The resource will be updated or deleted only if
                   the etag you provide matches the resource's current etag
                   value.
  --force          Perform deletion without prompting for confirmation.
  -?, -h, --help   Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network drg get --help
Usage: bmcs network drg get [OPTIONS]

  Gets the specified DRG's information.

Options:
  --drg-id TEXT   The OCID of the DRG.  [required]
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network drg list --help
Usage: bmcs network drg list [OPTIONS]

  Lists the DRGs in the specified compartment.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment.  [required]
  --limit TEXT               The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network drg update --help
Usage: bmcs network drg update [OPTIONS]

  Updates the specified DRG's display name. Avoid entering confidential
  information.

Options:
  --drg-id TEXT        The OCID of the DRG.  [required]
  --display-name TEXT  A user-friendly name. Does not have to be unique, and
                       it's changeable. Avoid entering confidential information.
  --if-match TEXT      For optimistic concurrency control. In the PUT or DELETE
                       call for a resource, set the `if-match` parameter to the
                       value of the etag from a previous GET or POST response
                       for that resource.  The resource will be updated or
                       deleted only if the etag you provide matches the
                       resource's current etag value.
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network drg-attachment --help
Usage: bmcs network drg-attachment [OPTIONS] COMMAND [ARGS]...

  A link between a DRG and VCN. For more information, see [Overview of the
  Networking Service].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Attaches the specified DRG to the specified...
  delete  Detaches a DRG from a VCN by deleting the...
  get     Gets the information for the specified...
  list    Lists the `DrgAttachment` objects for the...
  update  Updates the display name for the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network drg-attachment create --help
Usage: bmcs network drg-attachment create [OPTIONS]

  Attaches the specified DRG to the specified VCN. A VCN can be attached to
  only one DRG at a time, and vice versa. The response includes a
  `DrgAttachment` object with its own OCID. For more information about DRGs,
  see [Managing Dynamic Routing Gateways (DRGs)].

  You may optionally specify a *display name* for the attachment, otherwise a
  default is provided. It does not have to be unique, and you can change it.
  Avoid entering confidential information.

  For the purposes of access control, the DRG attachment is automatically
  placed into the same compartment as the VCN. For more information about
  compartments and access control, see [Overview of the IAM Service].

Options:
  --drg-id TEXT        The OCID of the DRG.  [required]
  --vcn-id TEXT        The OCID of the VCN.  [required]
  --display-name TEXT  A user-friendly name. Does not have to be unique. Avoid
                       entering confidential information.
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network drg-attachment delete --help
Usage: bmcs network drg-attachment delete [OPTIONS]

  Detaches a DRG from a VCN by deleting the corresponding `DrgAttachment`.
  This is an asynchronous operation; the attachment's `lifecycleState` will
  change to DETACHING temporarily until the attachment is completely removed.

Options:
  --drg-attachment-id TEXT  The OCID of the DRG attachment.  [required]
  --if-match TEXT           For optimistic concurrency control. In the PUT or
                            DELETE call for a resource, set the `if-match`
                            parameter to the value of the etag from a previous
                            GET or POST response for that resource.  The
                            resource will be updated or deleted only if the etag
                            you provide matches the resource's current etag
                            value.
  --force                   Perform deletion without prompting for confirmation.
  -?, -h, --help            Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network drg-attachment get --help
Usage: bmcs network drg-attachment get [OPTIONS]

  Gets the information for the specified `DrgAttachment`.

Options:
  --drg-attachment-id TEXT  The OCID of the DRG attachment.  [required]
  -?, -h, --help            Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network drg-attachment list --help
Usage: bmcs network drg-attachment list [OPTIONS]

  Lists the `DrgAttachment` objects for the specified compartment. You can
  filter the results by VCN or DRG.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment.  [required]
  --vcn-id TEXT              The OCID of the VCN.
  --drg-id TEXT              The OCID of the DRG.
  --limit TEXT               The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network drg-attachment update --help
Usage: bmcs network drg-attachment update [OPTIONS]

  Updates the display name for the specified `DrgAttachment`. Avoid entering
  confidential information.

Options:
  --drg-attachment-id TEXT  The OCID of the DRG attachment.  [required]
  --display-name TEXT       A user-friendly name. Does not have to be unique,
                            and it's changeable. Avoid entering confidential
                            information.
  --if-match TEXT           For optimistic concurrency control. In the PUT or
                            DELETE call for a resource, set the `if-match`
                            parameter to the value of the etag from a previous
                            GET or POST response for that resource.  The
                            resource will be updated or deleted only if the etag
                            you provide matches the resource's current etag
                            value.
  -?, -h, --help            Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network internet-gateway --help
Usage: bmcs network internet-gateway [OPTIONS] COMMAND [ARGS]...

  Represents a router that connects the edge of a VCN with the Internet. For
  an example scenario that uses an Internet Gateway, see [Typical Networking
  Service Scenarios].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new Internet Gateway for the...
  delete  Deletes the specified Internet Gateway.
  get     Gets the specified Internet Gateway's...
  list    Lists the Internet Gateways in the specified...
  update  Updates the specified Internet Gateway.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network internet-gateway create --help
Usage: bmcs network internet-gateway create [OPTIONS]

  Creates a new Internet Gateway for the specified VCN. For more information,
  see [Managing Internet Gateways].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the Internet Gateway to reside. Notice that the
  Internet Gateway doesn't have to be in the same compartment as the VCN or
  other Networking Service components. If you're not sure which compartment to
  use, put the Internet Gateway in the same compartment with the VCN. For more
  information about compartments and access control, see [Overview of the IAM
  Service]. For information about OCIDs, see [Resource Identifiers].

  You may optionally specify a *display name* for the Internet Gateway,
  otherwise a default is provided. It does not have to be unique, and you can
  change it. Avoid entering confidential information.

  For traffic to flow between a subnet and an Internet Gateway, you must
  create a route rule accordingly in the subnet's route table (e.g., 0.0.0.0/0
  > Internet Gateway). See [UpdateRouteTable].

  You must specify whether the Internet Gateway is enabled when you create it.
  If it's disabled, that means no traffic will flow to/from the internet even
  if there's a route rule that enables that traffic. You can later use
  [UpdateInternetGateway] to easily disable/enable the gateway without
  changing the route rule.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment to contain the Internet
                             Gateway.  [required]
  --is-enabled TEXT          Whether the gateway is enabled upon creation.
                             [required]
  --vcn-id TEXT              The OCID of the VCN the Internet Gateway is
                             attached to.  [required]
  --display-name TEXT        A user-friendly name. Does not have to be unique,
                             and it's changeable. Avoid entering confidential
                             information.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network internet-gateway delete --help
Usage: bmcs network internet-gateway delete [OPTIONS]

  Deletes the specified Internet Gateway. The Internet Gateway does not have
  to be disabled, but there must not be a route table that lists it as a
  target.

  This is an asynchronous operation; the gateway's `lifecycleState` will
  change to TERMINATING temporarily until the gateway is completely removed.

Options:
  --ig-id TEXT     The OCID of the Internet Gateway.  [required]
  --if-match TEXT  For optimistic concurrency control. In the PUT or DELETE call
                   for a resource, set the `if-match` parameter to the value of
                   the etag from a previous GET or POST response for that
                   resource.  The resource will be updated or deleted only if
                   the etag you provide matches the resource's current etag
                   value.
  --force          Perform deletion without prompting for confirmation.
  -?, -h, --help   Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network internet-gateway get --help
Usage: bmcs network internet-gateway get [OPTIONS]

  Gets the specified Internet Gateway's information.

Options:
  --ig-id TEXT    The OCID of the Internet Gateway.  [required]
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network internet-gateway list --help
Usage: bmcs network internet-gateway list [OPTIONS]

  Lists the Internet Gateways in the specified VCN and the specified
  compartment.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment.  [required]
  --vcn-id TEXT              The OCID of the VCN.  [required]
  --limit TEXT               The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network internet-gateway update --help
Usage: bmcs network internet-gateway update [OPTIONS]

  Updates the specified Internet Gateway. You can disable/enable it, or change
  its display name. Avoid entering confidential information.

  If the gateway is disabled, that means no traffic will flow to/from the
  internet even if there's a route rule that enables that traffic.

Options:
  --ig-id TEXT         The OCID of the Internet Gateway.  [required]
  --display-name TEXT  A user-friendly name. Does not have to be unique, and
                       it's changeable. Avoid entering confidential information.
  --is-enabled TEXT    Whether the gateway is enabled.
  --if-match TEXT      For optimistic concurrency control. In the PUT or DELETE
                       call for a resource, set the `if-match` parameter to the
                       value of the etag from a previous GET or POST response
                       for that resource.  The resource will be updated or
                       deleted only if the etag you provide matches the
                       resource's current etag value.
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network ip-sec-connection --help
Usage: bmcs network ip-sec-connection [OPTIONS] COMMAND [ARGS]...

  A connection between a DRG and CPE. This connection consists of multiple
  IPSec tunnels. Creating this connection is one of the steps required when
  setting up an IPSec VPN. For more information, see [Overview of the
  Networking Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create      Creates a new IPSec connection between the...
  delete      Deletes the specified IPSec connection.
  get         Gets the specified IPSec connection's basic...
  get-config  Gets the configuration information for the...
  get-status  Gets the status of the specified IPSec...
  list        Lists the IPSec connections for the specified...
  update      Updates the display name for the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network ip-sec-connection create --help
Usage: bmcs network ip-sec-connection create [OPTIONS]

  Creates a new IPSec connection between the specified DRG and CPE. For more
  information, see [Managing IPSec Connections].

  In the request, you must include at least one static route to the CPE object
  (you're allowed a maximum of 10). For example: 10.0.8.0/16.

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the IPSec connection to reside. Notice that the
  IPSec connection doesn't have to be in the same compartment as the DRG, CPE,
  or other Networking Service components. If you're not sure which compartment
  to use, put the IPSec connection in the same compartment as the DRG. For
  more information about compartments and access control, see [Overview of the
  IAM Service]. For information about OCIDs, see [Resource Identifiers].

  You may optionally specify a *display name* for the IPSec connection,
  otherwise a default is provided. It does not have to be unique, and you can
  change it. Avoid entering confidential information.

  After creating the IPSec connection, you need to configure your on-premise
  router with tunnel-specific information returned by
  [GetIPSecConnectionDeviceConfig]. For each tunnel, that operation gives you
  the IP address of Oracle's VPN headend and the shared secret (i.e., the pre-
  shared key). For more information, see [Configuring Your On-Premise Router].

  To get the status of the tunnels (whether they're up or down), use
  [GetIPSecConnectionDeviceStatus].

Options:
  -c, --compartment-id TEXT  The OCID of the compartment to contain the IPSec
                             connection.  [required]
  --cpe-id TEXT              The OCID of the CPE.  [required]
  --drg-id TEXT              The OCID of the DRG.  [required]
  --static-routes TEXT       Static routes to the CPE. At least one route must
                             be included. The CIDR must not be a multicast
                             address or class E address. This must be provided
                             in JSON format.
                             
                             Example: '["10.0.0.0/16"]'
                             [required]
  --display-name TEXT        A user-friendly name. Does not have to be unique,
                             and it's changeable. Avoid entering confidential
                             information.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network ip-sec-connection delete --help
Usage: bmcs network ip-sec-connection delete [OPTIONS]

  Deletes the specified IPSec connection. If your goal is to disable the IPSec
  VPN between your VCN and on-premise network, it's easiest to simply detach
  the DRG but keep all the IPSec VPN components intact. If you were to delete
  all the components and then later need to create an IPSec VPN again, you
  would need to configure your on-premise router again with the new
  information returned from [CreateIPSecConnection].

  This is an asynchronous operation; the connection's `lifecycleState` will
  change to TERMINATING temporarily until the connection is completely
  removed.

Options:
  --ipsc-id TEXT   The OCID of the IPSec connection.  [required]
  --if-match TEXT  For optimistic concurrency control. In the PUT or DELETE call
                   for a resource, set the `if-match` parameter to the value of
                   the etag from a previous GET or POST response for that
                   resource.  The resource will be updated or deleted only if
                   the etag you provide matches the resource's current etag
                   value.
  --force          Perform deletion without prompting for confirmation.
  -?, -h, --help   Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network ip-sec-connection get --help
Usage: bmcs network ip-sec-connection get [OPTIONS]

  Gets the specified IPSec connection's basic information, including the
  static routes for the on-premise router. If you want the status of the
  connection (whether it's up or down), use [GetIPSecConnectionDeviceStatus].

Options:
  --ipsc-id TEXT  The OCID of the IPSec connection.  [required]
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network ip-sec-connection get-config --help
Usage: bmcs network ip-sec-connection get-config [OPTIONS]

  Gets the configuration information for the specified IPSec connection. For
  each tunnel, the response includes the IP address of Oracle's VPN headend
  and the shared secret.

Options:
  --ipsc-id TEXT  The OCID of the IPSec connection.  [required]
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network ip-sec-connection get-status --help
Usage: bmcs network ip-sec-connection get-status [OPTIONS]

  Gets the status of the specified IPSec connection (whether it's up or down).

Options:
  --ipsc-id TEXT  The OCID of the IPSec connection.  [required]
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network ip-sec-connection list --help
Usage: bmcs network ip-sec-connection list [OPTIONS]

  Lists the IPSec connections for the specified compartment. You can filter
  the results by DRG or CPE.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment.  [required]
  --drg-id TEXT              The OCID of the DRG.
  --cpe-id TEXT              The OCID of the CPE.
  --limit TEXT               The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network ip-sec-connection update --help
Usage: bmcs network ip-sec-connection update [OPTIONS]

  Updates the display name for the specified IPSec connection. Avoid entering
  confidential information.

Options:
  --ipsc-id TEXT       The OCID of the IPSec connection.  [required]
  --display-name TEXT  A user-friendly name. Does not have to be unique, and
                       it's changeable. Avoid entering confidential information.
  --if-match TEXT      For optimistic concurrency control. In the PUT or DELETE
                       call for a resource, set the `if-match` parameter to the
                       value of the etag from a previous GET or POST response
                       for that resource.  The resource will be updated or
                       deleted only if the etag you provide matches the
                       resource's current etag value.
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network private-ip --help
Usage: bmcs network private-ip [OPTIONS] COMMAND [ARGS]...

  A *private IP* is a conceptual term that refers to a private IP address and
  related properties. The `privateIp` object is the API representation of a
  private IP.

  Each instance has a *primary private IP* that is automatically created and
  assigned to the primary VNIC during instance launch. If you add a secondary
  VNIC to the instance, it also automatically gets a primary private IP. You
  can't remove a primary private IP from its VNIC. The primary private IP is
  automatically deleted when the VNIC is terminated.

  You can add *secondary private IPs* to a VNIC after it's created. For more
  information, see the `privateIp` operations and also [Managing IP
  Addresses].

  **Note:** Only [ListPrivateIps] and [GetPrivateIp] work with *primary*
  private IPs. To create and update primary private IPs, you instead work with
  instance and VNIC operations. For example, a primary private IP's properties
  come from the values you specify in [CreateVnicDetails] when calling either
  [LaunchInstance] or [AttachVnic]. To update the hostname for a primary
  private IP, you use [UpdateVnic].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  delete  Unassigns and deletes the specified private...
  get     Gets the specified private IP.
  list    Lists the [PrivateIp] objects based on one of...
  update  Updates the specified private IP.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network private-ip delete --help
Usage: bmcs network private-ip delete [OPTIONS]

  Unassigns and deletes the specified private IP. You must specify the
  object's OCID. The private IP address is returned to the subnet's pool of
  available addresses.

  This operation cannot be used with primary private IPs, which are
  automatically unassigned and deleted when the VNIC is terminated.

Options:
  --private-ip-id TEXT  The private IP's OCID.  [required]
  --if-match TEXT       For optimistic concurrency control. In the PUT or DELETE
                        call for a resource, set the `if-match` parameter to the
                        value of the etag from a previous GET or POST response
                        for that resource.  The resource will be updated or
                        deleted only if the etag you provide matches the
                        resource's current etag value.
  --force               Perform deletion without prompting for confirmation.
  -?, -h, --help        Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network private-ip get --help
Usage: bmcs network private-ip get [OPTIONS]

  Gets the specified private IP. You must specify the object's OCID.
  Alternatively, you can get the object by using [ListPrivateIps] with the
  private IP address (for example, 10.0.3.3) and subnet OCID.

Options:
  --private-ip-id TEXT  The private IP's OCID.  [required]
  -?, -h, --help        Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network private-ip list --help
Usage: bmcs network private-ip list [OPTIONS]

  Lists the [PrivateIp] objects based on one of these filters:

      - Subnet OCID.
      - VNIC OCID.
      - Both private IP address and subnet OCID: This lets you get a `privateIP` object
        based on its private IP address (for example, 10.0.3.3)  and not its OCID.
        For comparison, [GetPrivateIp] requires the OCID.

  If you're listing all the private IPs associated with a given subnet or
  VNIC, the response includes both primary and secondary private IPs.

Options:
  --limit TEXT       The maximum number of items to return in a paginated "List"
                     call.
                     
                     Example: `500`
  --page TEXT        The value of the `opc-next-page` response header from the
                     previous "List" call.
  --ip-address TEXT  The private IP address of the `privateIp` object.
                     
                     Example:
                     `10.0.3.3`
  --subnet-id TEXT   The OCID of the subnet.
  --vnic-id TEXT     The OCID of the VNIC.
  -?, -h, --help     Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network private-ip update --help
Usage: bmcs network private-ip update [OPTIONS]

  Updates the specified private IP. You must specify the object's OCID. Use
  this operation if you want to:

      - Change the display name for a secondary private IP.
      - Change the hostname for a secondary private IP.

  To move a secondary private IP to another VNIC, use the `bcms network vnic
  assign-private-ip` command with the --unassign-if-already-assigned switch.

  This operation cannot be used with primary private IPs. To update the
  hostname for the primary IP on a VNIC, use [UpdateVnic].

Options:
  --private-ip-id TEXT   The private IP's OCID.  [required]
  --display-name TEXT    A user-friendly name. Does not have to be unique, and
                         it's changeable. Avoid entering confidential
                         information.
  --hostname-label TEXT  The hostname for the private IP. Used for DNS. The
                         value is the hostname portion of the private IP's fully
                         qualified domain name (FQDN) (for example,
                         `bminstance-1` in FQDN
                         `bminstance-1.subnet123.vcn1.oraclevcn.com`). Must be
                         unique across all VNICs in the subnet and comply with
                         [RFC 952] and [RFC 1123].
                         
                         For more information, see
                         [DNS in Your Virtual Cloud Network].
                         
                         Example:
                         `bminstance-1`
  --if-match TEXT        For optimistic concurrency control. In the PUT or
                         DELETE call for a resource, set the `if-match`
                         parameter to the value of the etag from a previous GET
                         or POST response for that resource.  The resource will
                         be updated or deleted only if the etag you provide
                         matches the resource's current etag value.
  -?, -h, --help         Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network route-table --help
Usage: bmcs network route-table [OPTIONS] COMMAND [ARGS]...

  A collection of `RouteRule` objects, which are used to route packets based
  on destination IP to a particular network entity. For more information, see
  [Overview of the Networking Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new route table for the specified...
  delete  Deletes the specified route table, but only...
  get     Gets the specified route table's information.
  list    Lists the route tables in the specified VCN...
  update  Updates the specified route table's display...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network route-table create --help
Usage: bmcs network route-table create [OPTIONS]

  Creates a new route table for the specified VCN. In the request you must
  also include at least one route rule for the new route table. For
  information on the number of rules you can have in a route table, see
  [Service Limits]. For general information about route tables in your VCN,
  see [Managing Route Tables].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the route table to reside. Notice that the route
  table doesn't have to be in the same compartment as the VCN, subnets, or
  other Networking Service components. If you're not sure which compartment to
  use, put the route table in the same compartment as the VCN. For more
  information about compartments and access control, see [Overview of the IAM
  Service]. For information about OCIDs, see [Resource Identifiers].

  You may optionally specify a *display name* for the route table, otherwise a
  default is provided. It does not have to be unique, and you can change it.
  Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment to contain the route
                             table.  [required]
  --route-rules TEXT         The collection of rules used for routing
                             destination IPs to network devices. This must be
                             provided in JSON format. See API reference for
                             additional help.
                             
                             Example: '[{"cidrBlock":"0.0.0.0/
                             0","networkEntityId":"ocid1.internetgateway.oc1.phx
                             .aaaaaaaaxtfqb2srw7hoi5cmdum4n6ow2xm2zhrzqqypmlteii
                             ebtmvl75ya"}]'  [required]
  --vcn-id TEXT              The OCID of the VCN the route table belongs to.
                             [required]
  --display-name TEXT        A user-friendly name. Does not have to be unique,
                             and it's changeable. Avoid entering confidential
                             information.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network route-table delete --help
Usage: bmcs network route-table delete [OPTIONS]

  Deletes the specified route table, but only if it's not associated with a
  subnet. You can't delete a VCN's default route table.

  This is an asynchronous operation; the route table's `lifecycleState` will
  change to TERMINATING temporarily until the route table is completely
  removed.

Options:
  --rt-id TEXT     The OCID of the route table.  [required]
  --if-match TEXT  For optimistic concurrency control. In the PUT or DELETE call
                   for a resource, set the `if-match` parameter to the value of
                   the etag from a previous GET or POST response for that
                   resource.  The resource will be updated or deleted only if
                   the etag you provide matches the resource's current etag
                   value.
  --force          Perform deletion without prompting for confirmation.
  -?, -h, --help   Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network route-table get --help
Usage: bmcs network route-table get [OPTIONS]

  Gets the specified route table's information.

Options:
  --rt-id TEXT    The OCID of the route table.  [required]
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network route-table list --help
Usage: bmcs network route-table list [OPTIONS]

  Lists the route tables in the specified VCN and specified compartment. The
  response includes the default route table that automatically comes with each
  VCN, plus any route tables you've created.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment.  [required]
  --vcn-id TEXT              The OCID of the VCN.  [required]
  --limit TEXT               The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network route-table update --help
Usage: bmcs network route-table update [OPTIONS]

  Updates the specified route table's display name or route rules. Avoid
  entering confidential information.

  Note that the `routeRules` object you provide replaces the entire existing
  set of rules.

Options:
  --rt-id TEXT         The OCID of the route table.  [required]
  --display-name TEXT  A user-friendly name. Does not have to be unique, and
                       it's changeable. Avoid entering confidential information.
  --route-rules TEXT   The collection of rules used for routing destination IPs
                       to network devices. This must be provided in JSON format.
                       See API reference for additional help.
                       
                       Example: '[{"cidr
                       Block":"0.0.0.0/0","networkEntityId":"ocid1.internetgatew
                       ay.oc1.phx.aaaaaaaaxtfqb2srw7hoi5cmdum4n6ow2xm2zhrzqqypml
                       teiiebtmvl75ya"}]'
  --if-match TEXT      For optimistic concurrency control. In the PUT or DELETE
                       call for a resource, set the `if-match` parameter to the
                       value of the etag from a previous GET or POST response
                       for that resource.  The resource will be updated or
                       deleted only if the etag you provide matches the
                       resource's current etag value.
  --force              Perform update without prompting for confirmation.
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network security-list --help
Usage: bmcs network security-list [OPTIONS] COMMAND [ARGS]...

  A set of virtual firewall rules for your VCN. Security lists are configured
  at the subnet level, but the rules are applied to the ingress and egress
  traffic for the individual instances in the subnet. The rules can be
  stateful or stateless. For more information, see [Security Lists].

  **Important:** Oracle Bare Metal Cloud Services images automatically include
  firewall rules (e.g., Linux iptables, Windows firewall). If there are issues
  with some type of access to an instance, make sure both the security lists
  associated with the instance's subnet and the instance's firewall rules are
  set correctly.

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new security list for the specified...
  delete  Deletes the specified security list, but only...
  get     Gets the specified security list's...
  list    Lists the security lists in the specified VCN...
  update  Updates the specified security list's display...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network security-list create --help
Usage: bmcs network security-list create [OPTIONS]

  Creates a new security list for the specified VCN. For more information
  about security lists, see [Security Lists]. For information on the number of
  rules you can have in a security list, see [Service Limits].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the security list to reside. Notice that the
  security list doesn't have to be in the same compartment as the VCN,
  subnets, or other Networking Service components. If you're not sure which
  compartment to use, put the security list in the same compartment as the
  VCN. For more information about compartments and access control, see
  [Overview of the IAM Service]. For information about OCIDs, see [Resource
  Identifiers].

  You may optionally specify a *display name* for the security list, otherwise
  a default is provided. It does not have to be unique, and you can change it.
  Avoid entering confidential information.

Options:
  -c, --compartment-id TEXT      The OCID of the compartment to contain the
                                 security list.  [required]
  --egress-security-rules TEXT   Rules for allowing egress IP packets. This must
                                 be provided in JSON format. See API reference
                                 for additional help.
                                 
                                 Example:
                                 '[{"destination": "10.0.2.0/24", "protocol":
                                 "6", "isStateless": true, "tcpOptions":
                                 {"destinationPortRange": {"max": 1521, "min":
                                 1521}, "sourcePortRange": {"max": 1521, "min":
                                 1521}}}]'  [required]
  --ingress-security-rules TEXT  Rules for allowing ingress IP packets. This
                                 must be provided in JSON format. See API
                                 reference for additional help.
                                 
                                 Example:
                                 '[{"source": "10.0.2.0/24", "protocol": "6",
                                 "isStateless": true, "tcpOptions":
                                 {"destinationPortRange": {"max": 1521, "min":
                                 1521}, "sourcePortRange": {"max": 1521, "min":
                                 1521}}}]'  [required]
  --vcn-id TEXT                  The OCID of the VCN the security list belongs
                                 to.  [required]
  --display-name TEXT            A user-friendly name. Does not have to be
                                 unique, and it's changeable. Avoid entering
                                 confidential information.
  -?, -h, --help                 Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network security-list delete --help
Usage: bmcs network security-list delete [OPTIONS]

  Deletes the specified security list, but only if it's not associated with a
  subnet. You can't delete a VCN's default security list.

  This is an asynchronous operation; the security list's `lifecycleState` will
  change to TERMINATING temporarily until the security list is completely
  removed.

Options:
  --security-list-id TEXT  The OCID of the security list.  [required]
  --if-match TEXT          For optimistic concurrency control. In the PUT or
                           DELETE call for a resource, set the `if-match`
                           parameter to the value of the etag from a previous
                           GET or POST response for that resource.  The resource
                           will be updated or deleted only if the etag you
                           provide matches the resource's current etag value.
  --force                  Perform deletion without prompting for confirmation.
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network security-list get --help
Usage: bmcs network security-list get [OPTIONS]

  Gets the specified security list's information.

Options:
  --security-list-id TEXT  The OCID of the security list.  [required]
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network security-list list --help
Usage: bmcs network security-list list [OPTIONS]

  Lists the security lists in the specified VCN and compartment.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment.  [required]
  --vcn-id TEXT              The OCID of the VCN.  [required]
  --limit TEXT               The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network security-list update --help
Usage: bmcs network security-list update [OPTIONS]

  Updates the specified security list's display name or rules. Avoid entering
  confidential information.

  Note that the `egressSecurityRules` or `ingressSecurityRules` objects you
  provide replace the entire existing objects.

Options:
  --security-list-id TEXT        The OCID of the security list.  [required]
  --display-name TEXT            A user-friendly name. Does not have to be
                                 unique, and it's changeable. Avoid entering
                                 confidential information.
  --egress-security-rules TEXT   Rules for allowing egress IP packets. This must
                                 be provided in JSON format. See API reference
                                 for additional help.
                                 
                                 Example:
                                 '[{"destination": "10.0.2.0/24", "protocol":
                                 "6", "isStateless": true, "tcpOptions":
                                 {"destinationPortRange": {"max": 1521, "min":
                                 1521}, "sourcePortRange": {"max": 1521, "min":
                                 1521}}}]'
  --ingress-security-rules TEXT  Rules for allowing ingress IP packets. This
                                 must be provided in JSON format. See API
                                 reference for additional help.
                                 
                                 Example:
                                 '[{"source": "10.0.2.0/24", "protocol": "6",
                                 "isStateless": true, "tcpOptions":
                                 {"destinationPortRange": {"max": 1521, "min":
                                 1521}, "sourcePortRange": {"max": 1521, "min":
                                 1521}}}]'
  --if-match TEXT                For optimistic concurrency control. In the PUT
                                 or DELETE call for a resource, set the `if-
                                 match` parameter to the value of the etag from
                                 a previous GET or POST response for that
                                 resource.  The resource will be updated or
                                 deleted only if the etag you provide matches
                                 the resource's current etag value.
  --force                        Perform update without prompting for
                                 confirmation.
  -?, -h, --help                 Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network subnet --help
Usage: bmcs network subnet [OPTIONS] COMMAND [ARGS]...

  A logical subdivision of a VCN. Each subnet exists in a single Availability
  Domain and consists of a contiguous range of IP addresses that do not
  overlap with other subnets in the VCN. Example: 172.16.1.0/24. For more
  information, see [Overview of the Networking Service] and [Managing
  Subnets].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new subnet in the specified VCN.
  delete  Deletes the specified subnet, but only if...
  get     Gets the specified subnet's information.
  list    Lists the subnets in the specified VCN and...
  update  Updates the specified subnet's display name.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network subnet create --help
Usage: bmcs network subnet create [OPTIONS]

  Creates a new subnet in the specified VCN. You can't change the size of the
  subnet after creation, so it's important to think about the size of subnets
  you need before creating them. For more information, see [Managing Subnets].
  For information on the number of subnets you can have in a VCN, see [Service
  Limits].

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the subnet to reside. Notice that the subnet
  doesn't have to be in the same compartment as the VCN, route tables, or
  other Networking Service components. If you're not sure which compartment to
  use, put the subnet in the same compartment as the VCN. For more information
  about compartments and access control, see [Overview of the IAM Service].
  For information about OCIDs, see [Resource Identifiers].

  You may optionally associate a route table with the subnet. If you don't,
  the subnet will use the VCN's default route table. For more information
  about route tables, see [Managing Route Tables].

  You may optionally associate a security list with the subnet. If you don't,
  the subnet will use the VCN's default security list. For more information
  about security lists, see [Security Lists].

  You may optionally associate a set of DHCP options with the subnet. If you
  don't, the subnet will use the VCN's default set. For more information about
  DHCP options, see [Managing DHCP Options].

  You may optionally specify a *display name* for the subnet, otherwise a
  default is provided. It does not have to be unique, and you can change it.
  Avoid entering confidential information.

  You can also add a DNS label for the subnet, which is required if you want
  the Internet and VCN Resolver to resolve hostnames for instances in the
  subnet. For more information, see [DNS in Your Virtual Cloud Network].

Options:
  --availability-domain TEXT      The Availability Domain to contain the subnet.
                                  Example: `Uocm:PHX-AD-1`  [required]
  --cidr-block TEXT               The CIDR IP address range of the subnet.
                                  Example: `172.16.1.0/24`  [required]
  -c, --compartment-id TEXT       The OCID of the compartment to contain the
                                  subnet.  [required]
  --vcn-id TEXT                   The OCID of the VCN to contain the subnet.
                                  [required]
  --dhcp-options-id TEXT          The OCID of the set of DHCP options the subnet
                                  will use. If you don't provide a value, the
                                  subnet will use the VCN's default set of DHCP
                                  options.
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --dns-label TEXT                A DNS label for the subnet, used in
                                  conjunction with the VNIC's hostname and VCN's
                                  DNS label to form a fully qualified domain
                                  name (FQDN) for each VNIC within this subnet
                                  (e.g.,
                                  `bminstance-1.subnet123.vcn1.oraclevcn.com`).
                                  Must be an alphanumeric string that begins
                                  with a letter and is unique within the VCN.
                                  The value cannot be changed.
                                  
                                  This value must
                                  be set if you want to use the Internet and VCN
                                  Resolver to resolve the hostnames of instances
                                  in the subnet. It can only be set if the VCN
                                  itself was created with a DNS label.
                                  
                                  For more
                                  information, see [DNS in Your Virtual Cloud
                                  Network].
                                  
                                  Example: `subnet123`
  --prohibit-public-ip-on-vnic TEXT
                                  Whether VNICs within this subnet can have
                                  public IP addresses. Defaults to false, which
                                  means VNICs created in this subnet will
                                  automatically be assigned public IP addresses
                                  unless specified otherwise during instance
                                  launch (with the `--assign-public-ip` flag).
                                  If `--prohibit-public-ip-on-vnic` is set to
                                  true, VNICs created in this subnet cannot have
                                  public IP addresses (i.e., it's a private
                                  subnet).
                                  
                                  Example: `true`
  --route-table-id TEXT           The OCID of the route table the subnet will
                                  use. If you don't provide a value, the subnet
                                  will use the VCN's default route table.
  --security-list-ids TEXT        OCIDs for the security lists to associate with
                                  the subnet. If you don't provide a value, the
                                  VCN's default security list will be associated
                                  with the subnet. Remember that security lists
                                  are associated at the subnet level, but the
                                  rules are applied to the individual VNICs in
                                  the subnet. This must be provided in JSON
                                  format. See API reference for additional help.
                                  Example: '["ocid1.securitylist.oc1.phx.aaaaaaa
                                  adyndu2n3hcmdsjfiljwyq7vpxsvv7ynp4ori7aealcvhz
                                  icnzhyq"]'
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network subnet delete --help
Usage: bmcs network subnet delete [OPTIONS]

  Deletes the specified subnet, but only if there are no instances in the
  subnet. This is an asynchronous operation; the subnet's `lifecycleState`
  will change to TERMINATING temporarily. If there are any instances in the
  subnet, the state will instead change back to AVAILABLE.

Options:
  --subnet-id TEXT  The OCID of the subnet.  [required]
  --if-match TEXT   For optimistic concurrency control. In the PUT or DELETE
                    call for a resource, set the `if-match` parameter to the
                    value of the etag from a previous GET or POST response for
                    that resource.  The resource will be updated or deleted only
                    if the etag you provide matches the resource's current etag
                    value.
  --force           Perform deletion without prompting for confirmation.
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network subnet get --help
Usage: bmcs network subnet get [OPTIONS]

  Gets the specified subnet's information.

Options:
  --subnet-id TEXT  The OCID of the subnet.  [required]
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network subnet list --help
Usage: bmcs network subnet list [OPTIONS]

  Lists the subnets in the specified VCN and the specified compartment.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment.  [required]
  --vcn-id TEXT              The OCID of the VCN.  [required]
  --limit TEXT               The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network subnet update --help
Usage: bmcs network subnet update [OPTIONS]

  Updates the specified subnet's display name. Avoid entering confidential
  information.

Options:
  --subnet-id TEXT     The OCID of the subnet.  [required]
  --display-name TEXT  A user-friendly name. Does not have to be unique, and
                       it's changeable. Avoid entering confidential information.
  --if-match TEXT      For optimistic concurrency control. In the PUT or DELETE
                       call for a resource, set the `if-match` parameter to the
                       value of the etag from a previous GET or POST response
                       for that resource.  The resource will be updated or
                       deleted only if the etag you provide matches the
                       resource's current etag value.
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network vcn --help
Usage: bmcs network vcn [OPTIONS] COMMAND [ARGS]...

  A Virtual Cloud Network (VCN). For more information, see [Overview of the
  Networking Service].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a new Virtual Cloud Network (VCN).
  delete  Deletes the specified VCN.
  get     Gets the specified VCN's information.
  list    Lists the Virtual Cloud Networks (VCNs) in...
  update  Updates the specified VCN's display name.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network vcn create --help
Usage: bmcs network vcn create [OPTIONS]

  Creates a new Virtual Cloud Network (VCN). For more information, see
  [Managing Virtual Cloud Networks (VCNs)].

  For the VCN you must specify a single, contiguous IPv4 CIDR block. Oracle
  recommends using one of the private IP address ranges specified in [RFC
  1918] (10.0.0.0/8, 172.16/12, and 192.168/16). Example: 172.16.0.0/16. The
  CIDR block can range from /16 to /30, and it must not overlap with your on-
  premise network. You can't change the size of the VCN after creation.

  For the purposes of access control, you must provide the OCID of the
  compartment where you want the VCN to reside. Consult an Oracle Bare Metal
  Cloud Services administrator in your organization if you're not sure which
  compartment to use. Notice that the VCN doesn't have to be in the same
  compartment as the subnets or other Networking Service components. For more
  information about compartments and access control, see [Overview of the IAM
  Service]. For information about OCIDs, see [Resource Identifiers].

  You may optionally specify a *display name* for the VCN, otherwise a default
  is provided. It does not have to be unique, and you can change it. Avoid
  entering confidential information.

  You can also add a DNS label for the VCN, which is required if you want the
  instances to use the Interent and VCN Resolver option for DNS in the VCN.
  For more information, see [DNS in Your Virtual Cloud Network].

  The VCN automatically comes with a default route table, default security
  list, and default set of DHCP options. The OCID for each is returned in the
  response. You can't delete these default objects, but you can change their
  contents (i.e., route rules, etc.)

  The VCN and subnets you create are not accessible until you attach an
  Internet Gateway or set up an IPSec VPN or FastConnect. For more
  information, see [Overview of the Networking Service].

Options:
  --cidr-block TEXT          The CIDR IP address block of the VCN.
                             
                             Example:
                             `172.16.0.0/16`  [required]
  -c, --compartment-id TEXT  The OCID of the compartment to contain the VCN.
                             [required]
  --display-name TEXT        A user-friendly name. Does not have to be unique,
                             and it's changeable. Avoid entering confidential
                             information.
  --dns-label TEXT           A DNS label for the VCN, used in conjunction with
                             the VNIC's hostname and subnet's DNS label to form
                             a fully qualified domain name (FQDN) for each VNIC
                             within this subnet (e.g.,
                             `bminstance-1.subnet123.vcn1.oraclevcn.com`). Not
                             required to be unique, but it's a best practice to
                             set unique DNS labels for VCNs in your tenancy.
                             Must be an alphanumeric string that begins with a
                             letter. The value cannot be changed.
                             
                             You must set
                             this value if you want instances to be able to use
                             hostnames to resolve other instances in the VCN.
                             Otherwise the Internet and VCN Resolver will not
                             work.
                             
                             For more information, see [DNS in Your
                             Virtual Cloud Network].
                             
                             Example: `vcn1`
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network vcn delete --help
Usage: bmcs network vcn delete [OPTIONS]

  Deletes the specified VCN. The VCN must be empty and have no attached
  gateways. This is an asynchronous operation; the VCN's `lifecycleState` will
  change to TERMINATING temporarily until the VCN is completely removed.

Options:
  --vcn-id TEXT    The OCID of the VCN.  [required]
  --if-match TEXT  For optimistic concurrency control. In the PUT or DELETE call
                   for a resource, set the `if-match` parameter to the value of
                   the etag from a previous GET or POST response for that
                   resource.  The resource will be updated or deleted only if
                   the etag you provide matches the resource's current etag
                   value.
  --force          Perform deletion without prompting for confirmation.
  -?, -h, --help   Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network vcn get --help
Usage: bmcs network vcn get [OPTIONS]

  Gets the specified VCN's information.

Options:
  --vcn-id TEXT   The OCID of the VCN.  [required]
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network vcn list --help
Usage: bmcs network vcn list [OPTIONS]

  Lists the Virtual Cloud Networks (VCNs) in the specified compartment.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment.  [required]
  --limit TEXT               The maximum number of items to return in a
                             paginated "List" call.
                             
                             Example: `500`
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network vcn update --help
Usage: bmcs network vcn update [OPTIONS]

  Updates the specified VCN's display name. Avoid entering confidential
  information.

Options:
  --vcn-id TEXT        The OCID of the VCN.  [required]
  --display-name TEXT  A user-friendly name. Does not have to be unique, and
                       it's changeable. Avoid entering confidential information.
  --if-match TEXT      For optimistic concurrency control. In the PUT or DELETE
                       call for a resource, set the `if-match` parameter to the
                       value of the etag from a previous GET or POST response
                       for that resource.  The resource will be updated or
                       deleted only if the etag you provide matches the
                       resource's current etag value.
  -?, -h, --help       Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network vnic --help
Usage: bmcs network vnic [OPTIONS] COMMAND [ARGS]...

  A virtual network interface card. Each VNIC resides in a subnet in a VCN. An
  instance attaches to a VNIC to obtain a network connection into the VCN
  through that subnet. Each instance has a *primary VNIC* that is
  automatically created and attached during launch. You can add *secondary
  VNICs* to an instance after it's launched. For more information, see
  [Managing Virtual Network Interface Cards (VNICs)].

  Each VNIC has a *primary private IP* that is automatically assigned during
  launch. You can add *secondary private IPs* to a VNIC after it's created.
  For more information, see [CreatePrivateIp] and [Managing IP Addresses].

  To use any of the API operations, you must be authorized in an IAM policy.
  If you're not authorized, talk to an administrator. If you're an
  administrator who needs to write policies to give users access, see [Getting
  Started with Policies].

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  assign-private-ip    Assigns a secondary private IP address to the...
  get                  Gets the information for the specified...
  unassign-private-ip  Unassigns a secondary private IP address from...
  update               Updates the specified VNIC.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network vnic assign-private-ip --help
Usage: bmcs network vnic assign-private-ip [OPTIONS]

  Assigns a secondary private IP address to the specified VNIC. The secondary
  private IP must be in the same subnet as the VNIC. This command can also be
  used to move an existing secondary private IP to the specified VNIC.

  For more information about secondary private IPs, see [Managing IP
  Addresses]

Options:
  --vnic-id TEXT                  The OCID of the VNIC to assign the private IP
                                  to. The VNIC and private IP must be in the
                                  same subnet.  [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable. Avoid entering
                                  confidential information.
  --hostname-label TEXT           The hostname for the private IP. Used for DNS.
                                  The value is the hostname portion of the
                                  private IP's fully qualified domain name
                                  (FQDN) (for example, `bminstance-1` in FQDN
                                  `bminstance-1.subnet123.vcn1.oraclevcn.com`).
                                  Must be unique across all VNICs in the subnet
                                  and comply with [RFC 952] and [RFC 1123].
                                  
                                  For
                                  more information, see [DNS in Your Virtual
                                  Cloud Network].
                                  
                                  Example: `bminstance-1`
  --ip-address TEXT               A private IP address of your choice. Must be
                                  an available IP address within the subnet's
                                  CIDR. If you don't specify a value, Oracle
                                  automatically assigns a private IP address
                                  from the subnet.
                                  
                                  Example: `10.0.3.3`
  --unassign-if-already-assigned  Force reassignment of the IP address if it's
                                  already assigned to another VNIC in the
                                  subnet. This is only relevant if an IP address
                                  is associated with this command.
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network vnic get --help
Usage: bmcs network vnic get [OPTIONS]

  Gets the information for the specified virtual network interface card
  (VNIC). You can get the VNIC OCID from the [ListVnicAttachments] operation.

Options:
  --vnic-id TEXT  The OCID of the VNIC.  [required]
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network vnic unassign-private-ip --help
Usage: bmcs network vnic unassign-private-ip [OPTIONS]

  Unassigns a secondary private IP address from a VNIC. After the IP address
  is unassigned, you can assign to another VNIC in the subnet.

  This operation cannot be used with primary private IPs, which are
  automatically unassigned, and then deleted when the VNIC is terminated.

  For more information about secondary private IPs, see [Managing IP
  Addresses]

Options:
  --vnic-id TEXT     The OCID of the VNIC to unassign the private IP from.
                     [required]
  --ip-address TEXT  The secondary private IP to unassign from the VNIC.
                     [required]
  -?, -h, --help     Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs network vnic update --help
Usage: bmcs network vnic update [OPTIONS]

  Updates the specified VNIC.

Options:
  --vnic-id TEXT         The OCID of the VNIC.  [required]
  --display-name TEXT    A user-friendly name. Does not have to be unique, and
                         it's changeable.
  --hostname-label TEXT  The hostname for the VNIC's primary private IP. Used
                         for DNS. The value is the hostname portion of the
                         primary private IP's fully qualified domain name (FQDN)
                         (for example, `bminstance-1` in FQDN
                         `bminstance-1.subnet123.vcn1.oraclevcn.com`). Must be
                         unique across all VNICs in the subnet and comply with
                         [RFC 952] and [RFC 1123]. The value appears in the
                         [Vnic] object and also the [PrivateIp] object returned
                         by [ListPrivateIps] and [GetPrivateIp].
                         
                         For more
                         information, see [DNS in Your Virtual Cloud Network].
  --if-match TEXT        For optimistic concurrency control. In the PUT or
                         DELETE call for a resource, set the `if-match`
                         parameter to the value of the etag from a previous GET
                         or POST response for that resource.  The resource will
                         be updated or deleted only if the etag you provide
                         matches the resource's current etag value.
  -?, -h, --help         Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os --help
Usage: bmcs os [OPTIONS] COMMAND [ARGS]...

  Object Storage Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  bucket
  multipart
  ns
  object
  preauth-request  Operations on pre-authenticated requests.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os bucket --help
Usage: bmcs os bucket [OPTIONS] COMMAND [ARGS]...

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a bucket in the given namespace with...
  delete  Deletes a bucket if it is already empty.
  get     Gets the current representation of the given...
  list    Lists the `BucketSummary`s in a namespace.
  update  Updates a bucket's user-defined metadata.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os bucket create --help
Usage: bmcs os bucket create [OPTIONS]

  Creates a bucket in the given namespace with a bucket name and optional
  user-defined metadata.

  Example:     bmcs os bucket create -ns mynamespace --name mybucket
  --compartment-id ocid1.compartment.oc1..aaaaaaaarhifmvrvuqtye5q65flzp3pp2joj
  dc6rck6copzqck3ukcypxfga --metadata '{"key1":"value1","key2":"value2"}'

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -c, --compartment-id TEXT       The ID of the compartment in which to create
                                  the bucket.  [required]
  --name TEXT                     The name of the bucket.  [required]
  --metadata TEXT                 Arbitrary string keys and values for user-
                                  defined metadata. Must be in JSON format.
                                  Example: '{"key1":"value1","key2":"value2"}'
  --public-access-type [NoPublicAccess|ObjectRead]
                                  The type of public access available on this
                                  bucket. Allows authenticated caller to access
                                  the bucket or contents of this bucket. By
                                  default a bucket is set to NoPublicAccess. It
                                  is treated as NoPublicAccess when this value
                                  is not specified. When the type is
                                  NoPublicAccess the bucket does not allow any
                                  public access. When the type is ObjectRead the
                                  bucket allows public access to the GetObject
                                  operation only.
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os bucket delete --help
Usage: bmcs os bucket delete [OPTIONS]

  Deletes a bucket if it is already empty.

  Example:     bmcs os bucket delete -ns mynamespace --name mybucket

Options:
  -ns, --namespace TEXT  The top-level namespace used for the request.
                         [required]
  --name TEXT            The name of the bucket.  [required]
  --if-match TEXT        The entity tag to match.
  --force                Perform deletion without prompting for confirmation.
  -?, -h, --help         Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os bucket get --help
Usage: bmcs os bucket get [OPTIONS]

  Gets the current representation of the given bucket in the given namespace.

  Example:     bmcs os bucket get -ns mynamespace --name mybucket

Options:
  -ns, --namespace TEXT  The top-level namespace used for the request.
                         [required]
  --name TEXT            The name of the bucket.  [required]
  --if-match TEXT        The entity tag to match.
  --if-none-match TEXT   The entity tag to avoid matching.
  -?, -h, --help         Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os bucket list --help
Usage: bmcs os bucket list [OPTIONS]

  Lists the `BucketSummary`s in a namespace. A `BucketSummary` contains only
  summary fields for the bucket and not fields such as the user-defined
  metadata.

  Example:     bmcs os bucket list -ns mynamespace --compartment-id ocid1.comp
  artment.oc1..aaaaaaaarhifmvrvuqtye5q65flzp3pp2jojdc6rck6copzqck3ukcypxfga

Options:
  -ns, --namespace TEXT      The top-level namespace used for the request.
                             [required]
  -c, --compartment-id TEXT  The compartment ID to return buckets for.
                             [required]
  --limit INTEGER            The maximum number of items to return.  [default:
                             100]
  --page TEXT                The value of the `opc-next-page` response header
                             from the previous "List" call.
  -?, -h, --help             Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os bucket update --help
Usage: bmcs os bucket update [OPTIONS]

  Updates a bucket's user-defined metadata.

  Example:     bmcs os bucket update -ns mynamespace --name mybucket
  --metadata '{"key1":"value1","key2":"value2"}'

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  --name TEXT                     The name of the bucket.  [required]
  --if-match TEXT                 The entity tag to match.
  --metadata TEXT                 Arbitrary string keys and values for user-
                                  defined metadata. Must be in JSON format.
                                  Values will be appended to existing metadata.
                                  To remove a key, set it to null. Example:
                                  '{"key1":"value1","key2":null}'
  --public-access-type [NoPublicAccess|ObjectRead]
                                  The type of public access available on this
                                  bucket. Allows authenticated caller to access
                                  the bucket or contents of this bucket. By
                                  default a bucket is set to NoPublicAccess. It
                                  is treated as NoPublicAccess when this value
                                  is not specified. When the type is
                                  NoPublicAccess the bucket does not allow any
                                  public access. When the type is ObjectRead the
                                  bucket allows public access to the GetObject
                                  operation only.
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os multipart --help
Usage: bmcs os multipart [OPTIONS] COMMAND [ARGS]...

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  abort  Aborts an uncommitted multipart upload...
  list   List uncommitted multipart uploads for a...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os multipart abort --help
Usage: bmcs os multipart abort [OPTIONS]

  Aborts an uncommitted multipart upload

  Example:     bmcs os multipart abort -ns mynamespace -bn mybucket --name
  myfile.txt --upload-id my-upload-id

Options:
  -ns, --namespace TEXT    The top-level namespace used for the request.
                           [required]
  -bn, --bucket-name TEXT  The name of the bucket.  [required]
  -on, --object-name TEXT  The name of the object.  [required]
  --upload-id TEXT         Upload ID to abort.  [required]
  --force                  Abort the existing multipart upload without a
                           confirmation prompt.
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os multipart list --help
Usage: bmcs os multipart list [OPTIONS]

  List uncommitted multipart uploads for a namespace and bucket

  Example:     bmcs os multipart list -ns mynamespace -bn mybucket

Options:
  -ns, --namespace TEXT    The top-level namespace used for the request.
                           [required]
  -bn, --bucket-name TEXT  The name of the bucket.  [required]
  --limit INTEGER          The maximum number of items to return.  [default:
                           100]
  --page TEXT              The value of the `opc-next-page` response header from
                           the previous "List" call.
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os ns --help
Usage: bmcs os ns [OPTIONS] COMMAND [ARGS]...

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  get  Gets the name of the namespace for the user...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os ns get --help
Usage: bmcs os ns get [OPTIONS]

  Gets the name of the namespace for the user making the request.

  Example:     bmcs os ns get

Options:
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os object --help
Usage: bmcs os object [OPTIONS] COMMAND [ARGS]...

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  delete      Deletes an object.
  get         Gets the metadata and body of an object.
  head        Gets the user-defined metadata and entity tag...
  list        Lists the objects in a bucket.
  put         Creates a new object or overwrites an...
  resume-put  Resume a previous multipart put.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os object delete --help
Usage: bmcs os object delete [OPTIONS]

  Deletes an object.

  Example:     bmcs os object delete -ns mynamespace -bn mybucket --name
  myfile.txt

Options:
  -ns, --namespace TEXT    The top-level namespace used for the request.
                           [required]
  -bn, --bucket-name TEXT  The name of the bucket.  [required]
  --name TEXT              The name of the object to delete.  [required]
  --if-match TEXT          The entity tag to match.
  --force                  Perform deletion without prompting for confirmation.
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os object get --help
Usage: bmcs os object get [OPTIONS]

  Gets the metadata and body of an object.

  Example:     bmcs os object get -ns mynamespace -bn mybucket --name
  myfile.txt --file /Users/me/myfile.txt

Options:
  -ns, --namespace TEXT    The top-level namespace used for the request.
                           [required]
  -bn, --bucket-name TEXT  The name of the bucket.  [required]
  --name TEXT              The name of the object.  [required]
  --file FILENAME          The name of the file that will receive the object
                           content, or '-' to write to STDOUT.  [required]
  --if-match TEXT          The entity tag to match.
  --if-none-match TEXT     The entity tag to avoid matching.
  --range TEXT             Byte range to fetch. Follows
                           https://tools.ietf.org/html/rfc7233#section-2.1.
                           Example: bytes=2-10
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os object head --help
Usage: bmcs os object head [OPTIONS]

  Gets the user-defined metadata and entity tag for an object.

  Example:     bmcs os object head -ns mynamespace -bn mybucket --name
  myfile.txt

Options:
  -ns, --namespace TEXT    The top-level namespace used for the request.
                           [required]
  -bn, --bucket-name TEXT  The name of the bucket.  [required]
  --name TEXT              The name of the object.  [required]
  --if-match TEXT          The entity tag to match.
  --if-none-match TEXT     The entity tag to avoid matching.
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os object list --help
Usage: bmcs os object list [OPTIONS]

  Lists the objects in a bucket.

  Example:     bmcs os object list -ns mynamespace -bn mybucket --fields
  name,size,timeCreated

Options:
  -ns, --namespace TEXT    The top-level namespace used for the request.
                           [required]
  -bn, --bucket-name TEXT  The name of the bucket.  [required]
  --prefix TEXT            Only object names that begin with this prefix will be
                           returned.
  --start TEXT             Only object names greater or equal to this parameter
                           will be returned.
  --end TEXT               Only object names less than this parameter will be
                           returned.
  --limit INTEGER          The maximum number of items to return.  [default:
                           100]
  --delimiter TEXT         When this parameter is set, only objects whose names
                           do not contain the delimiter character (after an
                           optionally specified prefix) are returned. Scanned
                           objects whose names contain the delimiter have part
                           of their name up to the last occurrence of the
                           delimiter (after the optional prefix) returned as a
                           set of prefixes. Note: Only '/' is a supported
                           delimiter character at this time.
  --fields TEXT            Object summary in list of objects includes the 'name'
                           field. This parameter may also include 'size' (object
                           size in bytes), 'md5', and 'timeCreated' (object
                           creation date and time) fields. Value of this
                           parameter should be a comma separated, case-
                           insensitive list of those field names.  [default:
                           name,size,timeCreated,md5]
  -?, -h, --help           Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os object put --help
Usage: bmcs os object put [OPTIONS]

  Creates a new object or overwrites an existing one.

  Example:     bmcs os object put -ns mynamespace -bn mybucket --name
  myfile.txt --file /Users/me/myfile.txt --metadata
  '{"key1":"value1","key2":"value2"}'

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket.  [required]
  --file FILENAME                 The file to load as the content of the object,
                                  or '-' to read from STDIN.  [required]
  --name TEXT                     The name of the object. Default value is the
                                  filename excluding the path. Required if
                                  reading object from STDIN.
  --if-match TEXT                 The entity tag to match.
  --content-md5 TEXT              The base-64 encoded MD5 hash of the body.
  --metadata TEXT                 Arbitrary string keys and values for user-
                                  defined metadata. Must be in JSON format.
                                  Example: '{"key1":"value1","key2":"value2"}'
  --content-type TEXT             The content type of the object.
  --content-language TEXT         The content language of the object.
  --content-encoding TEXT         The content encoding of the object.
  --force                         If the object already exists, overwrite the
                                  existing object without a confirmation prompt.
  --no-multipart                  Do not use multipart uploads to upload the
                                  file in parts. By default files above 128 MiB
                                  will be uploaded in multiple parts, then
                                  combined server-side.
  --part-size INTEGER             Part size (in MiB) to use if uploading via
                                  multipart upload operations
  --disable-parallel-uploads      If the object will be uploaded in multiple
                                  parts, this option disables those parts from
                                  being uploaded in parallel.
  --parallel-upload-count INTEGER
                                  If the object will be uploaded in multiple
                                  parts, this option allows you to specify the
                                  maximum number of parts that can be uploaded
                                  in parallel. This option cannot be used with
                                  --disable-parallel-uploads or --no-multipart.
                                  Defaults to 3.
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os object resume-put --help
Usage: bmcs os object resume-put [OPTIONS]

  Resume a previous multipart put.

  Example:     bmcs os object resume-put -ns mynamespace -bn mybucket --name
  myfile.txt --file /Users/me/myfile.txt --upload-id my-upload-id

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket.  [required]
  --file FILENAME                 The file to load as the content of the object.
                                  [required]
  --name TEXT                     The name of the object. Default value is the
                                  filename excluding the path.
  --upload-id TEXT                Upload ID to resume.  [required]
  --part-size INTEGER             Part size in MiB
  --disable-parallel-uploads      If the object will be uploaded in multiple
                                  parts, this option disables those parts from
                                  being uploaded in parallel.
  --parallel-upload-count INTEGER
                                  This option allows you to specify the maximum
                                  number of parts that can be uploaded in
                                  parallel. This option cannot be used with
                                  --disable-parallel-uploads. Defaults to 3.
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os preauth-request --help
Usage: bmcs os preauth-request [OPTIONS] COMMAND [ARGS]...

  Pre-authenticated requests provide a way to allow access to specified object
  operations for a fixed amount of time without performing authentication.

  The access-uri will only be returned from the create operation for a pre-
  authenticated request (not get or list).  Note the access-uri value upon
  creation in order to use the pre-authenticated request later.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Creates a pre-authenticated request.
  delete  Deletes a pre-authenticateted request.
  get     Gets a pre-authenticated request.
  list    Lists pre-authenticated requests for the...

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os preauth-request create --help
Usage: bmcs os preauth-request create [OPTIONS]

  Creates a pre-authenticated request.

  The access-uri will only be returned from the create operation for a pre-
  authenticated request (not get or list).  Note the access-uri value upon
  creation in order to use the pre-authenticated request later.

Options:
  -ns, --namespace TEXT           The top-level namespace used for the request.
                                  [required]
  -bn, --bucket-name TEXT         The name of the bucket.
                                  
                                  Example: `my-new-
                                  bucket1`  [required]
  --name TEXT                     The user specified name for pre-authenticated
                                  request. Helpful for management purposes.
                                  [required]
  --access-type [ObjectRead|ObjectWrite|ObjectReadWrite|AnyObjectWrite]
                                  The operation that can be performed on this
                                  resource e.g PUT or GET.  [required]
  --time-expires TEXT             The expiration date after which the pre-
                                  authenticated request will no longer be valid
                                  per spec [RFC 3339].
                                  Example:
                                  2018-06-08T00:09:51.000+00:00  [required]
  -on, --object-name TEXT         Name of object that is being granted access to
                                  by the pre-authenticated request. This option
                                  must be specified if --access-type is
                                  ObjectRead, ObjectWrite, or ObjectReadWrite.
                                  This option cannot be specified if the
                                  --access-type is AnyObjectWrite.
  --opc-client-request-id TEXT    The client request ID for tracing.
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os preauth-request delete --help
Usage: bmcs os preauth-request delete [OPTIONS]

  Deletes a pre-authenticateted request.

Options:
  -ns, --namespace TEXT         The top-level namespace used for the request.
                                [required]
  -bn, --bucket-name TEXT       The name of the bucket.
                                
                                Example: `my-new-
                                bucket1`  [required]
  --par-id TEXT                 The unique identifier for the pre-authenticated
                                request (PAR). This can be used to manage the
                                PAR such as GET or DELETE the PAR  [required]
  --opc-client-request-id TEXT  The client request ID for tracing.
  --force                       Perform deletion without prompting for
                                confirmation.
  -?, -h, --help                Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os preauth-request get --help
Usage: bmcs os preauth-request get [OPTIONS]

  Gets a pre-authenticated request.

Options:
  -ns, --namespace TEXT         The top-level namespace used for the request.
                                [required]
  -bn, --bucket-name TEXT       The name of the bucket.
                                
                                Example: `my-new-
                                bucket1`  [required]
  --par-id TEXT                 The unique identifier for the pre-authenticated
                                request (PAR). This can be used to manage the
                                PAR such as GET or DELETE the PAR  [required]
  --opc-client-request-id TEXT  The client request ID for tracing.
  -?, -h, --help                Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs os preauth-request list --help
Usage: bmcs os preauth-request list [OPTIONS]

  Lists pre-authenticated requests for the bucket

Options:
  -ns, --namespace TEXT         The top-level namespace used for the request.
                                [required]
  -bn, --bucket-name TEXT       The name of the bucket.
                                
                                Example: `my-new-
                                bucket1`  [required]
  --object-name-prefix TEXT     Pre-authenticated requests returned by the list
                                must have object names starting with prefix
  --limit TEXT                  The maximum number of items to return.
  --page TEXT                   The page at which to start retrieving results.
  --opc-client-request-id TEXT  The client request ID for tracing.
  -?, -h, --help                Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs setup --help
Usage: bmcs setup [OPTIONS] COMMAND [ARGS]...

  Setup commands for CLI

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  autocomplete  Interactive script to set up tab completion...
  config        Interactive script to generate bmcs config...
  keys          Generates an RSA key pair.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs setup autocomplete --help
Usage: bmcs setup autocomplete [OPTIONS]

  Interactive script to set up tab completion for commands and parameters.

Options:
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs setup config --help
Usage: bmcs setup config [OPTIONS]

  Interactive script to generate bmcs config file.

Options:
  -?, -h, --help  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ bmcs setup keys --help
Usage: bmcs setup keys [OPTIONS]

  Generates an RSA key pair. A passphrase for the private key can be provided
  using either the 'passphrase' or 'passphrase-file' option. If neither option
  is provided, the user will be prompted for a passphrase via stdin.

Options:
  --key-name TEXT             A name for the key. Generated key files will be
                              {key-name}.pem and {key-name}_public.pem
  --output-dir PATH           An optional directory to output the generated
                              keys.
  --passphrase TEXT           An optional passphrase to encrypt the private key.
  --passphrase-file FILENAME  An optional file with the first line specifying a
                              passphrase to encrypt the private key (or '-' to
                              read from stdin).
  --overwrite                 An option to overwrite existing files without a
                              confirmation prompt.
  -?, -h, --help              Show this message and exit.

