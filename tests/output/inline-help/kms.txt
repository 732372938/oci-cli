CLI command reference is now available at https://docs.cloud.oracle.com/iaas/tools/oci-cli/latest/oci_cli_docs/. This file contains all the help for the 'kms' command in version 2.4.34 of the CLI. 
This file is generated by running test_help.py, which dumps the output of --help for every command.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms --help
Usage: oci kms [OPTIONS] COMMAND [ARGS]...

  Key Management Service

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  crypto      Operations for performing data encryption,...
  management  Operations for managing keys and vaults.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms crypto --help
Usage: oci kms crypto [OPTIONS] COMMAND [ARGS]...

  Operations for performing data encryption, decryption and generation of data
  encryption keys.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  decrypt                       Decrypts data using the given...
  encrypt                       Encrypts data using the given...
  generate-data-encryption-key  Generates a key that you can use to encrypt...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms crypto decrypt --help
Usage: oci kms crypto decrypt [OPTIONS]

  Decrypts data using the given DecryptDataDetails resource.

Options:
  --ciphertext TEXT               The encrypted data to decrypt. [required]
  --key-id TEXT                   The OCID of the key used to encrypt the
                                  ciphertext. [required]
  --associated-data COMPLEX TYPE  Information that can be used to provide an
                                  encryption context for the encrypted data. The
                                  length of the string representation of the
                                  associatedData must be fewer than 4096
                                  characters.
                                  This is a complex type whose value
                                  must be valid JSON. The value can be provided
                                  as a string on the command line or passed in
                                  as a file using
                                  the file://path/to/file
                                  syntax.
                                  
                                  The --generate-param-json-input
                                  option can be used to generate an example of
                                  the JSON which must be provided. We recommend
                                  storing this example
                                  in a file, modifying it
                                  as needed and then passing it back in via the
                                  file:// syntax.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms crypto encrypt --help
Usage: oci kms crypto encrypt [OPTIONS]

  Encrypts data using the given EncryptDataDetails resource. Plaintext
  included in the example request is a base64-encoded value of a UTF-8 string.

Options:
  --key-id TEXT                   The OCID of the key to encrypt with.
                                  [required]
  --plaintext TEXT                The plaintext data to encrypt. [required]
  --associated-data COMPLEX TYPE  Information that can be used to provide an
                                  encryption context for the encrypted data. The
                                  length of the string representation of the
                                  associatedData must be fewer than 4096
                                  characters.
                                  This is a complex type whose value
                                  must be valid JSON. The value can be provided
                                  as a string on the command line or passed in
                                  as a file using
                                  the file://path/to/file
                                  syntax.
                                  
                                  The --generate-param-json-input
                                  option can be used to generate an example of
                                  the JSON which must be provided. We recommend
                                  storing this example
                                  in a file, modifying it
                                  as needed and then passing it back in via the
                                  file:// syntax.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms crypto generate-data-encryption-key --help
Usage: oci kms crypto generate-data-encryption-key [OPTIONS]

  Generates a key that you can use to encrypt or decrypt data.

Options:
  --include-plaintext-key BOOLEAN
                                  If true, the generated key is also returned
                                  unencrypted. [required]
  --key-id TEXT                   The OCID of the master encryption key to
                                  encrypt the generated data encryption key
                                  with. [required]
  --key-shape COMPLEX TYPE        This is a complex type whose value must be
                                  valid JSON. The value can be provided as a
                                  string on the command line or passed in as a
                                  file using
                                  the file://path/to/file syntax.
                                  The --generate-param-json-input option can be
                                  used to generate an example of the JSON which
                                  must be provided. We recommend storing this
                                  example
                                  in a file, modifying it as needed and
                                  then passing it back in via the file://
                                  syntax.
                                   [required]
  --associated-data COMPLEX TYPE  Information that can be used to provide an
                                  encryption context for the encrypted data. The
                                  length of the string representation of the
                                  associatedData must be fewer than 4096
                                  characters.
                                  This is a complex type whose value
                                  must be valid JSON. The value can be provided
                                  as a string on the command line or passed in
                                  as a file using
                                  the file://path/to/file
                                  syntax.
                                  
                                  The --generate-param-json-input
                                  option can be used to generate an example of
                                  the JSON which must be provided. We recommend
                                  storing this example
                                  in a file, modifying it
                                  as needed and then passing it back in via the
                                  file:// syntax.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management --help
Usage: oci kms management [OPTIONS] COMMAND [ARGS]...

  Operations for managing keys and vaults.

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  key          Source of cryptographic material used to...
  key-version  A specific version of a Key.
  vault        A logical entity where Key Management creates...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management key --help
Usage: oci kms management key [OPTIONS] COMMAND [ARGS]...

  Source of cryptographic material used to encrypt and decrypt data

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create   Creates a new key.
  disable  Disables a key to make it unavailable for...
  enable   Enables a key to make it available for...
  get      Gets information about the specified key.
  list     Lists the keys in the specified vault and...
  update   Updates the properties of a key.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management key create --help
Usage: oci kms management key create [OPTIONS]

  Creates a new key.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment that contains this
                                  key. [required]
  --display-name TEXT             A user-friendly name for the key. It does not
                                  have to be unique, and it is changeable. Avoid
                                  entering confidential information. [required]
  --key-shape COMPLEX TYPE        This is a complex type whose value must be
                                  valid JSON. The value can be provided as a
                                  string on the command line or passed in as a
                                  file using
                                  the file://path/to/file syntax.
                                  The --generate-param-json-input option can be
                                  used to generate an example of the JSON which
                                  must be provided. We recommend storing this
                                  example
                                  in a file, modifying it as needed and
                                  then passing it back in via the file://
                                  syntax.
                                   [required]
  --wait-for-state [CREATING|ENABLING|ENABLED|DISABLING|DISABLED|DELETING|DELETED|PENDING_DELETION|SCHEDULING_DELETION|CANCELLING_DELETION]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management key disable --help
Usage: oci kms management key disable [OPTIONS]

  Disables a key to make it unavailable for encryption or decryption.

Options:
  --key-id TEXT                   The OCID of the key. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource. The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [CREATING|ENABLING|ENABLED|DISABLING|DISABLED|DELETING|DELETED|PENDING_DELETION|SCHEDULING_DELETION|CANCELLING_DELETION]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management key enable --help
Usage: oci kms management key enable [OPTIONS]

  Enables a key to make it available for encryption or decryption.

Options:
  --key-id TEXT                   The OCID of the key. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource. The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [CREATING|ENABLING|ENABLED|DISABLING|DISABLED|DELETING|DELETED|PENDING_DELETION|SCHEDULING_DELETION|CANCELLING_DELETION]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management key get --help
Usage: oci kms management key get [OPTIONS]

  Gets information about the specified key.

Options:
  --key-id TEXT     The OCID of the key. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management key list --help
Usage: oci kms management key list [OPTIONS]

  Lists the keys in the specified vault and compartment.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --sort-by [TIMECREATED|DISPLAYNAME]
                                  The field to sort by. You can specify only one
                                  sort order. The default order for TIMECREATED
                                  is descending. The default order for
                                  DISPLAYNAME is ascending.
  --sort-order [ASC|DESC]         The sort order to use, either ascending
                                  (`ASC`) or descending (`DESC`).
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management key update --help
Usage: oci kms management key update [OPTIONS]

  Updates the properties of a key. Specifically, you can only update the
  `displayName` property. Furthermore, the key must in an `ACTIVE` or
  `CREATING` state.

Options:
  --key-id TEXT                   The OCID of the key. [required]
  --display-name TEXT             A user-friendly name for the key. It does not
                                  have to be unique, and it is changeable. Avoid
                                  entering confidential information.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource. The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [CREATING|ENABLING|ENABLED|DISABLING|DISABLED|DELETING|DELETED|PENDING_DELETION|SCHEDULING_DELETION|CANCELLING_DELETION]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management key-version --help
Usage: oci kms management key-version [OPTIONS] COMMAND [ARGS]...

  A specific version of a Key. Each master encryption key is automatically
  assigned a key version

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  create  Generates new cryptographic material for a...
  get     Gets information about the specified key...
  list    Lists all key versions for the specified key.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management key-version create --help
Usage: oci kms management key-version create [OPTIONS]

  Generates new cryptographic material for a key. Key must be in an `ENABLED`
  state to be rotated.

Options:
  --key-id TEXT     The OCID of the key. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management key-version get --help
Usage: oci kms management key-version get [OPTIONS]

  Gets information about the specified key version.

Options:
  --key-id TEXT          The OCID of the key. [required]
  --key-version-id TEXT  The OCID of the key version. [required]
  --from-json TEXT       Provide input to this command as a JSON document from a
                         file.
                         
                         Options can still be provided on the command
                         line. If an option exists in both the JSON document and
                         the command line then the command line specified value
                         will be used
  -?, -h, --help         Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management key-version list --help
Usage: oci kms management key-version list [OPTIONS]

  Lists all key versions for the specified key.

Options:
  --key-id TEXT                   The OCID of the key. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --sort-by [TIMECREATED|DISPLAYNAME]
                                  The field to sort by. You can specify only one
                                  sort order. The default order for TIMECREATED
                                  is descending. The default order for
                                  DISPLAYNAME is ascending.
  --sort-order [ASC|DESC]         The sort order to use, either ascending
                                  (`ASC`) or descending (`DESC`).
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management vault --help
Usage: oci kms management vault [OPTIONS] COMMAND [ARGS]...

  A logical entity where Key Management creates and stores your keys

Options:
  -?, -h, --help  Show this message and exit.

Commands:
  cancel-deletion    Cancels the scheduled deletion of the...
  create             Creates a new vault.
  get                Gets the specified vault's configuration...
  list               Lists vaults in the specified compartment.
  schedule-deletion  Schedules the deletion of the specified...
  update             Updates the properties of a vault.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management vault cancel-deletion --help
Usage: oci kms management vault cancel-deletion [OPTIONS]

  Cancels the scheduled deletion of the specified Vault, which must be in
  PendingDeletion state. The Vault and all Keys in it will be moved back to
  their previous states before the deletion was scheduled.

Options:
  --vault-id TEXT                 The OCID of the vault. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource. The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [CREATING|ACTIVE|DELETING|DELETED|PENDING_DELETION|SCHEDULING_DELETION|CANCELLING_DELETION]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management vault create --help
Usage: oci kms management vault create [OPTIONS]

  Creates a new vault. The type of vault you create determines key placement,
  pricing, and available options. Options include storage isolation, a
  dedicated service endpoint instead of a shared service endpoint for API
  calls, and a dedicated HSM or a multitenant HSM.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment where you want to
                                  create this vault. [required]
  --display-name TEXT             A user-friendly name for the vault. It does
                                  not have to be unique, and it is changeable.
                                  Avoid entering confidential information.
                                  [required]
  --vault-type [VIRTUAL_PRIVATE]  The type of vault to create. Each type of
                                  vault stores the key with different degrees of
                                  isolation and has different options and
                                  pricing. [required]
  --wait-for-state [CREATING|ACTIVE|DELETING|DELETED|PENDING_DELETION|SCHEDULING_DELETION|CANCELLING_DELETION]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management vault get --help
Usage: oci kms management vault get [OPTIONS]

  Gets the specified vault's configuration information.

Options:
  --vault-id TEXT   The OCID of the vault. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a
                    file.
                    
                    Options can still be provided on the command line. If
                    an option exists in both the JSON document and the command
                    line then the command line specified value will be used
  -?, -h, --help    Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management vault list --help
Usage: oci kms management vault list [OPTIONS]

  Lists vaults in the specified compartment.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --sort-by [TIMECREATED|DISPLAYNAME]
                                  The field to sort by. You can specify only one
                                  sort order. The default order for TIMECREATED
                                  is descending. The default order for
                                  DISPLAYNAME is ascending.
  --sort-order [ASC|DESC]         The sort order to use, either ascending
                                  (`ASC`) or descending (`DESC`).
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management vault schedule-deletion --help
Usage: oci kms management vault schedule-deletion [OPTIONS]

  Schedules the deletion of the specified Vault. The Vault and all Keys in it
  will be moved to PendingDeletion state and deleted after the retention
  period.

Options:
  --vault-id TEXT                 The OCID of the vault. [required]
  --time-of-deletion DATETIME     An optional property to indicate the deletion
                                  time of the Vault. The time format should
                                  comply with RFC-3339 standards. This time must
                                  be between 7 to 30 days from the time when the
                                  request is received. If the property is
                                  missing, it will be set to 30 days from
                                  request time by default.
                                  
                                  The following
                                  datetime formats are supported:
                                  
                                  UTC with
                                  milliseconds
                                  ***********************
                                  Format:
                                  YYYY-MM-DDTHH:mm:ss.sssTZD
                                  Example:
                                  2017-09-15T20:30:00.123Z
                                  
                                  UTC without
                                  milliseconds
                                  **************************
                                  Format: YYYY-MM-DDTHH:mm:ssTZD
                                  Example:
                                  2017-09-15T20:30:00Z
                                  
                                  UTC with minute
                                  precision
                                  **************************
                                  Format:
                                  YYYY-MM-DDTHH:mmTZD
                                  Example: 2017-09-15T20:30Z
                                  
                                  Timezone with milliseconds
                                  ***************************
                                  Format: YYYY-MM-
                                  DDTHH:mm:ssTZD
                                  Example:
                                  2017-09-15T12:30:00.456-08:00,
                                  2017-09-15T12:30:00.456-0800
                                  
                                  Timezone
                                  without milliseconds
                                  *******************************
                                  Format: YYYY-
                                  MM-DDTHH:mm:ssTZD
                                  Example:
                                  2017-09-15T12:30:00-08:00,
                                  2017-09-15T12:30:00-0800
                                  
                                  Timezone with
                                  minute precision
                                  *******************************
                                  Format: YYYY-
                                  MM-DDTHH:mmTZD
                                  Example:
                                  2017-09-15T12:30-08:00,
                                  2017-09-15T12:30-0800
                                  
                                  Short date and time
                                  ********************
                                  The
                                  timezone for this date and time will be taken
                                  as UTC (Needs to be surrounded by single or
                                  double quotes)
                                  Format: 'YYYY-MM-DD HH:mm' or
                                  "YYYY-MM-DD HH:mm"
                                  Example: '2017-09-15 17:25'
                                  
                                  Date Only
                                  *********
                                  This date will be taken
                                  as midnight UTC of that day
                                  Format: YYYY-MM-DD
                                  Example: 2017-09-15
                                  
                                  Epoch seconds
                                  **************
                                  Example: 1412195400
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource. The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [CREATING|ACTIVE|DELETING|DELETED|PENDING_DELETION|SCHEDULING_DELETION|CANCELLING_DELETION]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci kms management vault update --help
Usage: oci kms management vault update [OPTIONS]

  Updates the properties of a vault. Specifically, you can only update the
  `displayName` property. Furthermore, the vault must be in an `ACTIVE` or
  `CREATING` state.

Options:
  --vault-id TEXT                 The OCID of the vault. [required]
  --display-name TEXT             A user-friendly name for the vault. It does
                                  not have to be unique, and it is changeable.
                                  Avoid entering confidential information.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource. The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [CREATING|ACTIVE|DELETING|DELETED|PENDING_DELETION|SCHEDULING_DELETION|CANCELLING_DELETION]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file.
                                  
                                  Options can still be
                                  provided on the command line. If an option
                                  exists in both the JSON document and the
                                  command line then the command line specified
                                  value will be used
  -?, -h, --help                  Show this message and exit.

