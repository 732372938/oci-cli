CLI command reference is now available at https://docs.cloud.oracle.com/iaas/tools/oci-cli/latest/oci_cli_docs/.
This file contains all the help for the 'health-checks' command. 
This file is generated by running scripts/generate_command_summary.py, which dumps the output of --help for every command.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks --help
Usage: oci health-checks [OPTIONS] COMMAND [ARGS]...

  CLI for the Health Checks service. Use this CLI to manage endpoint probes
  and monitors. For more information, see [Overview of the Health Checks
  Service](/iaas/Content/HealthChecks/Concepts/healthchecks.htm).

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  http-monitor       This model contains all of the mutable and...
  http-probe         A summary that contains all of the mutable...
  http-probe-result  The results returned by running an HTTP...
  ping-monitor       A summary containing all of the mutable and...
  ping-probe         This model contains all of the mutable and...
  ping-probe-result  The results returned by running a ping probe.
  vantage-point      Information about a vantage point.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks http-monitor --help
Usage: oci health-checks http-monitor [OPTIONS] COMMAND [ARGS]...

  This model contains all of the mutable and immutable properties for an HTTP
  monitor.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  create  Creates an HTTP monitor.
  delete  Deletes the HTTP monitor and its...
  get     Gets the configuration for the specified...
  list    Gets a list of HTTP monitors.
  update  Updates the configuration of the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks http-monitor create --help
Usage: oci health-checks http-monitor create [OPTIONS]

  Creates an HTTP monitor. Vantage points will be automatically selected if
  not specified, and probes will be initiated from each vantage point to each
  of the targets at the frequency specified by `intervalInSeconds`.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --targets COMPLEX TYPE          This is a complex type whose value must be
                                  valid JSON. The value can be provided as a
                                  string on the command line or passed in as a
                                  file using
                                  the file://path/to/file syntax.
                                  The --generate-param-json-input option can be
                                  used to generate an example of the JSON which
                                  must be provided. We recommend storing this
                                  example
                                  in a file, modifying it as needed and
                                  then passing it back in via the file://
                                  syntax.
                                   [required]
  --protocol [HTTP|HTTPS]         [required]
  --display-name TEXT             A user-friendly and mutable name suitable for
                                  display in a user interface. [required]
  --interval-in-seconds INTEGER   The monitor interval in seconds. Valid values:
                                  10, 30, and 60. [required]
  --vantage-point-names COMPLEX TYPE
                                  This is a complex type whose value must be
                                  valid JSON. The value can be provided as a
                                  string on the command line or passed in as a
                                  file using
                                  the file://path/to/file syntax.
                                  The --generate-param-json-input option can be
                                  used to generate an example of the JSON which
                                  must be provided. We recommend storing this
                                  example
                                  in a file, modifying it as needed and
                                  then passing it back in via the file://
                                  syntax.
  --port INTEGER                  The port on which to probe endpoints. If
                                  unspecified, probes will use the default port
                                  of their protocol.
  --timeout-in-seconds INTEGER    The probe timeout in seconds. Valid values:
                                  10, 20, 30, and 60. The probe timeout must be
                                  less than or equal to `intervalInSeconds` for
                                  monitors.
  --method [GET|HEAD]
  --path TEXT                     The optional URL path to probe, including
                                  query parameters.
  --headers COMPLEX TYPE          A dictionary of HTTP request headers.
                                  
                                  *Note:*
                                  Monitors and probes do not support the use of
                                  the `Authorization` HTTP header.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --is-enabled BOOLEAN            Enables or disables the monitor. Set to 'true'
                                  to launch monitoring.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace.  For more
                                  information, see [Resource Tags]. Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks http-monitor delete --help
Usage: oci health-checks http-monitor delete [OPTIONS]

  Deletes the HTTP monitor and its configuration. All future probes of this
  monitor are stopped. Results associated with the monitor are not deleted.

Options:
  --monitor-id TEXT  The OCID of a monitor. [required]
  --if-match TEXT    For optimistic concurrency control. In the PUT or DELETE
                     call for a resource, set the `if-match` parameter to the
                     value of the etag from a previous GET or POST response for
                     that resource.  The resource will be updated or deleted
                     only if the etag you provide matches the resource's current
                     etag value.
  --force            Perform deletion without prompting for confirmation.
  --from-json TEXT   Provide input to this command as a JSON document from a
                     file using the file://path-to/file syntax.
                     
                     The --generate-
                     full-command-json-input option can be used to generate a
                     sample json file to be used with this command option. The
                     key names are pre-populated and match the command option
                     names (converted to camelCase format, e.g. compartment-id
                     --> compartmentId), while the values of the keys need to be
                     populated by the user before using the sample file as an
                     input to this command. For any command option that accepts
                     multiple values, the value of the key can be a JSON array.
                     Options can still be provided on the command line. If an
                     option exists in both the JSON document and the command
                     line then the command line specified value will be used.
                     For examples on usage of this option, please see our "using
                     CLI with advanced JSON options" link: https://docs.cloud.or
                     acle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSON
                     Options
  -?, -h, --help     For detailed help on any of these individual commands,
                     enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks http-monitor get --help
Usage: oci health-checks http-monitor get [OPTIONS]

  Gets the configuration for the specified monitor.

Options:
  --monitor-id TEXT     The OCID of a monitor. [required]
  --if-none-match TEXT  The `If-None-Match` header field makes the request
                        method conditional on the absence of any current
                        representation of the target resource, when the field-
                        value is `*`, or having a selected representation with
                        an entity-tag that does not match any of those listed in
                        the field-value.
  --from-json TEXT      Provide input to this command as a JSON document from a
                        file using the file://path-to/file syntax.
                        
                        The
                        --generate-full-command-json-input option can be used to
                        generate a sample json file to be used with this command
                        option. The key names are pre-populated and match the
                        command option names (converted to camelCase format,
                        e.g. compartment-id --> compartmentId), while the values
                        of the keys need to be populated by the user before
                        using the sample file as an input to this command. For
                        any command option that accepts multiple values, the
                        value of the key can be a JSON array.
                        
                        Options can still
                        be provided on the command line. If an option exists in
                        both the JSON document and the command line then the
                        command line specified value will be used.
                        
                        For examples
                        on usage of this option, please see our "using CLI with
                        advanced JSON options" link: https://docs.cloud.oracle.c
                        om/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOpt
                        ions
  -?, -h, --help        For detailed help on any of these individual commands,
                        enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks http-monitor list --help
Usage: oci health-checks http-monitor list [OPTIONS]

  Gets a list of HTTP monitors.

Options:
  -c, --compartment-id TEXT   Filters results by compartment. [required]
  --limit INTEGER             The maximum number of items to return in a
                              paginated "List" call.
  --page TEXT                 The value of the `opc-next-page` response header
                              from the previous "List" call.
  --sort-by [id|displayName]  The field to sort by when listing monitors.
  --sort-order [ASC|DESC]     Controls the sort order of results.
  --display-name TEXT         Filters results that exactly match the
                              `displayName` field.
  --all                       Fetches all pages of results. If you provide this
                              option, then you cannot provide the --limit
                              option.
  --page-size INTEGER         When fetching results, the number of results to
                              fetch per call. Only valid when used with --all or
                              --limit, and ignored otherwise.
  --from-json TEXT            Provide input to this command as a JSON document
                              from a file using the file://path-to/file syntax.
                              The --generate-full-command-json-input option can
                              be used to generate a sample json file to be used
                              with this command option. The key names are pre-
                              populated and match the command option names
                              (converted to camelCase format, e.g. compartment-
                              id --> compartmentId), while the values of the
                              keys need to be populated by the user before using
                              the sample file as an input to this command. For
                              any command option that accepts multiple values,
                              the value of the key can be a JSON array.
                              
                              Options
                              can still be provided on the command line. If an
                              option exists in both the JSON document and the
                              command line then the command line specified value
                              will be used.
                              
                              For examples on usage of this
                              option, please see our "using CLI with advanced
                              JSON options" link: https://docs.cloud.oracle.com/
                              iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSON
                              Options
  -?, -h, --help              For detailed help on any of these individual
                              commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks http-monitor update --help
Usage: oci health-checks http-monitor update [OPTIONS]

  Updates the configuration of the specified HTTP monitor. Only the fields
  specified in the request body will be updated; all other configuration
  properties will remain unchanged.

Options:
  --monitor-id TEXT               The OCID of a monitor. [required]
  --targets COMPLEX TYPE          This is a complex type whose value must be
                                  valid JSON. The value can be provided as a
                                  string on the command line or passed in as a
                                  file using
                                  the file://path/to/file syntax.
                                  The --generate-param-json-input option can be
                                  used to generate an example of the JSON which
                                  must be provided. We recommend storing this
                                  example
                                  in a file, modifying it as needed and
                                  then passing it back in via the file://
                                  syntax.
  --vantage-point-names COMPLEX TYPE
                                  This is a complex type whose value must be
                                  valid JSON. The value can be provided as a
                                  string on the command line or passed in as a
                                  file using
                                  the file://path/to/file syntax.
                                  The --generate-param-json-input option can be
                                  used to generate an example of the JSON which
                                  must be provided. We recommend storing this
                                  example
                                  in a file, modifying it as needed and
                                  then passing it back in via the file://
                                  syntax.
  --port INTEGER                  The port on which to probe endpoints. If
                                  unspecified, probes will use the default port
                                  of their protocol.
  --timeout-in-seconds INTEGER    The probe timeout in seconds. Valid values:
                                  10, 20, 30, and 60. The probe timeout must be
                                  less than or equal to `intervalInSeconds` for
                                  monitors.
  --protocol [HTTP|HTTPS]
  --method [GET|HEAD]
  --path TEXT                     The optional URL path to probe, including
                                  query parameters.
  --headers COMPLEX TYPE          A dictionary of HTTP request headers.
                                  
                                  *Note:*
                                  Monitors and probes do not support the use of
                                  the `Authorization` HTTP header.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --display-name TEXT             A user-friendly and mutable name suitable for
                                  display in a user interface.
  --interval-in-seconds INTEGER   The monitor interval in seconds. Valid values:
                                  10, 30, and 60.
  --is-enabled BOOLEAN            Enables or disables the monitor. Set to 'true'
                                  to launch monitoring.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace.  For more
                                  information, see [Resource Tags]. Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks http-probe --help
Usage: oci health-checks http-probe [OPTIONS] COMMAND [ARGS]...

  A summary that contains all of the mutable and immutable properties for an
  HTTP probe.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  create-on-demand  Creates an on-demand HTTP probe.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks http-probe create-on-demand --help
Usage: oci health-checks http-probe create-on-demand [OPTIONS]

  Creates an on-demand HTTP probe. The location response header contains the
  URL for fetching the probe results.

  *Note:* On-demand probe configurations are not saved.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --targets COMPLEX TYPE          This is a complex type whose value must be
                                  valid JSON. The value can be provided as a
                                  string on the command line or passed in as a
                                  file using
                                  the file://path/to/file syntax.
                                  The --generate-param-json-input option can be
                                  used to generate an example of the JSON which
                                  must be provided. We recommend storing this
                                  example
                                  in a file, modifying it as needed and
                                  then passing it back in via the file://
                                  syntax.
                                   [required]
  --protocol [HTTP|HTTPS]         [required]
  --vantage-point-names COMPLEX TYPE
                                  This is a complex type whose value must be
                                  valid JSON. The value can be provided as a
                                  string on the command line or passed in as a
                                  file using
                                  the file://path/to/file syntax.
                                  The --generate-param-json-input option can be
                                  used to generate an example of the JSON which
                                  must be provided. We recommend storing this
                                  example
                                  in a file, modifying it as needed and
                                  then passing it back in via the file://
                                  syntax.
  --port INTEGER                  The port on which to probe endpoints. If
                                  unspecified, probes will use the default port
                                  of their protocol.
  --timeout-in-seconds INTEGER    The probe timeout in seconds. Valid values:
                                  10, 20, 30, and 60. The probe timeout must be
                                  less than or equal to `intervalInSeconds` for
                                  monitors.
  --method [GET|HEAD]
  --path TEXT                     The optional URL path to probe, including
                                  query parameters.
  --headers COMPLEX TYPE          A dictionary of HTTP request headers.
                                  
                                  *Note:*
                                  Monitors and probes do not support the use of
                                  the `Authorization` HTTP header.
                                  This is a
                                  complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks http-probe-result --help
Usage: oci health-checks http-probe-result [OPTIONS] COMMAND [ARGS]...

  The results returned by running an HTTP probe.  All times and durations are
  returned in milliseconds. All times are relative to the POSIX epoch
  (1970-01-01T00:00Z). Time properties conform to W3C Resource Timing. For
  more information, see [PerformanceResourceTiming] interface.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  list  Gets the HTTP probe results for the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks http-probe-result list --help
Usage: oci health-checks http-probe-result list [OPTIONS]

  Gets the HTTP probe results for the specified probe or monitor, where the
  `probeConfigurationId` is the OCID of either a monitor or an on-demand
  probe.

Options:
  --probe-configuration-id TEXT   The OCID of a monitor or on-demand probe.
                                  [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --start-time-greater-than-or-equal-to TEXT
                                  Returns results with a `startTime` equal to or
                                  greater than the specified value.
  --start-time-less-than-or-equal-to TEXT
                                  Returns results with a `startTime` equal to or
                                  less than the specified value.
  --sort-order [ASC|DESC]         Controls the sort order of results.
  --target TEXT                   Filters results that match the `target`.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks ping-monitor --help
Usage: oci health-checks ping-monitor [OPTIONS] COMMAND [ARGS]...

  A summary containing all of the mutable and immutable properties for a ping
  monitor.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  create  Creates a ping monitor.
  delete  Deletes the ping monitor and its...
  get     Gets the configuration for the specified ping...
  list    Gets a list of configured ping monitors.
  update  Updates the configuration of the specified...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks ping-monitor create --help
Usage: oci health-checks ping-monitor create [OPTIONS]

  Creates a ping monitor. Vantage points will be automatically selected if not
  specified, and probes will be initiated from each vantage point to each of
  the targets at the frequency specified by `intervalInSeconds`.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --targets COMPLEX TYPE          This is a complex type whose value must be
                                  valid JSON. The value can be provided as a
                                  string on the command line or passed in as a
                                  file using
                                  the file://path/to/file syntax.
                                  The --generate-param-json-input option can be
                                  used to generate an example of the JSON which
                                  must be provided. We recommend storing this
                                  example
                                  in a file, modifying it as needed and
                                  then passing it back in via the file://
                                  syntax.
                                   [required]
  --protocol [ICMP|TCP]           [required]
  --display-name TEXT             A user-friendly and mutable name suitable for
                                  display in a user interface. [required]
  --interval-in-seconds INTEGER   The monitor interval in seconds. Valid values:
                                  10, 30, and 60. [required]
  --vantage-point-names COMPLEX TYPE
                                  This is a complex type whose value must be
                                  valid JSON. The value can be provided as a
                                  string on the command line or passed in as a
                                  file using
                                  the file://path/to/file syntax.
                                  The --generate-param-json-input option can be
                                  used to generate an example of the JSON which
                                  must be provided. We recommend storing this
                                  example
                                  in a file, modifying it as needed and
                                  then passing it back in via the file://
                                  syntax.
  --port INTEGER                  The port on which to probe endpoints. If
                                  unspecified, probes will use the default port
                                  of their protocol.
  --timeout-in-seconds INTEGER    The probe timeout in seconds. Valid values:
                                  10, 20, 30, and 60. The probe timeout must be
                                  less than or equal to `intervalInSeconds` for
                                  monitors.
  --is-enabled BOOLEAN            Enables or disables the monitor. Set to 'true'
                                  to launch monitoring.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace.  For more
                                  information, see [Resource Tags]. Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks ping-monitor delete --help
Usage: oci health-checks ping-monitor delete [OPTIONS]

  Deletes the ping monitor and its configuration. All future probes of this
  monitor are stopped. Results associated with the monitor are not deleted.

Options:
  --monitor-id TEXT  The OCID of a monitor. [required]
  --if-match TEXT    For optimistic concurrency control. In the PUT or DELETE
                     call for a resource, set the `if-match` parameter to the
                     value of the etag from a previous GET or POST response for
                     that resource.  The resource will be updated or deleted
                     only if the etag you provide matches the resource's current
                     etag value.
  --force            Perform deletion without prompting for confirmation.
  --from-json TEXT   Provide input to this command as a JSON document from a
                     file using the file://path-to/file syntax.
                     
                     The --generate-
                     full-command-json-input option can be used to generate a
                     sample json file to be used with this command option. The
                     key names are pre-populated and match the command option
                     names (converted to camelCase format, e.g. compartment-id
                     --> compartmentId), while the values of the keys need to be
                     populated by the user before using the sample file as an
                     input to this command. For any command option that accepts
                     multiple values, the value of the key can be a JSON array.
                     Options can still be provided on the command line. If an
                     option exists in both the JSON document and the command
                     line then the command line specified value will be used.
                     For examples on usage of this option, please see our "using
                     CLI with advanced JSON options" link: https://docs.cloud.or
                     acle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSON
                     Options
  -?, -h, --help     For detailed help on any of these individual commands,
                     enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks ping-monitor get --help
Usage: oci health-checks ping-monitor get [OPTIONS]

  Gets the configuration for the specified ping monitor.

Options:
  --monitor-id TEXT     The OCID of a monitor. [required]
  --if-none-match TEXT  The `If-None-Match` header field makes the request
                        method conditional on the absence of any current
                        representation of the target resource, when the field-
                        value is `*`, or having a selected representation with
                        an entity-tag that does not match any of those listed in
                        the field-value.
  --from-json TEXT      Provide input to this command as a JSON document from a
                        file using the file://path-to/file syntax.
                        
                        The
                        --generate-full-command-json-input option can be used to
                        generate a sample json file to be used with this command
                        option. The key names are pre-populated and match the
                        command option names (converted to camelCase format,
                        e.g. compartment-id --> compartmentId), while the values
                        of the keys need to be populated by the user before
                        using the sample file as an input to this command. For
                        any command option that accepts multiple values, the
                        value of the key can be a JSON array.
                        
                        Options can still
                        be provided on the command line. If an option exists in
                        both the JSON document and the command line then the
                        command line specified value will be used.
                        
                        For examples
                        on usage of this option, please see our "using CLI with
                        advanced JSON options" link: https://docs.cloud.oracle.c
                        om/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOpt
                        ions
  -?, -h, --help        For detailed help on any of these individual commands,
                        enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks ping-monitor list --help
Usage: oci health-checks ping-monitor list [OPTIONS]

  Gets a list of configured ping monitors.

  Results are paginated based on `page` and `limit`.  The `opc-next-page`
  header provides a URL for fetching the next page.

Options:
  -c, --compartment-id TEXT   Filters results by compartment. [required]
  --limit INTEGER             The maximum number of items to return in a
                              paginated "List" call.
  --page TEXT                 The value of the `opc-next-page` response header
                              from the previous "List" call.
  --sort-by [id|displayName]  The field to sort by when listing monitors.
  --sort-order [ASC|DESC]     Controls the sort order of results.
  --display-name TEXT         Filters results that exactly match the
                              `displayName` field.
  --all                       Fetches all pages of results. If you provide this
                              option, then you cannot provide the --limit
                              option.
  --page-size INTEGER         When fetching results, the number of results to
                              fetch per call. Only valid when used with --all or
                              --limit, and ignored otherwise.
  --from-json TEXT            Provide input to this command as a JSON document
                              from a file using the file://path-to/file syntax.
                              The --generate-full-command-json-input option can
                              be used to generate a sample json file to be used
                              with this command option. The key names are pre-
                              populated and match the command option names
                              (converted to camelCase format, e.g. compartment-
                              id --> compartmentId), while the values of the
                              keys need to be populated by the user before using
                              the sample file as an input to this command. For
                              any command option that accepts multiple values,
                              the value of the key can be a JSON array.
                              
                              Options
                              can still be provided on the command line. If an
                              option exists in both the JSON document and the
                              command line then the command line specified value
                              will be used.
                              
                              For examples on usage of this
                              option, please see our "using CLI with advanced
                              JSON options" link: https://docs.cloud.oracle.com/
                              iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSON
                              Options
  -?, -h, --help              For detailed help on any of these individual
                              commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks ping-monitor update --help
Usage: oci health-checks ping-monitor update [OPTIONS]

  Updates the configuration of the specified ping monitor. Only the fields
  specified in the request body will be updated; all other configuration
  properties will remain unchanged.

Options:
  --monitor-id TEXT               The OCID of a monitor. [required]
  --targets COMPLEX TYPE          This is a complex type whose value must be
                                  valid JSON. The value can be provided as a
                                  string on the command line or passed in as a
                                  file using
                                  the file://path/to/file syntax.
                                  The --generate-param-json-input option can be
                                  used to generate an example of the JSON which
                                  must be provided. We recommend storing this
                                  example
                                  in a file, modifying it as needed and
                                  then passing it back in via the file://
                                  syntax.
  --vantage-point-names COMPLEX TYPE
                                  This is a complex type whose value must be
                                  valid JSON. The value can be provided as a
                                  string on the command line or passed in as a
                                  file using
                                  the file://path/to/file syntax.
                                  The --generate-param-json-input option can be
                                  used to generate an example of the JSON which
                                  must be provided. We recommend storing this
                                  example
                                  in a file, modifying it as needed and
                                  then passing it back in via the file://
                                  syntax.
  --port INTEGER                  The port on which to probe endpoints. If
                                  unspecified, probes will use the default port
                                  of their protocol.
  --timeout-in-seconds INTEGER    The probe timeout in seconds. Valid values:
                                  10, 20, 30, and 60. The probe timeout must be
                                  less than or equal to `intervalInSeconds` for
                                  monitors.
  --protocol [ICMP|TCP]
  --display-name TEXT             A user-friendly and mutable name suitable for
                                  display in a user interface.
  --interval-in-seconds INTEGER   The monitor interval in seconds. Valid values:
                                  10, 30, and 60.
  --is-enabled BOOLEAN            Enables or disables the monitor. Set to 'true'
                                  to launch monitoring.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace.  For more
                                  information, see [Resource Tags]. Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks ping-probe --help
Usage: oci health-checks ping-probe [OPTIONS] COMMAND [ARGS]...

  This model contains all of the mutable and immutable properties for a ping
  probe.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  create-on-demand  Creates an on-demand ping probe.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks ping-probe create-on-demand --help
Usage: oci health-checks ping-probe create-on-demand [OPTIONS]

  Creates an on-demand ping probe. The location response header contains the
  URL for fetching probe results.

  *Note:* The on-demand probe configuration is not saved.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --targets COMPLEX TYPE          This is a complex type whose value must be
                                  valid JSON. The value can be provided as a
                                  string on the command line or passed in as a
                                  file using
                                  the file://path/to/file syntax.
                                  The --generate-param-json-input option can be
                                  used to generate an example of the JSON which
                                  must be provided. We recommend storing this
                                  example
                                  in a file, modifying it as needed and
                                  then passing it back in via the file://
                                  syntax.
                                   [required]
  --protocol [ICMP|TCP]           [required]
  --vantage-point-names COMPLEX TYPE
                                  This is a complex type whose value must be
                                  valid JSON. The value can be provided as a
                                  string on the command line or passed in as a
                                  file using
                                  the file://path/to/file syntax.
                                  The --generate-param-json-input option can be
                                  used to generate an example of the JSON which
                                  must be provided. We recommend storing this
                                  example
                                  in a file, modifying it as needed and
                                  then passing it back in via the file://
                                  syntax.
  --port INTEGER                  The port on which to probe endpoints. If
                                  unspecified, probes will use the default port
                                  of their protocol.
  --timeout-in-seconds INTEGER    The probe timeout in seconds. Valid values:
                                  10, 20, 30, and 60. The probe timeout must be
                                  less than or equal to `intervalInSeconds` for
                                  monitors.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks ping-probe-result --help
Usage: oci health-checks ping-probe-result [OPTIONS] COMMAND [ARGS]...

  The results returned by running a ping probe.  All times and durations are
  returned in milliseconds. All times are relative to the POSIX epoch
  (1970-01-01T00:00Z).

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  list  Returns the results for the specified probe,...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks ping-probe-result list --help
Usage: oci health-checks ping-probe-result list [OPTIONS]

  Returns the results for the specified probe, where the
  `probeConfigurationId` is the OCID of either a monitor or an on-demand
  probe.

  Results are paginated based on `page` and `limit`.  The `opc-next-page`
  header provides a URL for fetching the next page.  Use `sortOrder` to set
  the order of the results.  If `sortOrder` is unspecified, results are sorted
  in ascending order by `startTime`.

Options:
  --probe-configuration-id TEXT   The OCID of a monitor or on-demand probe.
                                  [required]
  --limit INTEGER                 The maximum number of items to return in a
                                  paginated "List" call.
  --page TEXT                     The value of the `opc-next-page` response
                                  header from the previous "List" call.
  --start-time-greater-than-or-equal-to TEXT
                                  Returns results with a `startTime` equal to or
                                  greater than the specified value.
  --start-time-less-than-or-equal-to TEXT
                                  Returns results with a `startTime` equal to or
                                  less than the specified value.
  --sort-order [ASC|DESC]         Controls the sort order of results.
  --target TEXT                   Filters results that match the `target`.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks vantage-point --help
Usage: oci health-checks vantage-point [OPTIONS] COMMAND [ARGS]...

  Information about a vantage point.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  list  Gets information about all vantage points...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci health-checks vantage-point list --help
Usage: oci health-checks vantage-point list [OPTIONS]

  Gets information about all vantage points available to the user.

Options:
  --limit INTEGER               The maximum number of items to return in a
                                paginated "List" call.
  --page TEXT                   The value of the `opc-next-page` response header
                                from the previous "List" call.
  --sort-by [name|displayName]  The field to sort by when listing vantage
                                points.
  --sort-order [ASC|DESC]       Controls the sort order of results.
  --name TEXT                   Filters results that exactly match the `name`
                                field.
  --display-name TEXT           Filters results that exactly match the
                                `displayName` field.
  --all                         Fetches all pages of results. If you provide
                                this option, then you cannot provide the --limit
                                option.
  --page-size INTEGER           When fetching results, the number of results to
                                fetch per call. Only valid when used with --all
                                or --limit, and ignored otherwise.
  --from-json TEXT              Provide input to this command as a JSON document
                                from a file using the file://path-to/file
                                syntax.
                                
                                The --generate-full-command-json-input
                                option can be used to generate a sample json
                                file to be used with this command option. The
                                key names are pre-populated and match the
                                command option names (converted to camelCase
                                format, e.g. compartment-id --> compartmentId),
                                while the values of the keys need to be
                                populated by the user before using the sample
                                file as an input to this command. For any
                                command option that accepts multiple values, the
                                value of the key can be a JSON array.
                                
                                Options
                                can still be provided on the command line. If an
                                option exists in both the JSON document and the
                                command line then the command line specified
                                value will be used.
                                
                                For examples on usage of
                                this option, please see our "using CLI with
                                advanced JSON options" link: https://docs.cloud.
                                oracle.com/iaas/Content/API/SDKDocs/cliusing.htm
                                #AdvancedJSONOptions
  -?, -h, --help                For detailed help on any of these individual
                                commands, enter <command> --help.

