CLI command reference is now available at https://docs.cloud.oracle.com/iaas/tools/oci-cli/latest/oci_cli_docs/.
This file contains all the help for the 'analytics' command. 
This file is generated by running scripts/doc-gen/generate_cli_doc_pages,py, which dumps the output of --help for every command.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics --help
Usage: oci analytics [OPTIONS] COMMAND [ARGS]...

  Analytics CLI.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  analytics-instance  Analytics Instance metadata.
  work-request        An asynchronous work request.
  work-request-error  Error encountered during the execution of a...
  work-request-log    Log entries related to a specific work...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics analytics-instance --help
Usage: oci analytics analytics-instance [OPTIONS] COMMAND [ARGS]...

  Analytics Instance metadata.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  change-compartment  Change the compartment of an Analytics...
  create              Create a new AnalyticsInstance in the...
  delete              Terminates the specified Analytics instance.
  get                 Info for a specific Analytics instance.
  list                List Analytics instances.
  scale               Scale an Analytics instance up or down.
  start               Starts the specified Analytics instance.
  stop                Stop the specified Analytics instance.
  update              Updates certain fields of an Analytics...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics analytics-instance change-compartment --help
Usage: oci analytics analytics-instance change-compartment [OPTIONS]

  Change the compartment of an Analytics instance. The operation is long-
  running and creates a new WorkRequest.

Options:
  --analytics-instance-id TEXT    The OCID of the AnalyticsInstance. [required]
  -c, --compartment-id TEXT       The OCID of the new compartment. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED|CANCELING|CANCELED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state. Multiple states can
                                  be specified, returning on the first state.
                                  For example, --wait-for-state SUCCEEDED
                                  --wait-for-state FAILED would return on
                                  whichever lifecycle state is reached first. If
                                  timeout is reached, a return code of 2 is
                                  returned. For any other error, a return code
                                  of 1 is returned.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics analytics-instance create --help
Usage: oci analytics analytics-instance create [OPTIONS]

  Create a new AnalyticsInstance in the specified compartment. The operation
  is long-running and creates a new WorkRequest.

Options:
  --name TEXT                     The name of the Analytics instance. This name
                                  must be unique in the tenancy and cannot be
                                  changed. [required]
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --feature-set [SELF_SERVICE_ANALYTICS|ENTERPRISE_ANALYTICS]
                                  Analytics feature set. [required]
  --license-type [LICENSE_INCLUDED|BRING_YOUR_OWN_LICENSE]
                                  The license used for the service. [required]
  --description TEXT              Optional description.
  --email-notification TEXT       Email address receiving notifications.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED|CANCELING|CANCELED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state. Multiple states can
                                  be specified, returning on the first state.
                                  For example, --wait-for-state SUCCEEDED
                                  --wait-for-state FAILED would return on
                                  whichever lifecycle state is reached first. If
                                  timeout is reached, a return code of 2 is
                                  returned. For any other error, a return code
                                  of 1 is returned.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --idcs-access-token-file FILENAME
                                  A file containing the IDCS access token
                                  identifying a stripe and service administrator
                                  user.
  --capacity-type TEXT            The capacity model to use. [required]
  --capacity-value INTEGER        The capacity value selected (OLPU count,
                                  number of users, ...etc...). This parameter
                                  affects the number of CPUs, amount of memory
                                  or other resources allocated to the instance.
                                  [required]
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics analytics-instance delete --help
Usage: oci analytics analytics-instance delete [OPTIONS]

  Terminates the specified Analytics instance. The operation is long-running
  and creates a new WorkRequest.

Options:
  --analytics-instance-id TEXT    The OCID of the AnalyticsInstance. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED|CANCELING|CANCELED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state. Multiple states can
                                  be specified, returning on the first state.
                                  For example, --wait-for-state SUCCEEDED
                                  --wait-for-state FAILED would return on
                                  whichever lifecycle state is reached first. If
                                  timeout is reached, a return code of 2 is
                                  returned. For any other error, a return code
                                  of 1 is returned.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics analytics-instance get --help
Usage: oci analytics analytics-instance get [OPTIONS]

  Info for a specific Analytics instance.

Options:
  --analytics-instance-id TEXT  The OCID of the AnalyticsInstance. [required]
  --from-json TEXT              Provide input to this command as a JSON document
                                from a file using the file://path-to/file
                                syntax.
                                
                                The --generate-full-command-json-input
                                option can be used to generate a sample json
                                file to be used with this command option. The
                                key names are pre-populated and match the
                                command option names (converted to camelCase
                                format, e.g. compartment-id --> compartmentId),
                                while the values of the keys need to be
                                populated by the user before using the sample
                                file as an input to this command. For any
                                command option that accepts multiple values, the
                                value of the key can be a JSON array.
                                
                                Options
                                can still be provided on the command line. If an
                                option exists in both the JSON document and the
                                command line then the command line specified
                                value will be used.
                                
                                For examples on usage of
                                this option, please see our "using CLI with
                                advanced JSON options" link: https://docs.cloud.
                                oracle.com/iaas/Content/API/SDKDocs/cliusing.htm
                                #AdvancedJSONOptions
  -?, -h, --help                For detailed help on any of these individual
                                commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics analytics-instance list --help
Usage: oci analytics analytics-instance list [OPTIONS]

  List Analytics instances.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --name TEXT                     A filter to return only resources that match
                                  the given name exactly.
  --capacity-type [OLPU_COUNT|USER_COUNT]
                                  A filter to only return resources matching the
                                  capacity type enum. Values are case-
                                  insensitive.
  --feature-set [SELF_SERVICE_ANALYTICS|ENTERPRISE_ANALYTICS]
                                  A filter to only return resources matching the
                                  feature set. Values are case-insensitive.
  --lifecycle-state [ACTIVE|CREATING|DELETED|DELETING|FAILED|INACTIVE|UPDATING]
                                  A filter to only return resources matching the
                                  lifecycle state. The state value is case-
                                  insensitive.
  --limit INTEGER                 For list pagination. The maximum number of
                                  results per page, or items to return in a
                                  paginated "List" call. For important details
                                  about how pagination works, see [List
                                  Pagination].
                                  
                                  Example: `50`
  --page TEXT                     For list pagination. The value of the `opc-
                                  next-page` response header from the previous
                                  "List" call. For important details about how
                                  pagination works, see [List Pagination].
  --sort-by [capacityType|featureSet|lifecycleState|name|timeCreated]
                                  The field to sort by (one column only).
                                  Default sort order is ascending exception of
                                  `timeCreated` column (descending).
  --sort-order [ASC|DESC]         The sort order to use, either ascending
                                  (`ASC`) or descending (`DESC`).
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics analytics-instance scale --help
Usage: oci analytics analytics-instance scale [OPTIONS]

  Scale an Analytics instance up or down. The operation is long-running and
  creates a new WorkRequest.

Options:
  --analytics-instance-id TEXT    The OCID of the AnalyticsInstance. [required]
  --capacity COMPLEX TYPE         This is a complex type whose value must be
                                  valid JSON. The value can be provided as a
                                  string on the command line or passed in as a
                                  file using
                                  the file://path/to/file syntax.
                                  The --generate-param-json-input option can be
                                  used to generate an example of the JSON which
                                  must be provided. We recommend storing this
                                  example
                                  in a file, modifying it as needed and
                                  then passing it back in via the file://
                                  syntax.
                                   [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED|CANCELING|CANCELED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state. Multiple states can
                                  be specified, returning on the first state.
                                  For example, --wait-for-state SUCCEEDED
                                  --wait-for-state FAILED would return on
                                  whichever lifecycle state is reached first. If
                                  timeout is reached, a return code of 2 is
                                  returned. For any other error, a return code
                                  of 1 is returned.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics analytics-instance start --help
Usage: oci analytics analytics-instance start [OPTIONS]

  Starts the specified Analytics instance. The operation is long-running and
  creates a new WorkRequest.

Options:
  --analytics-instance-id TEXT    The OCID of the AnalyticsInstance. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED|CANCELING|CANCELED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state. Multiple states can
                                  be specified, returning on the first state.
                                  For example, --wait-for-state SUCCEEDED
                                  --wait-for-state FAILED would return on
                                  whichever lifecycle state is reached first. If
                                  timeout is reached, a return code of 2 is
                                  returned. For any other error, a return code
                                  of 1 is returned.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics analytics-instance stop --help
Usage: oci analytics analytics-instance stop [OPTIONS]

  Stop the specified Analytics instance. The operation is long-running and
  creates a new WorkRequest.

Options:
  --analytics-instance-id TEXT    The OCID of the AnalyticsInstance. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED|CANCELING|CANCELED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state. Multiple states can
                                  be specified, returning on the first state.
                                  For example, --wait-for-state SUCCEEDED
                                  --wait-for-state FAILED would return on
                                  whichever lifecycle state is reached first. If
                                  timeout is reached, a return code of 2 is
                                  returned. For any other error, a return code
                                  of 1 is returned.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics analytics-instance update --help
Usage: oci analytics analytics-instance update [OPTIONS]

  Updates certain fields of an Analytics instance. Fields that are not
  provided in the request will not be updated.

Options:
  --analytics-instance-id TEXT    The OCID of the AnalyticsInstance. [required]
  --description TEXT              Optional description.
  --email-notification TEXT       Email address receiving notifications.
  --license-type [LICENSE_INCLUDED|BRING_YOUR_OWN_LICENSE]
                                  The license used for the service.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags].
                                  
                                  Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource.  The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [ACTIVE|CREATING|DELETED|DELETING|FAILED|INACTIVE|UPDATING]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state. Multiple states can be
                                  specified, returning on the first state. For
                                  example, --wait-for-state SUCCEEDED --wait-
                                  for-state FAILED would return on whichever
                                  lifecycle state is reached first. If timeout
                                  is reached, a return code of 2 is returned.
                                  For any other error, a return code of 1 is
                                  returned.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics work-request --help
Usage: oci analytics work-request [OPTIONS] COMMAND [ARGS]...

  An asynchronous work request.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  delete  Cancel a work request that has not started...
  get     Get the details of a work request.
  list    List all work requests in a compartment.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics work-request delete --help
Usage: oci analytics work-request delete [OPTIONS]

  Cancel a work request that has not started yet.

Options:
  --work-request-id TEXT  The OCID of the work request. [required]
  --if-match TEXT         For optimistic concurrency control. In the PUT or
                          DELETE call for a resource, set the `if-match`
                          parameter to the value of the etag from a previous GET
                          or POST response for that resource.  The resource will
                          be updated or deleted only if the etag you provide
                          matches the resource's current etag value.
  --force                 Perform deletion without prompting for confirmation.
  --from-json TEXT        Provide input to this command as a JSON document from
                          a file using the file://path-to/file syntax.
                          
                          The
                          --generate-full-command-json-input option can be used
                          to generate a sample json file to be used with this
                          command option. The key names are pre-populated and
                          match the command option names (converted to camelCase
                          format, e.g. compartment-id --> compartmentId), while
                          the values of the keys need to be populated by the
                          user before using the sample file as an input to this
                          command. For any command option that accepts multiple
                          values, the value of the key can be a JSON array.
                          Options can still be provided on the command line. If
                          an option exists in both the JSON document and the
                          command line then the command line specified value
                          will be used.
                          
                          For examples on usage of this option,
                          please see our "using CLI with advanced JSON options"
                          link: https://docs.cloud.oracle.com/iaas/Content/API/S
                          DKDocs/cliusing.htm#AdvancedJSONOptions
  -?, -h, --help          For detailed help on any of these individual commands,
                          enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics work-request get --help
Usage: oci analytics work-request get [OPTIONS]

  Get the details of a work request.

Options:
  --work-request-id TEXT  The OCID of the work request. [required]
  --from-json TEXT        Provide input to this command as a JSON document from
                          a file using the file://path-to/file syntax.
                          
                          The
                          --generate-full-command-json-input option can be used
                          to generate a sample json file to be used with this
                          command option. The key names are pre-populated and
                          match the command option names (converted to camelCase
                          format, e.g. compartment-id --> compartmentId), while
                          the values of the keys need to be populated by the
                          user before using the sample file as an input to this
                          command. For any command option that accepts multiple
                          values, the value of the key can be a JSON array.
                          Options can still be provided on the command line. If
                          an option exists in both the JSON document and the
                          command line then the command line specified value
                          will be used.
                          
                          For examples on usage of this option,
                          please see our "using CLI with advanced JSON options"
                          link: https://docs.cloud.oracle.com/iaas/Content/API/S
                          DKDocs/cliusing.htm#AdvancedJSONOptions
  -?, -h, --help          For detailed help on any of these individual commands,
                          enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics work-request list --help
Usage: oci analytics work-request list [OPTIONS]

  List all work requests in a compartment.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment. [required]
  --resource-id TEXT              The OCID of the resource associated with a
                                  work request.
  --resource-type [ANALYTICS_INSTANCE]
                                  Type of the resource associated with a work
                                  request
  --status [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED|CANCELING|CANCELED]
                                  One or more work request status values to
                                  filter on.
  --limit INTEGER                 For list pagination. The maximum number of
                                  results per page, or items to return in a
                                  paginated "List" call. For important details
                                  about how pagination works, see [List
                                  Pagination].
                                  
                                  Example: `50`
  --page TEXT                     For list pagination. The value of the `opc-
                                  next-page` response header from the previous
                                  "List" call. For important details about how
                                  pagination works, see [List Pagination].
  --sort-by [id|operationType|status|timeAccepted|timeStarted|timeFinished]
                                  The field used for sorting work request
                                  results.
  --sort-order [ASC|DESC]         The sort order to use, either ascending
                                  (`ASC`) or descending (`DESC`).
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics work-request-error --help
Usage: oci analytics work-request-error [OPTIONS] COMMAND [ARGS]...

  Error encountered during the execution of a work request.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  list  Get the errors of a work request.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics work-request-error list --help
Usage: oci analytics work-request-error list [OPTIONS]

  Get the errors of a work request.

Options:
  --work-request-id TEXT  The OCID of the work request. [required]
  --limit INTEGER         For list pagination. The maximum number of results per
                          page, or items to return in a paginated "List" call.
                          For important details about how pagination works, see
                          [List Pagination].
                          
                          Example: `50`
  --page TEXT             For list pagination. The value of the `opc-next-page`
                          response header from the previous "List" call. For
                          important details about how pagination works, see
                          [List Pagination].
  --all                   Fetches all pages of results. If you provide this
                          option, then you cannot provide the --limit option.
  --page-size INTEGER     When fetching results, the number of results to fetch
                          per call. Only valid when used with --all or --limit,
                          and ignored otherwise.
  --from-json TEXT        Provide input to this command as a JSON document from
                          a file using the file://path-to/file syntax.
                          
                          The
                          --generate-full-command-json-input option can be used
                          to generate a sample json file to be used with this
                          command option. The key names are pre-populated and
                          match the command option names (converted to camelCase
                          format, e.g. compartment-id --> compartmentId), while
                          the values of the keys need to be populated by the
                          user before using the sample file as an input to this
                          command. For any command option that accepts multiple
                          values, the value of the key can be a JSON array.
                          Options can still be provided on the command line. If
                          an option exists in both the JSON document and the
                          command line then the command line specified value
                          will be used.
                          
                          For examples on usage of this option,
                          please see our "using CLI with advanced JSON options"
                          link: https://docs.cloud.oracle.com/iaas/Content/API/S
                          DKDocs/cliusing.htm#AdvancedJSONOptions
  -?, -h, --help          For detailed help on any of these individual commands,
                          enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics work-request-log --help
Usage: oci analytics work-request-log [OPTIONS] COMMAND [ARGS]...

  Log entries related to a specific work request.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  list  Get the logs of a work request.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci analytics work-request-log list --help
Usage: oci analytics work-request-log list [OPTIONS]

  Get the logs of a work request.

Options:
  --work-request-id TEXT  The OCID of the work request. [required]
  --limit INTEGER         For list pagination. The maximum number of results per
                          page, or items to return in a paginated "List" call.
                          For important details about how pagination works, see
                          [List Pagination].
                          
                          Example: `50`
  --page TEXT             For list pagination. The value of the `opc-next-page`
                          response header from the previous "List" call. For
                          important details about how pagination works, see
                          [List Pagination].
  --all                   Fetches all pages of results. If you provide this
                          option, then you cannot provide the --limit option.
  --page-size INTEGER     When fetching results, the number of results to fetch
                          per call. Only valid when used with --all or --limit,
                          and ignored otherwise.
  --from-json TEXT        Provide input to this command as a JSON document from
                          a file using the file://path-to/file syntax.
                          
                          The
                          --generate-full-command-json-input option can be used
                          to generate a sample json file to be used with this
                          command option. The key names are pre-populated and
                          match the command option names (converted to camelCase
                          format, e.g. compartment-id --> compartmentId), while
                          the values of the keys need to be populated by the
                          user before using the sample file as an input to this
                          command. For any command option that accepts multiple
                          values, the value of the key can be a JSON array.
                          Options can still be provided on the command line. If
                          an option exists in both the JSON document and the
                          command line then the command line specified value
                          will be used.
                          
                          For examples on usage of this option,
                          please see our "using CLI with advanced JSON options"
                          link: https://docs.cloud.oracle.com/iaas/Content/API/S
                          DKDocs/cliusing.htm#AdvancedJSONOptions
  -?, -h, --help          For detailed help on any of these individual commands,
                          enter <command> --help.

