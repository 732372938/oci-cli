CLI command reference is now available at https://docs.cloud.oracle.com/iaas/tools/oci-cli/latest/oci_cli_docs/.
This file contains all the help for the 'email' command. 
This file is generated by running scripts/doc-gen/generate_cli_doc_pages,py, which dumps the output of --help for every command.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci email --help
Usage: oci email [OPTIONS] COMMAND [ARGS]...

  Email Delivery Service CLI

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  sender       The full information representing an approved...
  suppression  The full information representing an email...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci email sender --help
Usage: oci email sender [OPTIONS] COMMAND [ARGS]...

  The full information representing an approved sender.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  create  Creates a sender for a tenancy in a given...
  delete  Deletes an approved sender for a tenancy in a...
  get     Gets an approved sender for a given...
  list    Gets a collection of approved sender email...
  update  Replaces the set of tags for a sender with...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci email sender create --help
Usage: oci email sender create [OPTIONS]

  Creates a sender for a tenancy in a given compartment.

Options:
  -c, --compartment-id TEXT       The OCID of the compartment that contains the
                                  sender. [required]
  --email-address TEXT            The email address of the sender. [required]
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --wait-for-state [CREATING|ACTIVE|DELETING|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state. If timeout is reached, a
                                  return code of 2 is returned. For any other
                                  error, a return code of 1 is returned.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci email sender delete --help
Usage: oci email sender delete [OPTIONS]

  Deletes an approved sender for a tenancy in a given compartment for a
  provided `senderId`.

Options:
  --sender-id TEXT                The unique OCID of the sender. [required]
  --if-match TEXT                 Used for optimistic concurrency control. In
                                  the update or delete call for a resource, set
                                  the `if-match` parameter to the value of the
                                  etag from a previous get, create, or update
                                  response for that resource.  The resource will
                                  be updated or deleted only if the etag you
                                  provide matches the resource's current etag
                                  value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [CREATING|ACTIVE|DELETING|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state. If timeout is reached, a
                                  return code of 2 is returned. For any other
                                  error, a return code of 1 is returned.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci email sender get --help
Usage: oci email sender get [OPTIONS]

  Gets an approved sender for a given `senderId`.

Options:
  --sender-id TEXT  The unique OCID of the sender. [required]
  --from-json TEXT  Provide input to this command as a JSON document from a file
                    using the file://path-to/file syntax.
                    
                    The --generate-full-
                    command-json-input option can be used to generate a sample
                    json file to be used with this command option. The key names
                    are pre-populated and match the command option names
                    (converted to camelCase format, e.g. compartment-id -->
                    compartmentId), while the values of the keys need to be
                    populated by the user before using the sample file as an
                    input to this command. For any command option that accepts
                    multiple values, the value of the key can be a JSON array.
                    Options can still be provided on the command line. If an
                    option exists in both the JSON document and the command line
                    then the command line specified value will be used.
                    
                    For
                    examples on usage of this option, please see our "using CLI
                    with advanced JSON options" link: https://docs.cloud.oracle.
                    com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                    s
  -?, -h, --help    For detailed help on any of these individual commands, enter
                    <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci email sender list --help
Usage: oci email sender list [OPTIONS]

  Gets a collection of approved sender email addresses and sender IDs.

Options:
  -c, --compartment-id TEXT       The OCID for the compartment. [required]
  --lifecycle-state [CREATING|ACTIVE|DELETING|DELETED]
                                  The current state of a sender.
  --email-address TEXT            The email address of the approved sender.
  --page TEXT                     For list pagination. The value of the opc-
                                  next-page response header from the previous
                                  "List" call. For important details about how
                                  pagination works, see [List Pagination].
  --limit INTEGER                 For list pagination. The maximum number of
                                  results per page, or items to return in a
                                  paginated "List" call. `1` is the minimum,
                                  `1000` is the maximum. For important details
                                  about how pagination works, see [List
                                  Pagination].
  --sort-by [TIMECREATED|EMAILADDRESS]
                                  The field to sort by. The `TIMECREATED` value
                                  returns the list in in descending order by
                                  default. The `EMAILADDRESS` value returns the
                                  list in ascending order by default. Use the
                                  `SortOrderQueryParam` to change the direction
                                  of the returned list of items.
  --sort-order [ASC|DESC]         The sort order to use, either ascending or
                                  descending order.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci email sender update --help
Usage: oci email sender update [OPTIONS]

  Replaces the set of tags for a sender with the tags provided. If either
  freeform or defined tags are omitted, the tags for that set remain the same.
  Each set must include the full set of tags for the sender, partial updates
  are not permitted. For more information about tagging, see [Resource Tags].

Options:
  --sender-id TEXT                The unique OCID of the sender. [required]
  --freeform-tags COMPLEX TYPE    Free-form tags for this resource. Each tag is
                                  a simple key-value pair with no predefined
                                  name, type, or namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Department": "Finance"}`
                                  This is a complex
                                  type whose value must be valid JSON. The value
                                  can be provided as a string on the command
                                  line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --defined-tags COMPLEX TYPE     Defined tags for this resource. Each key is
                                  predefined and scoped to a namespace. For more
                                  information, see [Resource Tags]. Example:
                                  `{"Operations": {"CostCenter": "42"}}`
                                  This is
                                  a complex type whose value must be valid JSON.
                                  The value can be provided as a string on the
                                  command line or passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --if-match TEXT                 Used for optimistic concurrency control. In
                                  the update or delete call for a resource, set
                                  the `if-match` parameter to the value of the
                                  etag from a previous get, create, or update
                                  response for that resource.  The resource will
                                  be updated or deleted only if the etag you
                                  provide matches the resource's current etag
                                  value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [CREATING|ACTIVE|DELETING|DELETED]
                                  This operation creates, modifies or deletes a
                                  resource that has a defined lifecycle state.
                                  Specify this option to perform the action and
                                  then wait until the resource reaches a given
                                  lifecycle state. If timeout is reached, a
                                  return code of 2 is returned. For any other
                                  error, a return code of 1 is returned.
  --max-wait-seconds INTEGER      The maximum time to wait for the resource to
                                  reach the lifecycle state defined by --wait-
                                  for-state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the resource to see if it has reached
                                  the lifecycle state defined by --wait-for-
                                  state. Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci email suppression --help
Usage: oci email suppression [OPTIONS] COMMAND [ARGS]...

  The full information representing an email suppression.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  create  Adds recipient email addresses to the...
  delete  Removes a suppressed recipient email address...
  get     Gets the details of a suppressed recipient...
  list    Gets a list of suppressed recipient email...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci email suppression create --help
Usage: oci email suppression create [OPTIONS]

  Adds recipient email addresses to the suppression list for a tenancy.
  Addresses added to the suppression list via the API are denoted as "MANUAL"
  in the `reason` field. *Note:* All email addresses added to the suppression
  list are normalized to include only lowercase letters.

Options:
  -c, --compartment-id TEXT  The OCID of the compartment to contain the
                             suppression. Since suppressions are at the customer
                             level, this must be the tenancy OCID. [required]
  --email-address TEXT       The recipient email address of the suppression.
                             [required]
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file using the file://path-to/file syntax.
                             The --generate-full-command-json-input option can
                             be used to generate a sample json file to be used
                             with this command option. The key names are pre-
                             populated and match the command option names
                             (converted to camelCase format, e.g. compartment-id
                             --> compartmentId), while the values of the keys
                             need to be populated by the user before using the
                             sample file as an input to this command. For any
                             command option that accepts multiple values, the
                             value of the key can be a JSON array.
                             
                             Options can
                             still be provided on the command line. If an option
                             exists in both the JSON document and the command
                             line then the command line specified value will be
                             used.
                             
                             For examples on usage of this option, please
                             see our "using CLI with advanced JSON options"
                             link: https://docs.cloud.oracle.com/iaas/Content/AP
                             I/SDKDocs/cliusing.htm#AdvancedJSONOptions
  -?, -h, --help             For detailed help on any of these individual
                             commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci email suppression delete --help
Usage: oci email suppression delete [OPTIONS]

  Removes a suppressed recipient email address from the suppression list for a
  tenancy in a given compartment for a provided `suppressionId`.

Options:
  --suppression-id TEXT  The unique OCID of the suppression. [required]
  --force                Perform deletion without prompting for confirmation.
  --from-json TEXT       Provide input to this command as a JSON document from a
                         file using the file://path-to/file syntax.
                         
                         The
                         --generate-full-command-json-input option can be used
                         to generate a sample json file to be used with this
                         command option. The key names are pre-populated and
                         match the command option names (converted to camelCase
                         format, e.g. compartment-id --> compartmentId), while
                         the values of the keys need to be populated by the user
                         before using the sample file as an input to this
                         command. For any command option that accepts multiple
                         values, the value of the key can be a JSON array.
                         Options can still be provided on the command line. If
                         an option exists in both the JSON document and the
                         command line then the command line specified value will
                         be used.
                         
                         For examples on usage of this option, please
                         see our "using CLI with advanced JSON options" link: ht
                         tps://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cl
                         iusing.htm#AdvancedJSONOptions
  -?, -h, --help         For detailed help on any of these individual commands,
                         enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci email suppression get --help
Usage: oci email suppression get [OPTIONS]

  Gets the details of a suppressed recipient email address for a given
  `suppressionId`. Each suppression is given a unique OCID.

Options:
  --suppression-id TEXT  The unique OCID of the suppression. [required]
  --from-json TEXT       Provide input to this command as a JSON document from a
                         file using the file://path-to/file syntax.
                         
                         The
                         --generate-full-command-json-input option can be used
                         to generate a sample json file to be used with this
                         command option. The key names are pre-populated and
                         match the command option names (converted to camelCase
                         format, e.g. compartment-id --> compartmentId), while
                         the values of the keys need to be populated by the user
                         before using the sample file as an input to this
                         command. For any command option that accepts multiple
                         values, the value of the key can be a JSON array.
                         Options can still be provided on the command line. If
                         an option exists in both the JSON document and the
                         command line then the command line specified value will
                         be used.
                         
                         For examples on usage of this option, please
                         see our "using CLI with advanced JSON options" link: ht
                         tps://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cl
                         iusing.htm#AdvancedJSONOptions
  -?, -h, --help         For detailed help on any of these individual commands,
                         enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci email suppression list --help
Usage: oci email suppression list [OPTIONS]

  Gets a list of suppressed recipient email addresses for a user. The
  `compartmentId` for suppressions must be a tenancy OCID. The returned list
  is sorted by creation time in descending order.

Options:
  -c, --compartment-id TEXT       The OCID for the compartment. [required]
  --email-address TEXT            The email address of the suppression.
  --time-created-greater-than-or-equal-to DATETIME
                                  Search for suppressions that were created
                                  within a specific date range, using this
                                  parameter to specify the earliest creation
                                  date for the returned list (inclusive).
                                  Specifying this parameter without the
                                  corresponding `timeCreatedLessThan` parameter
                                  will retrieve suppressions created from the
                                  given `timeCreatedGreaterThanOrEqualTo` to the
                                  current time, in "YYYY-MM-ddThh:mmZ" format
                                  with a Z offset, as defined by RFC 3339.
                                  **Example:** 2016-12-19T16:39:57.600Z
                                  
                                  The
                                  following datetime formats are supported:
                                  
                                  UTC with milliseconds
                                  ***********************
                                  Format: YYYY-MM-DDTHH:mm:ss.sssTZD
                                  Example:
                                  2017-09-15T20:30:00.123Z
                                  
                                  UTC without
                                  milliseconds
                                  **************************
                                  Format: YYYY-MM-DDTHH:mm:ssTZD
                                  Example:
                                  2017-09-15T20:30:00Z
                                  
                                  UTC with minute
                                  precision
                                  **************************
                                  Format:
                                  YYYY-MM-DDTHH:mmTZD
                                  Example: 2017-09-15T20:30Z
                                  
                                  Timezone with milliseconds
                                  ***************************
                                  Format: YYYY-MM-
                                  DDTHH:mm:ssTZD
                                  Example:
                                  2017-09-15T12:30:00.456-08:00,
                                  2017-09-15T12:30:00.456-0800
                                  
                                  Timezone
                                  without milliseconds
                                  *******************************
                                  Format: YYYY-
                                  MM-DDTHH:mm:ssTZD
                                  Example:
                                  2017-09-15T12:30:00-08:00,
                                  2017-09-15T12:30:00-0800
                                  
                                  Timezone with
                                  minute precision
                                  *******************************
                                  Format: YYYY-
                                  MM-DDTHH:mmTZD
                                  Example:
                                  2017-09-15T12:30-08:00,
                                  2017-09-15T12:30-0800
                                  
                                  Short date and time
                                  ********************
                                  The
                                  timezone for this date and time will be taken
                                  as UTC (Needs to be surrounded by single or
                                  double quotes)
                                  Format: 'YYYY-MM-DD HH:mm' or
                                  "YYYY-MM-DD HH:mm"
                                  Example: '2017-09-15 17:25'
                                  
                                  Date Only
                                  *********
                                  This date will be taken
                                  as midnight UTC of that day
                                  Format: YYYY-MM-DD
                                  Example: 2017-09-15
                                  
                                  Epoch seconds
                                  **************
                                  Example: 1412195400
  --time-created-less-than DATETIME
                                  Search for suppressions that were created
                                  within a specific date range, using this
                                  parameter to specify the latest creation date
                                  for the returned list (exclusive). Specifying
                                  this parameter without the corresponding
                                  `timeCreatedGreaterThanOrEqualTo` parameter
                                  will retrieve all suppressions created before
                                  the specified end date, in "YYYY-MM-ddThh:mmZ"
                                  format with a Z offset, as defined by RFC
                                  3339.
                                  
                                  **Example:** 2016-12-19T16:39:57.600Z
                                  
                                  The following datetime formats are supported:
                                  
                                  UTC with milliseconds
                                  ***********************
                                  Format: YYYY-MM-
                                  DDTHH:mm:ss.sssTZD
                                  Example:
                                  2017-09-15T20:30:00.123Z
                                  
                                  UTC without
                                  milliseconds
                                  **************************
                                  Format: YYYY-MM-DDTHH:mm:ssTZD
                                  Example:
                                  2017-09-15T20:30:00Z
                                  
                                  UTC with minute
                                  precision
                                  **************************
                                  Format:
                                  YYYY-MM-DDTHH:mmTZD
                                  Example: 2017-09-15T20:30Z
                                  
                                  Timezone with milliseconds
                                  ***************************
                                  Format: YYYY-MM-
                                  DDTHH:mm:ssTZD
                                  Example:
                                  2017-09-15T12:30:00.456-08:00,
                                  2017-09-15T12:30:00.456-0800
                                  
                                  Timezone
                                  without milliseconds
                                  *******************************
                                  Format: YYYY-
                                  MM-DDTHH:mm:ssTZD
                                  Example:
                                  2017-09-15T12:30:00-08:00,
                                  2017-09-15T12:30:00-0800
                                  
                                  Timezone with
                                  minute precision
                                  *******************************
                                  Format: YYYY-
                                  MM-DDTHH:mmTZD
                                  Example:
                                  2017-09-15T12:30-08:00,
                                  2017-09-15T12:30-0800
                                  
                                  Short date and time
                                  ********************
                                  The
                                  timezone for this date and time will be taken
                                  as UTC (Needs to be surrounded by single or
                                  double quotes)
                                  Format: 'YYYY-MM-DD HH:mm' or
                                  "YYYY-MM-DD HH:mm"
                                  Example: '2017-09-15 17:25'
                                  
                                  Date Only
                                  *********
                                  This date will be taken
                                  as midnight UTC of that day
                                  Format: YYYY-MM-DD
                                  Example: 2017-09-15
                                  
                                  Epoch seconds
                                  **************
                                  Example: 1412195400
  --page TEXT                     For list pagination. The value of the opc-
                                  next-page response header from the previous
                                  "List" call. For important details about how
                                  pagination works, see [List Pagination].
  --limit INTEGER                 For list pagination. The maximum number of
                                  results per page, or items to return in a
                                  paginated "List" call. `1` is the minimum,
                                  `1000` is the maximum. For important details
                                  about how pagination works, see [List
                                  Pagination].
  --sort-by [TIMECREATED|EMAILADDRESS]
                                  The field to sort by. The `TIMECREATED` value
                                  returns the list in in descending order by
                                  default. The `EMAILADDRESS` value returns the
                                  list in ascending order by default. Use the
                                  `SortOrderQueryParam` to change the direction
                                  of the returned list of items.
  --sort-order [ASC|DESC]         The sort order to use, either ascending or
                                  descending order.
  --all                           Fetches all pages of results. If you provide
                                  this option, then you cannot provide the
                                  --limit option.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

