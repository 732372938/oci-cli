CLI command reference is now available at https://docs.cloud.oracle.com/iaas/tools/oci-cli/latest/oci_cli_docs/.
This file contains all the help for the 'oce' command. 
This file is generated by running scripts/doc-gen/generate_cli_doc_pages,py, which dumps the output of --help for every command.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci oce --help
Usage: oci oce [OPTIONS] COMMAND [ARGS]...

  Oracle Content and Experience is a cloud-based content hub to drive omni-
  channel content management and accelerate experience delivery

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  oce-instance            Details of OceInstance.
  work-request            A description of workrequest status
  work-request-error      An error encountered while executing a work...
  work-request-log-entry  A log message from the execution of a work...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci oce oce-instance --help
Usage: oci oce oce-instance [OPTIONS] COMMAND [ARGS]...

  Details of OceInstance.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  change-compartment  Moves a OceInstance into a different...
  create              Creates a new OceInstance.
  delete              Deletes a OceInstance resource by identifier
  get                 Gets a OceInstance by identifier
  list                Returns a list of OceInstances.
  update              Updates the OceInstance

++++++++++++++++++++++++++++++++++++++++++++++
$ oci oce oce-instance change-compartment --help
Usage: oci oce oce-instance change-compartment [OPTIONS]

  Moves a OceInstance into a different compartment

Options:
  --oce-instance-id TEXT          unique OceInstance identifier [required]
  -c, --compartment-id TEXT       The [OCID] of the compartment into which the
                                  OceInstance should be moved. [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource. The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED|CANCELING|CANCELED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state. If timeout is
                                  reached, a return code of 2 is returned. For
                                  any other error, a return code of 1 is
                                  returned.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci oce oce-instance create --help
Usage: oci oce oce-instance create [OPTIONS]

  Creates a new OceInstance.

Options:
  -c, --compartment-id TEXT       Compartment Identifier [required]
  --name TEXT                     OceInstance Name [required]
  --tenancy-id TEXT               Tenancy Identifier [required]
  --idcs-access-token TEXT        Identity Cloud Service access token
                                  identifying a stripe and service administrator
                                  user [required]
  --tenancy-name TEXT             Tenancy Name [required]
  --object-storage-namespace TEXT
                                  Object Storage Namespace of Tenancy [required]
  --admin-email TEXT              Admin Email for Notification [required]
  --description TEXT              OceInstance description
  --freeform-tags COMPLEX TYPE    Simple key-value pair that is applied without
                                  any predefined name, type or scope. Exists for
                                  cross-compatibility only. Example: `{"bar-
                                  key": "value"}`
                                  This is a complex type whose
                                  value must be valid JSON. The value can be
                                  provided as a string on the command line or
                                  passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --defined-tags COMPLEX TYPE     Usage of predefined tag keys. These predefined
                                  keys are scoped to namespaces. Example:
                                  `{"foo-namespace": {"bar-key": "value"}}`
                                  This
                                  is a complex type whose value must be valid
                                  JSON. The value can be provided as a string on
                                  the command line or passed in as a file using
                                  the file://path/to/file syntax.
                                  
                                  The
                                  --generate-param-json-input option can be used
                                  to generate an example of the JSON which must
                                  be provided. We recommend storing this example
                                  in a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED|CANCELING|CANCELED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state. If timeout is
                                  reached, a return code of 2 is returned. For
                                  any other error, a return code of 1 is
                                  returned.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci oce oce-instance delete --help
Usage: oci oce oce-instance delete [OPTIONS]

  Deletes a OceInstance resource by identifier

Options:
  --oce-instance-id TEXT          unique OceInstance identifier [required]
  --idcs-access-token TEXT        IDCS access token identifying a stripe and
                                  service administrator user [required]
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource. The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform deletion without prompting for
                                  confirmation.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED|CANCELING|CANCELED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state. If timeout is
                                  reached, a return code of 2 is returned. For
                                  any other error, a return code of 1 is
                                  returned.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci oce oce-instance get --help
Usage: oci oce oce-instance get [OPTIONS]

  Gets a OceInstance by identifier

Options:
  --oce-instance-id TEXT  unique OceInstance identifier [required]
  --from-json TEXT        Provide input to this command as a JSON document from
                          a file using the file://path-to/file syntax.
                          
                          The
                          --generate-full-command-json-input option can be used
                          to generate a sample json file to be used with this
                          command option. The key names are pre-populated and
                          match the command option names (converted to camelCase
                          format, e.g. compartment-id --> compartmentId), while
                          the values of the keys need to be populated by the
                          user before using the sample file as an input to this
                          command. For any command option that accepts multiple
                          values, the value of the key can be a JSON array.
                          Options can still be provided on the command line. If
                          an option exists in both the JSON document and the
                          command line then the command line specified value
                          will be used.
                          
                          For examples on usage of this option,
                          please see our "using CLI with advanced JSON options"
                          link: https://docs.cloud.oracle.com/iaas/Content/API/S
                          DKDocs/cliusing.htm#AdvancedJSONOptions
  -?, -h, --help          For detailed help on any of these individual commands,
                          enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci oce oce-instance list --help
Usage: oci oce oce-instance list [OPTIONS]

  Returns a list of OceInstances.

Options:
  -c, --compartment-id TEXT       The ID of the compartment in which to list
                                  resources. [required]
  --display-name TEXT             A user-friendly name. Does not have to be
                                  unique, and it's changeable.
                                  
                                  Example: `My new
                                  resource`
  --limit INTEGER                 The maximum number of items to return.
  --page TEXT                     The page token representing the page at which
                                  to start retrieving results. This is usually
                                  retrieved from a previous list call.
  --sort-order [ASC|DESC]         The sort order to use, either 'asc' or 'desc'.
  --sort-by [timeCreated|displayName]
                                  The field to sort by. Only one sort order may
                                  be provided. Default order for timeCreated is
                                  descending. Default order for displayName is
                                  ascending. If no value is specified
                                  timeCreated is default.
  --lifecycle-state [CREATING|UPDATING|ACTIVE|DELETING|DELETED|FAILED]
                                  Filter results on lifecycleState.
  --page-size INTEGER             When fetching results, the number of results
                                  to fetch per call. Only valid when used with
                                  --all or --limit, and ignored otherwise.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci oce oce-instance update --help
Usage: oci oce oce-instance update [OPTIONS]

  Updates the OceInstance

Options:
  --oce-instance-id TEXT          unique OceInstance identifier [required]
  --description TEXT              OceInstance description
  --freeform-tags COMPLEX TYPE    Simple key-value pair that is applied without
                                  any predefined name, type or scope. Exists for
                                  cross-compatibility only. Example: `{"bar-
                                  key": "value"}`
                                  This is a complex type whose
                                  value must be valid JSON. The value can be
                                  provided as a string on the command line or
                                  passed in as a file using
                                  the
                                  file://path/to/file syntax.
                                  
                                  The --generate-
                                  param-json-input option can be used to
                                  generate an example of the JSON which must be
                                  provided. We recommend storing this example
                                  in
                                  a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --defined-tags COMPLEX TYPE     Usage of predefined tag keys. These predefined
                                  keys are scoped to namespaces. Example:
                                  `{"foo-namespace": {"bar-key": "value"}}`
                                  This
                                  is a complex type whose value must be valid
                                  JSON. The value can be provided as a string on
                                  the command line or passed in as a file using
                                  the file://path/to/file syntax.
                                  
                                  The
                                  --generate-param-json-input option can be used
                                  to generate an example of the JSON which must
                                  be provided. We recommend storing this example
                                  in a file, modifying it as needed and then
                                  passing it back in via the file:// syntax.
  --if-match TEXT                 For optimistic concurrency control. In the PUT
                                  or DELETE call for a resource, set the `if-
                                  match` parameter to the value of the etag from
                                  a previous GET or POST response for that
                                  resource. The resource will be updated or
                                  deleted only if the etag you provide matches
                                  the resource's current etag value.
  --force                         Perform update without prompting for
                                  confirmation.
  --wait-for-state [ACCEPTED|IN_PROGRESS|FAILED|SUCCEEDED|CANCELING|CANCELED]
                                  This operation asynchronously creates,
                                  modifies or deletes a resource and uses a work
                                  request to track the progress of the
                                  operation. Specify this option to perform the
                                  action and then wait until the work request
                                  reaches a certain state. If timeout is
                                  reached, a return code of 2 is returned. For
                                  any other error, a return code of 1 is
                                  returned.
  --max-wait-seconds INTEGER      The maximum time to wait for the work request
                                  to reach the state defined by --wait-for-
                                  state. Defaults to 1200 seconds.
  --wait-interval-seconds INTEGER
                                  Check every --wait-interval-seconds to see
                                  whether the work request to see if it has
                                  reached the state defined by --wait-for-state.
                                  Defaults to 30 seconds.
  --from-json TEXT                Provide input to this command as a JSON
                                  document from a file using the file://path-
                                  to/file syntax.
                                  
                                  The --generate-full-command-
                                  json-input option can be used to generate a
                                  sample json file to be used with this command
                                  option. The key names are pre-populated and
                                  match the command option names (converted to
                                  camelCase format, e.g. compartment-id -->
                                  compartmentId), while the values of the keys
                                  need to be populated by the user before using
                                  the sample file as an input to this command.
                                  For any command option that accepts multiple
                                  values, the value of the key can be a JSON
                                  array.
                                  
                                  Options can still be provided on the
                                  command line. If an option exists in both the
                                  JSON document and the command line then the
                                  command line specified value will be used.
                                  For examples on usage of this option, please
                                  see our "using CLI with advanced JSON options"
                                  link: https://docs.cloud.oracle.com/iaas/Conte
                                  nt/API/SDKDocs/cliusing.htm#AdvancedJSONOption
                                  s
  -?, -h, --help                  For detailed help on any of these individual
                                  commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci oce work-request --help
Usage: oci oce work-request [OPTIONS] COMMAND [ARGS]...

  A description of workrequest status

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  get   Gets the status of the work request with the...
  list  Lists the work requests in a compartment.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci oce work-request get --help
Usage: oci oce work-request get [OPTIONS]

  Gets the status of the work request with the given ID.

Options:
  --work-request-id TEXT  The ID of the asynchronous request. [required]
  --from-json TEXT        Provide input to this command as a JSON document from
                          a file using the file://path-to/file syntax.
                          
                          The
                          --generate-full-command-json-input option can be used
                          to generate a sample json file to be used with this
                          command option. The key names are pre-populated and
                          match the command option names (converted to camelCase
                          format, e.g. compartment-id --> compartmentId), while
                          the values of the keys need to be populated by the
                          user before using the sample file as an input to this
                          command. For any command option that accepts multiple
                          values, the value of the key can be a JSON array.
                          Options can still be provided on the command line. If
                          an option exists in both the JSON document and the
                          command line then the command line specified value
                          will be used.
                          
                          For examples on usage of this option,
                          please see our "using CLI with advanced JSON options"
                          link: https://docs.cloud.oracle.com/iaas/Content/API/S
                          DKDocs/cliusing.htm#AdvancedJSONOptions
  -?, -h, --help          For detailed help on any of these individual commands,
                          enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci oce work-request list --help
Usage: oci oce work-request list [OPTIONS]

  Lists the work requests in a compartment.

Options:
  -c, --compartment-id TEXT  The ID of the compartment in which to list
                             resources. [required]
  --resource-id TEXT         The resource Identifier for which to list
                             resources.
  --page TEXT                The page token representing the page at which to
                             start retrieving results. This is usually retrieved
                             from a previous list call.
  --limit INTEGER            The maximum number of items to return.
  --page-size INTEGER        When fetching results, the number of results to
                             fetch per call. Only valid when used with --all or
                             --limit, and ignored otherwise.
  --from-json TEXT           Provide input to this command as a JSON document
                             from a file using the file://path-to/file syntax.
                             The --generate-full-command-json-input option can
                             be used to generate a sample json file to be used
                             with this command option. The key names are pre-
                             populated and match the command option names
                             (converted to camelCase format, e.g. compartment-id
                             --> compartmentId), while the values of the keys
                             need to be populated by the user before using the
                             sample file as an input to this command. For any
                             command option that accepts multiple values, the
                             value of the key can be a JSON array.
                             
                             Options can
                             still be provided on the command line. If an option
                             exists in both the JSON document and the command
                             line then the command line specified value will be
                             used.
                             
                             For examples on usage of this option, please
                             see our "using CLI with advanced JSON options"
                             link: https://docs.cloud.oracle.com/iaas/Content/AP
                             I/SDKDocs/cliusing.htm#AdvancedJSONOptions
  -?, -h, --help             For detailed help on any of these individual
                             commands, enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci oce work-request-error --help
Usage: oci oce work-request-error [OPTIONS] COMMAND [ARGS]...

  An error encountered while executing a work request.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  list  Return a (paginated) list of errors for a...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci oce work-request-error list --help
Usage: oci oce work-request-error list [OPTIONS]

  Return a (paginated) list of errors for a given work request.

Options:
  --work-request-id TEXT  The ID of the asynchronous request. [required]
  --page TEXT             The page token representing the page at which to start
                          retrieving results. This is usually retrieved from a
                          previous list call.
  --limit INTEGER         The maximum number of items to return.
  --page-size INTEGER     When fetching results, the number of results to fetch
                          per call. Only valid when used with --all or --limit,
                          and ignored otherwise.
  --from-json TEXT        Provide input to this command as a JSON document from
                          a file using the file://path-to/file syntax.
                          
                          The
                          --generate-full-command-json-input option can be used
                          to generate a sample json file to be used with this
                          command option. The key names are pre-populated and
                          match the command option names (converted to camelCase
                          format, e.g. compartment-id --> compartmentId), while
                          the values of the keys need to be populated by the
                          user before using the sample file as an input to this
                          command. For any command option that accepts multiple
                          values, the value of the key can be a JSON array.
                          Options can still be provided on the command line. If
                          an option exists in both the JSON document and the
                          command line then the command line specified value
                          will be used.
                          
                          For examples on usage of this option,
                          please see our "using CLI with advanced JSON options"
                          link: https://docs.cloud.oracle.com/iaas/Content/API/S
                          DKDocs/cliusing.htm#AdvancedJSONOptions
  -?, -h, --help          For detailed help on any of these individual commands,
                          enter <command> --help.

++++++++++++++++++++++++++++++++++++++++++++++
$ oci oce work-request-log-entry --help
Usage: oci oce work-request-log-entry [OPTIONS] COMMAND [ARGS]...

  A log message from the execution of a work request.

Options:
  -?, -h, --help  For detailed help on any of these individual commands, enter
                  <command> --help.

Commands:
  list  Return a (paginated) list of logs for a given...

++++++++++++++++++++++++++++++++++++++++++++++
$ oci oce work-request-log-entry list --help
Usage: oci oce work-request-log-entry list [OPTIONS]

  Return a (paginated) list of logs for a given work request.

Options:
  --work-request-id TEXT  The ID of the asynchronous request. [required]
  --page TEXT             The page token representing the page at which to start
                          retrieving results. This is usually retrieved from a
                          previous list call.
  --limit INTEGER         The maximum number of items to return.
  --page-size INTEGER     When fetching results, the number of results to fetch
                          per call. Only valid when used with --all or --limit,
                          and ignored otherwise.
  --from-json TEXT        Provide input to this command as a JSON document from
                          a file using the file://path-to/file syntax.
                          
                          The
                          --generate-full-command-json-input option can be used
                          to generate a sample json file to be used with this
                          command option. The key names are pre-populated and
                          match the command option names (converted to camelCase
                          format, e.g. compartment-id --> compartmentId), while
                          the values of the keys need to be populated by the
                          user before using the sample file as an input to this
                          command. For any command option that accepts multiple
                          values, the value of the key can be a JSON array.
                          Options can still be provided on the command line. If
                          an option exists in both the JSON document and the
                          command line then the command line specified value
                          will be used.
                          
                          For examples on usage of this option,
                          please see our "using CLI with advanced JSON options"
                          link: https://docs.cloud.oracle.com/iaas/Content/API/S
                          DKDocs/cliusing.htm#AdvancedJSONOptions
  -?, -h, --help          For detailed help on any of these individual commands,
                          enter <command> --help.

